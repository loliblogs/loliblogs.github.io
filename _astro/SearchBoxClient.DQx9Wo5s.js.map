{"version":3,"file":"SearchBoxClient.DQx9Wo5s.js","sources":["../../src/components/SearchBoxClient.tsx","../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/lite.mjs"],"sourcesContent":["/**\n * 搜索框客户端增强组件\n * 不渲染DOM，只增强已存在的静态HTML\n */\n\nimport { useEffect, useState, useRef } from 'react';\nimport { clsx } from 'clsx/lite';\n\ninterface SearchBoxClientProps {\n  searchUrl?: string;\n}\n\ninterface LocalMatch {\n  text: string;\n  element: HTMLElement;\n  offset: number;\n  context: string;\n}\n\ntype Timeout = ReturnType<typeof setTimeout>;\n\nconst SearchBoxClient: React.FC<SearchBoxClientProps> = ({\n  searchUrl = '/search',\n}) => {\n  const [keyword, setKeyword] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [localResults, setLocalResults] = useState<LocalMatch[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const searchTimeoutRef = useRef<Timeout | null>(null);\n  const highlightTimeoutRef = useRef<Timeout | null>(null);\n  const lastHighlightRef = useRef<HTMLElement | null>(null);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const dropdownRef = useRef<HTMLElement | null>(null);\n\n  // 搜索文章内容 - 优化版本，使用正则表达式避免重复toLowerCase\n  const findDOMMatches = (searchKeyword: string): LocalMatch[] => {\n    const article = document.querySelector('article');\n    if (!article || !searchKeyword.trim()) return [];\n\n    const matches: LocalMatch[] = [];\n    const keywordLen = searchKeyword.length;\n\n    // 转义特殊字符并创建不区分大小写的正则表达式\n    const escapedKeyword = searchKeyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp(escapedKeyword, 'gi');\n\n    // 优化的TreeWalker过滤器 - 跳过太短的文本节点\n    const walker = document.createTreeWalker(\n      article,\n      NodeFilter.SHOW_TEXT,\n      {\n        acceptNode: (node: Node) => {\n          const parent = node.parentElement;\n          if (parent?.closest('script, style')) {\n            return NodeFilter.FILTER_REJECT;\n          }\n          // 跳过比关键词还短的文本节点\n          if (!node.textContent || node.textContent.length < keywordLen) {\n            return NodeFilter.FILTER_REJECT;\n          }\n          return NodeFilter.FILTER_ACCEPT;\n        },\n      },\n    );\n\n    let node: Node | null;\n    while ((node = walker.nextNode()) && matches.length < 10) {\n      const text = node.textContent;\n      if (!text) continue;\n\n      const element = node.parentElement;\n      if (!(element instanceof HTMLElement)) continue;\n\n      // 重置正则表达式状态\n      regex.lastIndex = 0;\n\n      // 使用exec获取所有匹配，性能远优于indexOf\n      let match;\n      while ((match = regex.exec(text)) !== null && matches.length < 10) {\n        const index = match.index;\n        const matchedText = match[0];\n\n        // 生成上下文\n        const contextStart = Math.max(0, index - 30);\n        const contextEnd = Math.min(text.length, index + matchedText.length + 30);\n        let context = text.substring(contextStart, contextEnd);\n\n        if (contextStart > 0) context = '...' + context;\n        if (contextEnd < text.length) context = context + '...';\n\n        matches.push({\n          text: matchedText,\n          element,\n          offset: index,\n          context,\n        });\n\n        // 跳过已匹配的部分，避免重叠匹配\n        regex.lastIndex = index + keywordLen;\n      }\n    }\n\n    return matches;\n  };\n\n  // 高亮元素\n  const highlightElement = (element: HTMLElement, duration = 3000) => {\n    if (lastHighlightRef.current) {\n      lastHighlightRef.current.style.outline = '';\n      lastHighlightRef.current.style.outlineOffset = '';\n    }\n    if (highlightTimeoutRef.current !== null) {\n      clearTimeout(highlightTimeoutRef.current);\n    }\n\n    element.style.outline = '0.125rem solid var(--color-primary)';\n    element.style.outlineOffset = '0.125rem';\n    lastHighlightRef.current = element;\n\n    highlightTimeoutRef.current = setTimeout(() => {\n      if (lastHighlightRef.current === element) {\n        element.style.outline = '';\n        element.style.outlineOffset = '';\n        lastHighlightRef.current = null;\n      }\n    }, duration);\n  };\n\n  // 滚动到结果\n  const scrollToResult = (result: LocalMatch) => {\n    result.element.scrollIntoView({\n      behavior: 'auto',\n      block: 'center',\n    });\n    highlightElement(result.element);\n\n    // 清空搜索状态\n    setKeyword('');\n    setShowDropdown(false);\n    setLocalResults([]);\n    setSelectedIndex(0);\n\n    // 清空输入框\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  };\n\n  // 更新DOM中的搜索结果\n  const updateResultsDOM = () => {\n    const contentWrapper = document.querySelector('[data-search-results-wrapper]');\n    const globalSearch = document.querySelector<HTMLAnchorElement>('[data-global-search]');\n    const keywordSpan = document.querySelector('[data-search-keyword]');\n\n    if (!contentWrapper) return;\n\n    // 更新全站搜索链接\n    if (globalSearch && keywordSpan && keyword.trim()) {\n      globalSearch.href = `${searchUrl}?q=${encodeURIComponent(keyword)}`;\n      keywordSpan.textContent = `在全站搜索 \"${keyword}\"`;\n\n      // 移除hidden并添加flex布局\n      globalSearch.classList.remove('hidden');\n      globalSearch.classList.add('flex');\n\n      // 更新全站搜索的选中样式 - 需要清理所有可能的样式类\n      globalSearch.classList.remove('bg-muted/20', 'hover:bg-muted/10', 'active:bg-muted/20');\n      if (selectedIndex === 0) {\n        globalSearch.classList.add('bg-muted/20');\n      } else {\n        globalSearch.classList.add('hover:bg-muted/10', 'active:bg-muted/20');\n      }\n\n      // 绑定鼠标悬停事件\n      globalSearch.onmouseenter = () => {\n        setSelectedIndex(0);\n      };\n    } else if (globalSearch) {\n      // 隐藏时添加hidden并移除flex\n      globalSearch.classList.add('hidden');\n      globalSearch.classList.remove('flex');\n    }\n\n    // 直接操作wrapper，不管OverlayScrollbars的结构\n    contentWrapper.replaceChildren();\n\n    if (isSearching) {\n      const loadingDiv = document.createElement('div');\n      loadingDiv.className = 'px-4 py-8 text-center text-muted';\n      loadingDiv.textContent = '搜索中...';\n      contentWrapper.replaceChildren(loadingDiv);\n    } else if (localResults.length > 0) {\n      const fragment = document.createDocumentFragment();\n\n      localResults.forEach((result, index) => {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.setAttribute('data-index', String(index + 1));\n        button.className = clsx(\n          'w-full px-4 py-3 text-left',\n          `\n            border-b border-line/50\n            last:border-0\n          `,\n          'transition-colors',\n          selectedIndex === index + 1\n            ? 'bg-muted/20'\n            : `\n              hover:bg-muted/10\n              active:bg-muted/20\n            `,\n        );\n\n        // 使用 DOM API 创建内容，避免 innerHTML\n        const titleDiv = document.createElement('div');\n        titleDiv.className = 'text-sm text-foreground font-medium';\n        titleDiv.textContent = result.text;\n\n        const contextDiv = document.createElement('div');\n        contextDiv.className = 'text-xs text-muted mt-1 line-clamp-2';\n        contextDiv.textContent = result.context;\n\n        button.appendChild(titleDiv);\n        button.appendChild(contextDiv);\n\n        button.addEventListener('click', () => {\n          scrollToResult(result);\n        });\n        button.addEventListener('mouseenter', () => {\n          setSelectedIndex(index + 1);\n        });\n\n        fragment.appendChild(button);\n      });\n\n      contentWrapper.replaceChildren(fragment);\n    } else if (keyword.trim()) {\n      const noResultDiv = document.createElement('div');\n      noResultDiv.className = 'px-4 py-8 text-center text-muted';\n      noResultDiv.textContent = '本文无匹配内容';\n      contentWrapper.replaceChildren(noResultDiv);\n    }\n  };\n\n  // 处理输入变化\n  const handleInput = (value: string) => {\n    setKeyword(value);\n\n    // 清除之前的定时器\n    if (searchTimeoutRef.current !== null) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    if (!value.trim()) {\n      setShowDropdown(false);\n      setLocalResults([]);\n      setSelectedIndex(0);\n      return;\n    }\n\n    // 防抖搜索\n    setIsSearching(true);\n    searchTimeoutRef.current = setTimeout(() => {\n      const results = findDOMMatches(value);\n      setLocalResults(results);\n      setShowDropdown(true);  // 搜索完成后才显示下拉框\n      setIsSearching(false);\n      setSelectedIndex(0);  // 重置选中项\n    }, 200);\n  };\n\n  // 初始化DOM引用\n  useEffect(() => {\n    const input = document.querySelector<HTMLInputElement>('[data-search-input]');\n    const dropdown = document.querySelector<HTMLElement>('[data-search-dropdown]');\n\n    if (!input || !dropdown) return;\n\n    inputRef.current = input;\n    dropdownRef.current = dropdown;\n  }, []);\n\n  // 绑定事件处理器 - 需要依赖状态更新\n  useEffect(() => {\n    const input = inputRef.current;\n    if (!input) return;\n\n    // 输入事件处理\n    const handleInputEvent = (e: Event) => {\n      const value = (e.target as HTMLInputElement).value;\n      handleInput(value);\n    };\n\n    // 键盘事件处理 - 在这里定义以访问最新状态\n    const handleKeyDownEvent = (e: KeyboardEvent) => {\n      if (!showDropdown) return;\n\n      const totalItems = localResults.length + 1; // +1 for global search\n\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setSelectedIndex(prev => (prev + 1) % totalItems);\n          break;\n\n        case 'ArrowUp':\n          e.preventDefault();\n          setSelectedIndex(prev => (prev - 1 + totalItems) % totalItems);\n          break;\n\n        case 'Enter':\n          e.preventDefault();\n          if (selectedIndex === 0) {\n            window.location.href = `${searchUrl}?q=${encodeURIComponent(keyword)}`;\n          } else {\n            const targetResult = localResults[selectedIndex - 1];\n            if (targetResult) {\n              scrollToResult(targetResult);\n            }\n          }\n          break;\n\n        case 'Escape':\n          setKeyword('');\n          setShowDropdown(false);\n          setLocalResults([]);\n          setSelectedIndex(0);\n          if (inputRef.current) {\n            inputRef.current.value = '';\n            inputRef.current.blur();\n          }\n          break;\n      }\n    };\n\n    // 点击外部关闭\n    const handleClickOutside = (e: MouseEvent) => {\n      const container = document.querySelector('[data-search-container]');\n      if (container && !container.contains(e.target as Node)) {\n        setShowDropdown(false);\n        setSelectedIndex(0);\n      }\n    };\n\n    // 绑定事件\n    input.addEventListener('input', handleInputEvent);\n    input.addEventListener('keydown', handleKeyDownEvent);\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      input.removeEventListener('input', handleInputEvent);\n      input.removeEventListener('keydown', handleKeyDownEvent);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showDropdown, localResults, selectedIndex, keyword, searchUrl]);\n\n  // 更新下拉框显示状态\n  useEffect(() => {\n    if (dropdownRef.current) {\n      if (showDropdown && keyword.trim()) {\n        dropdownRef.current.classList.remove('hidden');\n      } else {\n        dropdownRef.current.classList.add('hidden');\n      }\n    }\n  }, [showDropdown, keyword]);\n\n  // 更新搜索结果\n  useEffect(() => {\n    updateResultsDOM();\n  }, [localResults, isSearching, selectedIndex, keyword, searchUrl]);\n\n  // 选中项滚动\n  useEffect(() => {\n    if (!showDropdown || !dropdownRef.current) return;\n\n    const element = dropdownRef.current.querySelector(`[data-index=\"${selectedIndex}\"]`);\n    element?.scrollIntoView({ block: 'nearest' });\n  }, [selectedIndex, showDropdown]);\n\n  // 清理\n  useEffect(() => {\n    return () => {\n      if (searchTimeoutRef.current !== null) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n      if (highlightTimeoutRef.current !== null) {\n        clearTimeout(highlightTimeoutRef.current);\n      }\n      if (lastHighlightRef.current) {\n        lastHighlightRef.current.style.outline = '';\n        lastHighlightRef.current.style.outlineOffset = '';\n      }\n    };\n  }, []);\n\n  // 不渲染任何内容\n  return null;\n};\n\nexport default SearchBoxClient;\n","export function clsx(){for(var t,r=0,e=\"\",n=arguments.length;r<n;r++)(t=arguments[r])&&\"string\"==typeof t&&(e+=(e&&\" \")+t);return e}export default clsx;"],"names":["SearchBoxClient","searchUrl","keyword","setKeyword","useState","showDropdown","setShowDropdown","localResults","setLocalResults","isSearching","setIsSearching","selectedIndex","setSelectedIndex","searchTimeoutRef","useRef","highlightTimeoutRef","lastHighlightRef","inputRef","dropdownRef","scrollToResult","result","element","scrollIntoView","behavior","block","highlightElement","duration","current","style","outline","outlineOffset","clearTimeout","setTimeout","value","handleInput","trim","results","findDOMMatches","searchKeyword","article","document","querySelector","matches","keywordLen","length","escapedKeyword","replace","regex","RegExp","walker","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","node","parent","parentElement","closest","textContent","FILTER_REJECT","FILTER_ACCEPT","nextNode","text","HTMLElement","match","lastIndex","exec","index","matchedText","contextStart","Math","max","contextEnd","min","context","substring","push","offset","useEffect","input","dropdown","handleInputEvent","e","target","handleKeyDownEvent","totalItems","key","preventDefault","prev","window","location","href","encodeURIComponent","targetResult","blur","handleClickOutside","container","contains","addEventListener","removeEventListener","classList","remove","add","updateResultsDOM","contentWrapper","globalSearch","keywordSpan","onmouseenter","replaceChildren","loadingDiv","createElement","className","fragment","createDocumentFragment","forEach","button","type","setAttribute","String","t","r","n","arguments","clsx","titleDiv","contextDiv","appendChild","noResultDiv"],"mappings":"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","x_google_ignoreList":[1]}