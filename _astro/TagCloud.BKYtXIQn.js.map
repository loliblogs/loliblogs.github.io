{"version":3,"file":"TagCloud.BKYtXIQn.js","sources":["../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/limit.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/clip_rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/type.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/unpack.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/last.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/input.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/Color.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/version.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/chroma.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/colors/w3cx11.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hex/hex2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hex/rgb2hex.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/named/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/alpha.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/clipped.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lab/lab-constants.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lab/lab2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lab/rgb2lab.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lab/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/darken.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/get.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/luminance.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/mix.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/mix.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/premultiply.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lch/lch2lab.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lch/lch2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lch/lab2lch.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lch/rgb2lch.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lch/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/lch/hcl2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/saturate.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/set.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/ops/shade.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/lrgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/lab.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/_hsx.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/lch.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/num/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/num/rgb2num.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/num/num2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/num.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hcg/hcg2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hcg/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hcg/rgb2hcg.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/hcg.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsi/hsi2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsi/rgb2hsi.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsi/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/hsi.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsl/hsl2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsl/rgb2hsl.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsl/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/hsl.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsv/hsv2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsv/rgb2hsv.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hsv/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/multiply-matrices.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/hsv.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/oklab/oklab2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/oklab/rgb2oklab.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/oklab/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/oklab.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/interpolator/oklch.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/average.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/scale.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/bezier.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/rgb/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/blend.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/cubehelix.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/generator/random.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/analyze.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/contrast.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/contrastAPCA.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/delta-e.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/valid.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/scales.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/colors/colorbrewer.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/cmyk/rgb2cmyk.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/cmyk/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/cmyk/cmyk2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/hsl2css.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/oklch/rgb2oklch.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/rgb2css.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/lab2css.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/lch2css.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/oklab2css.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/oklch2css.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/oklch/oklch2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/css2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/css/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/gl/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/hex/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/temp/temperature2rgb.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/temp/rgb2temperature.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/temp/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/io/oklch/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/index.js","../../node_modules/.pnpm/chroma-js@3.1.2/node_modules/chroma-js/src/utils/distance.js","../../node_modules/.pnpm/wordcloud@1.2.3/node_modules/wordcloud/src/wordcloud2.js","../../src/components/TagCloud.tsx"],"sourcesContent":["const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","import limit from './limit.js';\n\nexport default (rgb) => {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (let i = 0; i <= 3; i++) {\n        if (i < 3) {\n            if (rgb[i] < 0 || rgb[i] > 255) rgb._clipped = true;\n            rgb[i] = limit(rgb[i], 0, 255);\n        } else if (i === 3) {\n            rgb[i] = limit(rgb[i], 0, 1);\n        }\n    }\n    return rgb;\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","import type from './type.js';\n\nexport default (args) => {\n    if (args.length < 2) return null;\n    const l = args.length - 1;\n    if (type(args[l]) == 'string') return args[l].toLowerCase();\n    return null;\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","export default {\n    format: {},\n    autodetect: []\n};\n","import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\n\nclass Color {\n    constructor(...args) {\n        const me = this;\n        if (\n            type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor\n        ) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n        if (!mode) {\n            autodetect = true;\n\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n                _input.sorted = true;\n            }\n\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(\n                null,\n                autodetect ? args : args.slice(0, -1)\n            );\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: ' + args);\n        }\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n}\nexport default Color;\n","// this gets updated automatically\nexport const version = '3.1.2';\n","import Color from './Color.js';\nimport { version } from './version.js';\n\nconst chroma = (...args) => {\n    return new Color(...args);\n};\n\nchroma.version = version;\n\nexport default chroma;\n","/**\n\tX11 color names\n\n\thttp://www.w3.org/TR/css3-color/#svg-color\n*/\n\nconst w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\n\nexport default w3cx11;\n","const RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\nconst RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\nconst hex2rgb = (hex) => {\n    if (hex.match(RE_HEX)) {\n        // remove optional leading #\n        if (hex.length === 4 || hex.length === 7) {\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full six-digit\n        if (hex.length === 3) {\n            hex = hex.split('');\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        const u = parseInt(hex, 16);\n        const r = u >> 16;\n        const g = (u >> 8) & 0xff;\n        const b = u & 0xff;\n        return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n        if (hex.length === 5 || hex.length === 9) {\n            // remove optional leading #\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full eight-digit\n        if (hex.length === 4) {\n            hex = hex.split('');\n            hex =\n                hex[0] +\n                hex[0] +\n                hex[1] +\n                hex[1] +\n                hex[2] +\n                hex[2] +\n                hex[3] +\n                hex[3];\n        }\n        const u = parseInt(hex, 16);\n        const r = (u >> 24) & 0xff;\n        const g = (u >> 16) & 0xff;\n        const b = (u >> 8) & 0xff;\n        const a = Math.round(((u & 0xff) / 0xff) * 100) / 100;\n        return [r, g, b, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(`unknown hex color: ${hex}`);\n};\n\nexport default hex2rgb;\n","import { unpack, last } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2hex = (...args) => {\n    let [r, g, b, a] = unpack(args, 'rgba');\n    let mode = last(args) || 'auto';\n    if (a === undefined) a = 1;\n    if (mode === 'auto') {\n        mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round(r);\n    g = round(g);\n    b = round(b);\n    const u = (r << 16) | (g << 8) | b;\n    let str = '000000' + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    let hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n        case 'rgba':\n            return `#${str}${hxa}`;\n        case 'argb':\n            return `#${hxa}${str}`;\n        default:\n            return `#${str}`;\n    }\n};\n\nexport default rgb2hex;\n","import Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport w3cx11 from '../../colors/w3cx11.js';\nimport hex2rgb from '../hex/hex2rgb.js';\nimport rgb2hex from '../hex/rgb2hex.js';\n\nColor.prototype.name = function () {\n    const hex = rgb2hex(this._rgb, 'rgb');\n    for (let n of Object.keys(w3cx11)) {\n        if (w3cx11[n] === hex) return n.toLowerCase();\n    }\n    return hex;\n};\n\ninput.format.named = (name) => {\n    name = name.toLowerCase();\n    if (w3cx11[name]) return hex2rgb(w3cx11[name]);\n    throw new Error('unknown color name: ' + name);\n};\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && w3cx11[h.toLowerCase()]) {\n            return 'named';\n        }\n    }\n});\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.alpha = function (a, mutate = false) {\n    if (a !== undefined && type(a) === 'number') {\n        if (mutate) {\n            this._rgb[3] = a;\n            return this;\n        }\n        return new Color([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n    return this._rgb[3];\n};\n","import Color from '../Color.js';\n\nColor.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n};\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lab2rgb from './lab2rgb.js';\nimport rgb2lab from './rgb2lab.js';\nimport { getLabWhitePoint, setLabWhitePoint } from './lab-constants.js';\n\nColor.prototype.lab = function () {\n    return rgb2lab(this._rgb);\n};\n\nconst lab = (...args) => new Color(...args, 'lab');\nObject.assign(chroma, { lab, getLabWhitePoint, setLabWhitePoint });\n\ninput.format.lab = lab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'lab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'lab';\n        }\n    }\n});\n\nexport { lab, getLabWhitePoint, setLabWhitePoint };\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.darken = function (amount = 1) {\n    const me = this;\n    const lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return new Color(lab, 'lab').alpha(me.alpha(), true);\n};\n\nColor.prototype.brighten = function (amount = 1) {\n    return this.darken(-amount);\n};\n\nColor.prototype.darker = Color.prototype.darken;\nColor.prototype.brighter = Color.prototype.brighten;\n","import Color from '../Color.js';\n\nColor.prototype.get = function (mc) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) return src[i];\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nconst { pow } = Math;\n\nconst EPS = 1e-7;\nconst MAX_ITER = 20;\n\nColor.prototype.luminance = function (lum, mode = 'rgb') {\n    if (lum !== undefined && type(lum) === 'number') {\n        if (lum === 0) {\n            // return pure black\n            return new Color([0, 0, 0, this._rgb[3]], 'rgb');\n        }\n        if (lum === 1) {\n            // return pure white\n            return new Color([255, 255, 255, this._rgb[3]], 'rgb');\n        }\n        // compute new color using...\n        let cur_lum = this.luminance();\n        let max_iter = MAX_ITER;\n\n        const test = (low, high) => {\n            const mid = low.interpolate(high, 0.5, mode);\n            const lm = mid.luminance();\n            if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                // close enough\n                return mid;\n            }\n            return lm > lum ? test(low, mid) : test(mid, high);\n        };\n\n        const rgb = (\n            cur_lum > lum\n                ? test(new Color([0, 0, 0]), this)\n                : test(this, new Color([255, 255, 255]))\n        ).rgb();\n        return new Color([...rgb, this._rgb[3]]);\n    }\n    return rgb2luminance(...this._rgb.slice(0, 3));\n};\n\nconst rgb2luminance = (r, g, b) => {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n\nconst luminance_x = (x) => {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\n};\n","export default {};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nimport interpolator from '../interpolator/index.js';\n\nexport default (col1, col2, f = 0.5, ...rest) => {\n    let mode = rest[0] || 'lrgb';\n    if (!interpolator[mode] && !rest.length) {\n        // fall back to the first supported mode\n        mode = Object.keys(interpolator)[0];\n    }\n    if (!interpolator[mode]) {\n        throw new Error(`interpolation mode ${mode} is not defined`);\n    }\n    if (type(col1) !== 'object') col1 = new Color(col1);\n    if (type(col2) !== 'object') col2 = new Color(col2);\n    return interpolator[mode](col1, col2, f).alpha(\n        col1.alpha() + f * (col2.alpha() - col1.alpha())\n    );\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.mix = Color.prototype.interpolate = function (\n    col2,\n    f = 0.5,\n    ...rest\n) {\n    return mix(this, col2, f, ...rest);\n};\n","import Color from '../Color.js';\n\nColor.prototype.premultiply = function (mutate = false) {\n    const rgb = this._rgb;\n    const a = rgb[3];\n    if (mutate) {\n        this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n        return this;\n    } else {\n        return new Color([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n};\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from './lch2lab.js';\nimport lab2rgb from '../lab/lab2rgb.js';\n\nconst lch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = lab2rgb(L, a, b_);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default lch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lab2lch from './lab2lch.js';\n\nconst rgb2lch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2lab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2lch;\n","import { unpack, type, reverse3 } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lch2rgb from './lch2rgb.js';\nimport hcl2rgb from './hcl2rgb.js';\nimport rgb2lch from './rgb2lch.js';\n\nColor.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n};\nColor.prototype.hcl = function () {\n    return reverse3(rgb2lch(this._rgb));\n};\n\nconst lch = (...args) => new Color(...args, 'lch');\nconst hcl = (...args) => new Color(...args, 'hcl');\n\nObject.assign(chroma, { lch, hcl });\n\ninput.format.lch = lch2rgb;\ninput.format.hcl = hcl2rgb;\n['lch', 'hcl'].forEach((m) =>\n    input.autodetect.push({\n        p: 2,\n        test: (...args) => {\n            args = unpack(args, m);\n            if (type(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    })\n);\n\nexport { lch, hcl };\n","import { unpack, reverse3 } from '../../utils/index.js';\nimport lch2rgb from './lch2rgb.js';\n\nconst hcl2rgb = (...args) => {\n    const hcl = reverse3(unpack(args, 'hcl'));\n    return lch2rgb(...hcl);\n};\n\nexport default hcl2rgb;\n","import '../io/lch/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.saturate = function (amount = 1) {\n    const me = this;\n    const lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n    if (lch[1] < 0) lch[1] = 0;\n    return new Color(lch, 'lch').alpha(me.alpha(), true);\n};\n\nColor.prototype.desaturate = function (amount = 1) {\n    return this.saturate(-amount);\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.set = function (mc, value, mutate = false) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) {\n            if (type(value) == 'string') {\n                switch (value.charAt(0)) {\n                    case '+':\n                        src[i] += +value;\n                        break;\n                    case '-':\n                        src[i] += +value;\n                        break;\n                    case '*':\n                        src[i] *= +value.substr(1);\n                        break;\n                    case '/':\n                        src[i] /= +value.substr(1);\n                        break;\n                    default:\n                        src[i] = +value;\n                }\n            } else if (type(value) === 'number') {\n                src[i] = value;\n            } else {\n                throw new Error(`unsupported value for Color.set`);\n            }\n            const out = new Color(src, mode);\n            if (mutate) {\n                this._rgb = out._rgb;\n                return this;\n            }\n            return out;\n        }\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.tint = function (f = 0.5, ...rest) {\n    return mix(this, 'white', f, ...rest);\n};\n\nColor.prototype.shade = function (f = 0.5, ...rest) {\n    return mix(this, 'black', f, ...rest);\n};\n","import Color from '../Color.js';\nimport index from './index.js';\n\nconst rgb = (col1, col2, f) => {\n    const xyz0 = col1._rgb;\n    const xyz1 = col2._rgb;\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.rgb = rgb;\n\nexport default rgb;\n","import Color from '../Color.js';\nconst { sqrt, pow } = Math;\nimport index from './index.js';\n\nconst lrgb = (col1, col2, f) => {\n    const [x1, y1, z1] = col1._rgb;\n    const [x2, y2, z2] = col2._rgb;\n    return new Color(\n        sqrt(pow(x1, 2) * (1 - f) + pow(x2, 2) * f),\n        sqrt(pow(y1, 2) * (1 - f) + pow(y2, 2) * f),\n        sqrt(pow(z1, 2) * (1 - f) + pow(z2, 2) * f),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.lrgb = lrgb;\n\nexport default lrgb;\n","import '../io/lab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst lab = (col1, col2, f) => {\n    const xyz0 = col1.lab();\n    const xyz1 = col2.lab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'lab'\n    );\n};\n\n// register interpolator\nindex.lab = lab;\n\nexport default lab;\n","import Color from '../Color.js';\n\nexport default (col1, col2, f, m) => {\n    let xyz0, xyz1;\n    if (m === 'hsl') {\n        xyz0 = col1.hsl();\n        xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n        xyz0 = col1.hsv();\n        xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n        xyz0 = col1.hcg();\n        xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n        xyz0 = col1.hsi();\n        xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n        m = 'hcl';\n        xyz0 = col1.hcl();\n        xyz1 = col2.hcl();\n    } else if (m === 'oklch') {\n        xyz0 = col1.oklch().reverse();\n        xyz1 = col2.oklch().reverse();\n    }\n\n    let hue0, hue1, sat0, sat1, lbv0, lbv1;\n    if (m.substr(0, 1) === 'h' || m === 'oklch') {\n        [hue0, sat0, lbv0] = xyz0;\n        [hue1, sat1, lbv1] = xyz1;\n    }\n\n    let sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n        // both colors have hue\n        if (hue1 > hue0 && hue1 - hue0 > 180) {\n            dh = hue1 - (hue0 + 360);\n        } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n            dh = hue1 + 360 - hue0;\n        } else {\n            dh = hue1 - hue0;\n        }\n        hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n        hue = hue0;\n        if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') sat = sat0;\n    } else if (!isNaN(hue1)) {\n        hue = hue1;\n        if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') sat = sat1;\n    } else {\n        hue = Number.NaN;\n    }\n\n    if (sat === undefined) sat = sat0 + f * (sat1 - sat0);\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return m === 'oklch'\n        ? new Color([lbv, sat, hue], m)\n        : new Color([hue, sat, lbv], m);\n};\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst lch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'lch');\n};\n\n// register interpolator\nindex.lch = lch;\nindex.hcl = lch;\n\nexport default lch;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\nimport num2rgb from './num2rgb.js';\nimport rgb2num from './rgb2num.js';\n\nColor.prototype.num = function () {\n    return rgb2num(this._rgb);\n};\n\nconst num = (...args) => new Color(...args, 'num');\n\nObject.assign(chroma, { num });\n\ninput.format.num = num2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (...args) => {\n        if (\n            args.length === 1 &&\n            type(args[0]) === 'number' &&\n            args[0] >= 0 &&\n            args[0] <= 0xffffff\n        ) {\n            return 'num';\n        }\n    }\n});\n\nexport { num };\n","import { unpack } from '../../utils/index.js';\n\nconst rgb2num = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    return (r << 16) + (g << 8) + b;\n};\n\nexport default rgb2num;\n","import { type } from '../../utils/index.js';\n\nconst num2rgb = (num) => {\n    if (type(num) == 'number' && num >= 0 && num <= 0xffffff) {\n        const r = num >> 16;\n        const g = (num >> 8) & 0xff;\n        const b = num & 0xff;\n        return [r, g, b, 1];\n    }\n    throw new Error('unknown num color: ' + num);\n};\n\nexport default num2rgb;\n","import '../io/num/index.js';\nimport index from './index.js';\n\nimport Color from '../Color.js';\n\nconst num = (col1, col2, f) => {\n    const c1 = col1.num();\n    const c2 = col2.num();\n    return new Color(c1 + f * (c2 - c1), 'num');\n};\n\n// register interpolator\nindex.num = num;\n\nexport default num;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\n/*\n * this is basically just HSV with some minor tweaks\n *\n * hue.. [0..360]\n * chroma .. [0..1]\n * grayness .. [0..1]\n */\n\nconst hcg2rgb = (...args) => {\n    args = unpack(args, 'hcg');\n    let [h, c, _g] = args;\n    let r, g, b;\n    _g = _g * 255;\n    const _c = c * 255;\n    if (c === 0) {\n        r = g = b = _g;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n        const i = floor(h);\n        const f = h - i;\n        const p = _g * (1 - c);\n        const q = p + _c * (1 - f);\n        const t = p + _c * f;\n        const v = p + _c;\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hcg2rgb;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hcg2rgb from './hcg2rgb.js';\nimport rgb2hcg from './rgb2hcg.js';\n\nColor.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n};\n\nconst hcg = (...args) => new Color(...args, 'hcg');\nchroma.hcg = hcg;\n\ninput.format.hcg = hcg2rgb;\n\ninput.autodetect.push({\n    p: 1,\n    test: (...args) => {\n        args = unpack(args, 'hcg');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hcg';\n        }\n    }\n});\n\nexport { hcg };\n","import { unpack, max, min } from '../../utils/index.js';\n\nconst rgb2hcg = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n    const delta = maxRgb - minRgb;\n    const c = (delta * 100) / 255;\n    const _g = (minRgb / (255 - delta)) * 100;\n    let h;\n    if (delta === 0) {\n        h = Number.NaN;\n    } else {\n        if (r === maxRgb) h = (g - b) / delta;\n        if (g === maxRgb) h = 2 + (b - r) / delta;\n        if (b === maxRgb) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, c, _g];\n};\n\nexport default rgb2hcg;\n","import '../io/hcg/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hcg = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hcg');\n};\n\n// register interpolator\nindex.hcg = hcg;\n\nexport default hcg;\n","import { unpack, limit, TWOPI, PITHIRD } from '../../utils/index.js';\nconst { cos } = Math;\n\n/*\n * hue [0..360]\n * saturation [0..1]\n * intensity [0..1]\n */\nconst hsi2rgb = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n    args = unpack(args, 'hsi');\n    let [h, s, i] = args;\n    let r, g, b;\n\n    if (isNaN(h)) h = 0;\n    if (isNaN(s)) s = 0;\n    // normalize hue\n    if (h > 360) h -= 360;\n    if (h < 0) h += 360;\n    h /= 360;\n    if (h < 1 / 3) {\n        b = (1 - s) / 3;\n        r = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n        h -= 1 / 3;\n        r = (1 - s) / 3;\n        g = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        b = 1 - (r + g);\n    } else {\n        h -= 2 / 3;\n        g = (1 - s) / 3;\n        b = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsi2rgb;\n","import { unpack, TWOPI } from '../../utils/index.js';\nconst { min, sqrt, acos } = Math;\n\nconst rgb2hsi = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n    let [r, g, b] = unpack(args, 'rgb');\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h;\n    const min_ = min(r, g, b);\n    const i = (r + g + b) / 3;\n    const s = i > 0 ? 1 - min_ / i : 0;\n    if (s === 0) {\n        h = NaN;\n    } else {\n        h = (r - g + (r - b)) / 2;\n        h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n        h = acos(h);\n        if (b > g) {\n            h = TWOPI - h;\n        }\n        h /= TWOPI;\n    }\n    return [h * 360, s, i];\n};\n\nexport default rgb2hsi;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsi2rgb from './hsi2rgb.js';\nimport rgb2hsi from './rgb2hsi.js';\n\nColor.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n};\n\nconst hsi = (...args) => new Color(...args, 'hsi');\nchroma.hsi = hsi;\n\ninput.format.hsi = hsi2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsi');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsi';\n        }\n    }\n});\n\nexport { hsi };\n","import '../io/hsi/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsi = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsi');\n};\n\n// register interpolator\nindex.hsi = hsi;\n\nexport default hsi;\n","import { unpack } from '../../utils/index.js';\n\nconst hsl2rgb = (...args) => {\n    args = unpack(args, 'hsl');\n    const [h, s, l] = args;\n    let r, g, b;\n    if (s === 0) {\n        r = g = b = l * 255;\n    } else {\n        const t3 = [0, 0, 0];\n        const c = [0, 0, 0];\n        const t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const t1 = 2 * l - t2;\n        const h_ = h / 360;\n        t3[0] = h_ + 1 / 3;\n        t3[1] = h_;\n        t3[2] = h_ - 1 / 3;\n        for (let i = 0; i < 3; i++) {\n            if (t3[i] < 0) t3[i] += 1;\n            if (t3[i] > 1) t3[i] -= 1;\n            if (6 * t3[i] < 1) c[i] = t1 + (t2 - t1) * 6 * t3[i];\n            else if (2 * t3[i] < 1) c[i] = t2;\n            else if (3 * t3[i] < 2) c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n            else c[i] = t1;\n        }\n        [r, g, b] = [c[0] * 255, c[1] * 255, c[2] * 255];\n    }\n    if (args.length > 3) {\n        // keep alpha channel\n        return [r, g, b, args[3]];\n    }\n    return [r, g, b, 1];\n};\n\nexport default hsl2rgb;\n","import { unpack, min, max } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - rgb2hsl(r,g,b)\n * - rgb2hsl(r,g,b,a)\n * - rgb2hsl([r,g,b])\n * - rgb2hsl([r,g,b,a])\n * - rgb2hsl({r,g,b,a})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgba');\n    let [r, g, b] = args;\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n\n    const l = (maxRgb + minRgb) / 2;\n    let s, h;\n\n    if (maxRgb === minRgb) {\n        s = 0;\n        h = Number.NaN;\n    } else {\n        s =\n            l < 0.5\n                ? (maxRgb - minRgb) / (maxRgb + minRgb)\n                : (maxRgb - minRgb) / (2 - maxRgb - minRgb);\n    }\n\n    if (r == maxRgb) h = (g - b) / (maxRgb - minRgb);\n    else if (g == maxRgb) h = 2 + (b - r) / (maxRgb - minRgb);\n    else if (b == maxRgb) h = 4 + (r - g) / (maxRgb - minRgb);\n\n    h *= 60;\n    if (h < 0) h += 360;\n    if (args.length > 3 && args[3] !== undefined) return [h, s, l, args[3]];\n    return [h, s, l];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsl2rgb from './hsl2rgb.js';\nimport rgb2hsl from './rgb2hsl.js';\n\nColor.prototype.hsl = function () {\n    return rgb2hsl(this._rgb);\n};\n\nconst hsl = (...args) => new Color(...args, 'hsl');\nchroma.hsl = hsl;\n\ninput.format.hsl = hsl2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsl');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsl';\n        }\n    }\n});\n\nexport { hsl };\n","import '../io/hsl/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsl = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsl');\n};\n\n// register interpolator\nindex.hsl = hsl;\n\nexport default hsl;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\nconst hsv2rgb = (...args) => {\n    args = unpack(args, 'hsv');\n    let [h, s, v] = args;\n    let r, g, b;\n    v *= 255;\n    if (s === 0) {\n        r = g = b = v;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n\n        const i = floor(h);\n        const f = h - i;\n        const p = v * (1 - s);\n        const q = v * (1 - s * f);\n        const t = v * (1 - s * (1 - f));\n\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsv2rgb;\n","import { unpack } from '../../utils/index.js';\nconst { min, max } = Math;\n\n/*\n * supported arguments:\n * - rgb2hsv(r,g,b)\n * - rgb2hsv([r,g,b])\n * - rgb2hsv({r,g,b})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgb');\n    let [r, g, b] = args;\n    const min_ = min(r, g, b);\n    const max_ = max(r, g, b);\n    const delta = max_ - min_;\n    let h, s, v;\n    v = max_ / 255.0;\n    if (max_ === 0) {\n        h = Number.NaN;\n        s = 0;\n    } else {\n        s = delta / max_;\n        if (r === max_) h = (g - b) / delta;\n        if (g === max_) h = 2 + (b - r) / delta;\n        if (b === max_) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, s, v];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsv2rgb from './hsv2rgb.js';\nimport rgb2hsv from './rgb2hsv.js';\n\nColor.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n};\n\nconst hsv = (...args) => new Color(...args, 'hsv');\nchroma.hsv = hsv;\n\ninput.format.hsv = hsv2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsv');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsv';\n        }\n    }\n});\n\nexport { hsv };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","import '../io/hsv/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsv = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsv');\n};\n\n// register interpolator\nindex.hsv = hsv;\n\nexport default hsv;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklab2rgb from './oklab2rgb.js';\nimport rgb2oklab from './rgb2oklab.js';\n\nColor.prototype.oklab = function () {\n    return rgb2oklab(this._rgb);\n};\n\nconst oklab = (...args) => new Color(...args, 'oklab');\nObject.assign(chroma, { oklab });\n\ninput.format.oklab = oklab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklab';\n        }\n    }\n});\n\nexport { oklab };\n","import '../io/oklab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst oklab = (col1, col2, f) => {\n    const xyz0 = col1.oklab();\n    const xyz1 = col2.oklab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'oklab'\n    );\n};\n\n// register interpolator\nindex.oklab = oklab;\n\nexport default oklab;\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst oklch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'oklch');\n};\n\n// register interpolator\nindex.oklch = oklch;\n\nexport default oklch;\n","import Color from '../Color.js';\nimport { clip_rgb } from '../utils/index.js';\n\nconst { pow, sqrt, PI, cos, sin, atan2 } = Math;\n\nexport default (colors, mode = 'lrgb', weights = null) => {\n    const l = colors.length;\n    if (!weights) weights = Array.from(new Array(l)).map(() => 1);\n    // normalize weights\n    const k =\n        l /\n        weights.reduce(function (a, b) {\n            return a + b;\n        });\n    weights.forEach((w, i) => {\n        weights[i] *= k;\n    });\n    // convert colors to Color objects\n    colors = colors.map((c) => new Color(c));\n    if (mode === 'lrgb') {\n        return _average_lrgb(colors, weights);\n    }\n    const first = colors.shift();\n    const xyz = first.get(mode);\n    const cnt = [];\n    let dx = 0;\n    let dy = 0;\n    // initial color\n    for (let i = 0; i < xyz.length; i++) {\n        xyz[i] = (xyz[i] || 0) * weights[0];\n        cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n        if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n            const A = (xyz[i] / 180) * PI;\n            dx += cos(A) * weights[0];\n            dy += sin(A) * weights[0];\n        }\n    }\n\n    let alpha = first.alpha() * weights[0];\n    colors.forEach((c, ci) => {\n        const xyz2 = c.get(mode);\n        alpha += c.alpha() * weights[ci + 1];\n        for (let i = 0; i < xyz.length; i++) {\n            if (!isNaN(xyz2[i])) {\n                cnt[i] += weights[ci + 1];\n                if (mode.charAt(i) === 'h') {\n                    const A = (xyz2[i] / 180) * PI;\n                    dx += cos(A) * weights[ci + 1];\n                    dy += sin(A) * weights[ci + 1];\n                } else {\n                    xyz[i] += xyz2[i] * weights[ci + 1];\n                }\n            }\n        }\n    });\n\n    for (let i = 0; i < xyz.length; i++) {\n        if (mode.charAt(i) === 'h') {\n            let A = (atan2(dy / cnt[i], dx / cnt[i]) / PI) * 180;\n            while (A < 0) A += 360;\n            while (A >= 360) A -= 360;\n            xyz[i] = A;\n        } else {\n            xyz[i] = xyz[i] / cnt[i];\n        }\n    }\n    alpha /= l;\n    return new Color(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n};\n\nconst _average_lrgb = (colors, weights) => {\n    const l = colors.length;\n    const xyz = [0, 0, 0, 0];\n    for (let i = 0; i < colors.length; i++) {\n        const col = colors[i];\n        const f = weights[i] / l;\n        const rgb = col._rgb;\n        xyz[0] += pow(rgb[0], 2) * f;\n        xyz[1] += pow(rgb[1], 2) * f;\n        xyz[2] += pow(rgb[2], 2) * f;\n        xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 0.9999999) xyz[3] = 1;\n    return new Color(clip_rgb(xyz));\n};\n","// minimal multi-purpose interface\n\n// @requires utils color analyze\nimport chroma from '../chroma.js';\nimport { limit, type } from '../utils/index.js';\n\nconst { pow } = Math;\n\nexport default function (colors) {\n    // constructor\n    let _mode = 'rgb';\n    let _nacol = chroma('#ccc');\n    let _spread = 0;\n    // const _fixed = false;\n    let _domain = [0, 1];\n    let _pos = [];\n    let _padding = [0, 0];\n    let _classes = false;\n    let _colors = [];\n    let _out = false;\n    let _min = 0;\n    let _max = 1;\n    let _correctLightness = false;\n    let _colorCache = {};\n    let _useCache = true;\n    let _gamma = 1;\n\n    // private methods\n\n    const setColors = function (colors) {\n        colors = colors || ['#fff', '#000'];\n        if (\n            colors &&\n            type(colors) === 'string' &&\n            chroma.brewer &&\n            chroma.brewer[colors.toLowerCase()]\n        ) {\n            colors = chroma.brewer[colors.toLowerCase()];\n        }\n        if (type(colors) === 'array') {\n            // handle single color\n            if (colors.length === 1) {\n                colors = [colors[0], colors[0]];\n            }\n            // make a copy of the colors\n            colors = colors.slice(0);\n            // convert to chroma classes\n            for (let c = 0; c < colors.length; c++) {\n                colors[c] = chroma(colors[c]);\n            }\n            // auto-fill color position\n            _pos.length = 0;\n            for (let c = 0; c < colors.length; c++) {\n                _pos.push(c / (colors.length - 1));\n            }\n        }\n        resetCache();\n        return (_colors = colors);\n    };\n\n    const getClass = function (value) {\n        if (_classes != null) {\n            const n = _classes.length - 1;\n            let i = 0;\n            while (i < n && value >= _classes[i]) {\n                i++;\n            }\n            return i - 1;\n        }\n        return 0;\n    };\n\n    let tMapLightness = (t) => t;\n    let tMapDomain = (t) => t;\n\n    // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n    const getColor = function (val, bypassMap) {\n        let col, t;\n        if (bypassMap == null) {\n            bypassMap = false;\n        }\n        if (isNaN(val) || val === null) {\n            return _nacol;\n        }\n        if (!bypassMap) {\n            if (_classes && _classes.length > 2) {\n                // find the class\n                const c = getClass(val);\n                t = c / (_classes.length - 2);\n            } else if (_max !== _min) {\n                // just interpolate between min/max\n                t = (val - _min) / (_max - _min);\n            } else {\n                t = 1;\n            }\n        } else {\n            t = val;\n        }\n\n        // domain map\n        t = tMapDomain(t);\n\n        if (!bypassMap) {\n            t = tMapLightness(t); // lightness correction\n        }\n\n        if (_gamma !== 1) {\n            t = pow(t, _gamma);\n        }\n\n        t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n\n        t = limit(t, 0, 1);\n\n        const k = Math.floor(t * 10000);\n\n        if (_useCache && _colorCache[k]) {\n            col = _colorCache[k];\n        } else {\n            if (type(_colors) === 'array') {\n                //for i in [0.._pos.length-1]\n                for (let i = 0; i < _pos.length; i++) {\n                    const p = _pos[i];\n                    if (t <= p) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t >= p && i === _pos.length - 1) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t > p && t < _pos[i + 1]) {\n                        t = (t - p) / (_pos[i + 1] - p);\n                        col = chroma.interpolate(\n                            _colors[i],\n                            _colors[i + 1],\n                            t,\n                            _mode\n                        );\n                        break;\n                    }\n                }\n            } else if (type(_colors) === 'function') {\n                col = _colors(t);\n            }\n            if (_useCache) {\n                _colorCache[k] = col;\n            }\n        }\n        return col;\n    };\n\n    var resetCache = () => (_colorCache = {});\n\n    setColors(colors);\n\n    // public interface\n\n    const f = function (v) {\n        const c = chroma(getColor(v));\n        if (_out && c[_out]) {\n            return c[_out]();\n        } else {\n            return c;\n        }\n    };\n\n    f.classes = function (classes) {\n        if (classes != null) {\n            if (type(classes) === 'array') {\n                _classes = classes;\n                _domain = [classes[0], classes[classes.length - 1]];\n            } else {\n                const d = chroma.analyze(_domain);\n                if (classes === 0) {\n                    _classes = [d.min, d.max];\n                } else {\n                    _classes = chroma.limits(d, 'e', classes);\n                }\n            }\n            return f;\n        }\n        return _classes;\n    };\n\n    f.domain = function (domain) {\n        if (!arguments.length) {\n            return _domain;\n        }\n        _min = domain[0];\n        _max = domain[domain.length - 1];\n        _pos = [];\n        const k = _colors.length;\n        if (domain.length === k && _min !== _max) {\n            // update positions\n            for (let d of Array.from(domain)) {\n                _pos.push((d - _min) / (_max - _min));\n            }\n        } else {\n            for (let c = 0; c < k; c++) {\n                _pos.push(c / (k - 1));\n            }\n            if (domain.length > 2) {\n                // set domain map\n                const tOut = domain.map((d, i) => i / (domain.length - 1));\n                const tBreaks = domain.map((d) => (d - _min) / (_max - _min));\n                if (!tBreaks.every((val, i) => tOut[i] === val)) {\n                    tMapDomain = (t) => {\n                        if (t <= 0 || t >= 1) return t;\n                        let i = 0;\n                        while (t >= tBreaks[i + 1]) i++;\n                        const f =\n                            (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n                        const out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n                        return out;\n                    };\n                }\n            }\n        }\n        _domain = [_min, _max];\n        return f;\n    };\n\n    f.mode = function (_m) {\n        if (!arguments.length) {\n            return _mode;\n        }\n        _mode = _m;\n        resetCache();\n        return f;\n    };\n\n    f.range = function (colors, _pos) {\n        setColors(colors, _pos);\n        return f;\n    };\n\n    f.out = function (_o) {\n        _out = _o;\n        return f;\n    };\n\n    f.spread = function (val) {\n        if (!arguments.length) {\n            return _spread;\n        }\n        _spread = val;\n        return f;\n    };\n\n    f.correctLightness = function (v) {\n        if (v == null) {\n            v = true;\n        }\n        _correctLightness = v;\n        resetCache();\n        if (_correctLightness) {\n            tMapLightness = function (t) {\n                const L0 = getColor(0, true).lab()[0];\n                const L1 = getColor(1, true).lab()[0];\n                const pol = L0 > L1;\n                let L_actual = getColor(t, true).lab()[0];\n                const L_ideal = L0 + (L1 - L0) * t;\n                let L_diff = L_actual - L_ideal;\n                let t0 = 0;\n                let t1 = 1;\n                let max_iter = 20;\n                while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n                    (function () {\n                        if (pol) {\n                            L_diff *= -1;\n                        }\n                        if (L_diff < 0) {\n                            t0 = t;\n                            t += (t1 - t) * 0.5;\n                        } else {\n                            t1 = t;\n                            t += (t0 - t) * 0.5;\n                        }\n                        L_actual = getColor(t, true).lab()[0];\n                        return (L_diff = L_actual - L_ideal);\n                    })();\n                }\n                return t;\n            };\n        } else {\n            tMapLightness = (t) => t;\n        }\n        return f;\n    };\n\n    f.padding = function (p) {\n        if (p != null) {\n            if (type(p) === 'number') {\n                p = [p, p];\n            }\n            _padding = p;\n            return f;\n        } else {\n            return _padding;\n        }\n    };\n\n    f.colors = function (numColors, out) {\n        // If no arguments are given, return the original colors that were provided\n        if (arguments.length < 2) {\n            out = 'hex';\n        }\n        let result = [];\n\n        if (arguments.length === 0) {\n            result = _colors.slice(0);\n        } else if (numColors === 1) {\n            result = [f(0.5)];\n        } else if (numColors > 1) {\n            const dm = _domain[0];\n            const dd = _domain[1] - dm;\n            result = __range__(0, numColors, false).map((i) =>\n                f(dm + (i / (numColors - 1)) * dd)\n            );\n        } else {\n            // returns all colors based on the defined classes\n            colors = [];\n            let samples = [];\n            if (_classes && _classes.length > 2) {\n                for (\n                    let i = 1, end = _classes.length, asc = 1 <= end;\n                    asc ? i < end : i > end;\n                    asc ? i++ : i--\n                ) {\n                    samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n                }\n            } else {\n                samples = _domain;\n            }\n            result = samples.map((v) => f(v));\n        }\n\n        if (chroma[out]) {\n            result = result.map((c) => c[out]());\n        }\n        return result;\n    };\n\n    f.cache = function (c) {\n        if (c != null) {\n            _useCache = c;\n            return f;\n        } else {\n            return _useCache;\n        }\n    };\n\n    f.gamma = function (g) {\n        if (g != null) {\n            _gamma = g;\n            return f;\n        } else {\n            return _gamma;\n        }\n    };\n\n    f.nodata = function (d) {\n        if (d != null) {\n            _nacol = chroma(d);\n            return f;\n        } else {\n            return _nacol;\n        }\n    };\n\n    return f;\n}\n\nfunction __range__(left, right, inclusive) {\n    let range = [];\n    let ascending = left < right;\n    let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n    }\n    return range;\n}\n","//\n// interpolates between a set of colors uzing a bezier spline\n//\n\n// @requires utils lab\nimport Color from '../Color.js';\nimport '../io/lab/index.js';\nimport scale from './scale.js';\n\n// nth row of the pascal triangle\nconst binom_row = function (n) {\n    let row = [1, 1];\n    for (let i = 1; i < n; i++) {\n        let newrow = [1];\n        for (let j = 1; j <= row.length; j++) {\n            newrow[j] = (row[j] || 0) + row[j - 1];\n        }\n        row = newrow;\n    }\n    return row;\n};\n\nconst bezier = function (colors) {\n    let I, lab0, lab1, lab2;\n    colors = colors.map((c) => new Color(c));\n    if (colors.length === 2) {\n        // linear interpolation\n        [lab0, lab1] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map((i) => lab0[i] + t * (lab1[i] - lab0[i]));\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 3) {\n        // quadratic bezier interpolation\n        [lab0, lab1, lab2] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * lab0[i] +\n                    2 * (1 - t) * t * lab1[i] +\n                    t * t * lab2[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 4) {\n        // cubic bezier interpolation\n        let lab3;\n        [lab0, lab1, lab2, lab3] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * (1 - t) * lab0[i] +\n                    3 * (1 - t) * (1 - t) * t * lab1[i] +\n                    3 * (1 - t) * t * t * lab2[i] +\n                    t * t * t * lab3[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length >= 5) {\n        // general case (degree n bezier)\n        let labs, row, n;\n        labs = colors.map((c) => c.lab());\n        n = colors.length - 1;\n        row = binom_row(n);\n        I = function (t) {\n            const u = 1 - t;\n            const lab = [0, 1, 2].map((i) =>\n                labs.reduce(\n                    (sum, el, j) =>\n                        sum + row[j] * u ** (n - j) * t ** j * el[i],\n                    0\n                )\n            );\n            return new Color(lab, 'lab');\n        };\n    } else {\n        throw new RangeError('No point in running bezier with only one color.');\n    }\n    return I;\n};\n\nexport default (colors) => {\n    const f = bezier(colors);\n    f.scale = () => scale(f);\n    return f;\n};\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nconst { round } = Math;\n\nColor.prototype.rgb = function (rnd = true) {\n    if (rnd === false) return this._rgb.slice(0, 3);\n    return this._rgb.slice(0, 3).map(round);\n};\n\nColor.prototype.rgba = function (rnd = true) {\n    return this._rgb.slice(0, 4).map((v, i) => {\n        return i < 3 ? (rnd === false ? v : round(v)) : v;\n    });\n};\n\nconst rgb = (...args) => new Color(...args, 'rgb');\nObject.assign(chroma, { rgb });\n\ninput.format.rgb = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    if (rgba[3] === undefined) rgba[3] = 1;\n    return rgba;\n};\n\ninput.autodetect.push({\n    p: 3,\n    test: (...args) => {\n        args = unpack(args, 'rgba');\n        if (\n            type(args) === 'array' &&\n            (args.length === 3 ||\n                (args.length === 4 &&\n                    type(args[3]) == 'number' &&\n                    args[3] >= 0 &&\n                    args[3] <= 1))\n        ) {\n            return 'rgb';\n        }\n    }\n});\n\nexport { rgb };\n","/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from https://web.archive.org/web/20180110014946/http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nimport '../io/rgb/index.js';\nimport chroma from '../chroma.js';\n\nconst blend = (bottom, top, mode) => {\n    if (!blend[mode]) {\n        throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n};\n\nconst blend_f = (f) => (bottom, top) => {\n    const c0 = chroma(top).rgb();\n    const c1 = chroma(bottom).rgb();\n    return chroma.rgb(f(c0, c1));\n};\n\nconst each = (f) => (c0, c1) => {\n    const out = [];\n    out[0] = f(c0[0], c1[0]);\n    out[1] = f(c0[1], c1[1]);\n    out[2] = f(c0[2], c1[2]);\n    return out;\n};\n\nconst normal = (a) => a;\nconst multiply = (a, b) => (a * b) / 255;\nconst darken = (a, b) => (a > b ? b : a);\nconst lighten = (a, b) => (a > b ? a : b);\nconst screen = (a, b) => 255 * (1 - (1 - a / 255) * (1 - b / 255));\nconst overlay = (a, b) =>\n    b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\nconst burn = (a, b) => 255 * (1 - (1 - b / 255) / (a / 255));\nconst dodge = (a, b) => {\n    if (a === 255) return 255;\n    a = (255 * (b / 255)) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n};\n\n// # add = (a,b) ->\n// #     if (a + b > 255) then 255 else a + b\n\nblend.normal = blend_f(each(normal));\nblend.multiply = blend_f(each(multiply));\nblend.screen = blend_f(each(screen));\nblend.overlay = blend_f(each(overlay));\nblend.darken = blend_f(each(darken));\nblend.lighten = blend_f(each(lighten));\nblend.dodge = blend_f(each(dodge));\nblend.burn = blend_f(each(burn));\n// blend.add = blend_f(each(add));\n\nexport default blend;\n","// cubehelix interpolation\n// based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n// http://astron-soc.in/bulletin/11June/289392011.pdf\nimport { type, clip_rgb, TWOPI } from '../utils/index.js';\nimport chroma from '../chroma.js';\nconst { pow, sin, cos } = Math;\n\nexport default function (\n    start = 300,\n    rotations = -1.5,\n    hue = 1,\n    gamma = 1,\n    lightness = [0, 1]\n) {\n    let dh = 0,\n        dl;\n    if (type(lightness) === 'array') {\n        dl = lightness[1] - lightness[0];\n    } else {\n        dl = 0;\n        lightness = [lightness, lightness];\n    }\n    const f = function (fract) {\n        const a = TWOPI * ((start + 120) / 360 + rotations * fract);\n        const l = pow(lightness[0] + dl * fract, gamma);\n        const h = dh !== 0 ? hue[0] + fract * dh : hue;\n        const amp = (h * l * (1 - l)) / 2;\n        const cos_a = cos(a);\n        const sin_a = sin(a);\n        const r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n        const g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n        const b = l + amp * (+1.97294 * cos_a);\n        return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function (s) {\n        if (s == null) {\n            return start;\n        }\n        start = s;\n        return f;\n    };\n    f.rotations = function (r) {\n        if (r == null) {\n            return rotations;\n        }\n        rotations = r;\n        return f;\n    };\n    f.gamma = function (g) {\n        if (g == null) {\n            return gamma;\n        }\n        gamma = g;\n        return f;\n    };\n    f.hue = function (h) {\n        if (h == null) {\n            return hue;\n        }\n        hue = h;\n        if (type(hue) === 'array') {\n            dh = hue[1] - hue[0];\n            if (dh === 0) {\n                hue = hue[1];\n            }\n        } else {\n            dh = 0;\n        }\n        return f;\n    };\n    f.lightness = function (h) {\n        if (h == null) {\n            return lightness;\n        }\n        if (type(h) === 'array') {\n            lightness = h;\n            dl = h[1] - h[0];\n        } else {\n            lightness = [h, h];\n            dl = 0;\n        }\n        return f;\n    };\n    f.scale = () => chroma.scale(f);\n    f.hue(hue);\n    return f;\n}\n","import Color from '../Color.js';\nconst digits = '0123456789abcdef';\n\nconst { floor, random } = Math;\n\nexport default () => {\n    let code = '#';\n    for (let i = 0; i < 6; i++) {\n        code += digits.charAt(floor(random() * 16));\n    }\n    return new Color(code, 'hex');\n};\n","import type from './type.js';\n\nconst { log, pow, floor, abs } = Math;\n\nexport function analyze(data, key = null) {\n    const r = {\n        min: Number.MAX_VALUE,\n        max: Number.MAX_VALUE * -1,\n        sum: 0,\n        values: [],\n        count: 0\n    };\n    if (type(data) === 'object') {\n        data = Object.values(data);\n    }\n    data.forEach((val) => {\n        if (key && type(val) === 'object') val = val[key];\n        if (val !== undefined && val !== null && !isNaN(val)) {\n            r.values.push(val);\n            r.sum += val;\n            if (val < r.min) r.min = val;\n            if (val > r.max) r.max = val;\n            r.count += 1;\n        }\n    });\n\n    r.domain = [r.min, r.max];\n\n    r.limits = (mode, num) => limits(r, mode, num);\n\n    return r;\n}\n\nexport function limits(data, mode = 'equal', num = 7) {\n    if (type(data) == 'array') {\n        data = analyze(data);\n    }\n    const { min, max } = data;\n    const values = data.values.sort((a, b) => a - b);\n\n    if (num === 1) {\n        return [min, max];\n    }\n\n    const limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n        // continuous\n        limits.push(min);\n        limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n        // equal interval\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(min + (i / num) * (max - min));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n        // log scale\n        if (min <= 0) {\n            throw new Error(\n                'Logarithmic scales are only possible for values > 0'\n            );\n        }\n        const min_log = Math.LOG10E * log(min);\n        const max_log = Math.LOG10E * log(max);\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n        // quantile scale\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            const p = ((values.length - 1) * i) / num;\n            const pb = floor(p);\n            if (pb === p) {\n                limits.push(values[pb]);\n            } else {\n                // p > pb\n                const pr = p - pb;\n                limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n            }\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n        // k-means clustering\n        /*\n        implementation based on\n        http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n        simplified for 1-d input values\n        */\n        let cluster;\n        const n = values.length;\n        const assignments = new Array(n);\n        const clusterSizes = new Array(num);\n        let repeat = true;\n        let nb_iters = 0;\n        let centroids = null;\n\n        // get seed values\n        centroids = [];\n        centroids.push(min);\n        for (let i = 1; i < num; i++) {\n            centroids.push(min + (i / num) * (max - min));\n        }\n        centroids.push(max);\n\n        while (repeat) {\n            // assignment step\n            for (let j = 0; j < num; j++) {\n                clusterSizes[j] = 0;\n            }\n            for (let i = 0; i < n; i++) {\n                const value = values[i];\n                let mindist = Number.MAX_VALUE;\n                let best;\n                for (let j = 0; j < num; j++) {\n                    const dist = abs(centroids[j] - value);\n                    if (dist < mindist) {\n                        mindist = dist;\n                        best = j;\n                    }\n                    clusterSizes[best]++;\n                    assignments[i] = best;\n                }\n            }\n\n            // update centroids step\n            const newCentroids = new Array(num);\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] = null;\n            }\n            for (let i = 0; i < n; i++) {\n                cluster = assignments[i];\n                if (newCentroids[cluster] === null) {\n                    newCentroids[cluster] = values[i];\n                } else {\n                    newCentroids[cluster] += values[i];\n                }\n            }\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] *= 1 / clusterSizes[j];\n            }\n\n            // check convergence\n            repeat = false;\n            for (let j = 0; j < num; j++) {\n                if (newCentroids[j] !== centroids[j]) {\n                    repeat = true;\n                    break;\n                }\n            }\n\n            centroids = newCentroids;\n            nb_iters++;\n\n            if (nb_iters > 200) {\n                repeat = false;\n            }\n        }\n\n        // finished k-means clustering\n        // the next part is borrowed from gabrielflor.it\n        const kClusters = {};\n        for (let j = 0; j < num; j++) {\n            kClusters[j] = [];\n        }\n        for (let i = 0; i < n; i++) {\n            cluster = assignments[i];\n            kClusters[cluster].push(values[i]);\n        }\n        let tmpKMeansBreaks = [];\n        for (let j = 0; j < num; j++) {\n            tmpKMeansBreaks.push(kClusters[j][0]);\n            tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n        }\n        tmpKMeansBreaks = tmpKMeansBreaks.sort((a, b) => a - b);\n        limits.push(tmpKMeansBreaks[0]);\n        for (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n            const v = tmpKMeansBreaks[i];\n            if (!isNaN(v) && limits.indexOf(v) === -1) {\n                limits.push(v);\n            }\n        }\n    }\n    return limits;\n}\n","import Color from '../Color.js';\nimport '../ops/luminance.js';\n\nexport default (a, b) => {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.luminance();\n    const l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\n/**\n * @license\n *\n * The APCA contrast prediction algorithm is based of the formulas published\n * in the APCA-1.0.98G specification by Myndex. The specification is available at:\n * https://raw.githubusercontent.com/Myndex/apca-w3/master/images/APCAw3_0.1.17_APCA0.0.98G.svg\n *\n * Note that the APCA implementation is still beta, so please update to\n * future versions of chroma.js when they become available.\n *\n * You can read more about the APCA Readability Criterion at\n * https://readtech.org/ARC/\n */\n\n// constants\nconst W_offset = 0.027;\nconst P_in = 0.0005;\nconst P_out = 0.1;\nconst R_scale = 1.14;\nconst B_threshold = 0.022;\nconst B_exp = 1.414;\n\nexport default (text, bg) => {\n    // parse input colors\n    text = new Color(text);\n    bg = new Color(bg);\n    // if text color has alpha, blend against background\n    if (text.alpha() < 1) {\n        text = mix(bg, text, text.alpha(), 'rgb');\n    }\n    const l_text = lum(...text.rgb());\n    const l_bg = lum(...bg.rgb());\n\n    // soft clamp black levels\n    const Y_text =\n        l_text >= B_threshold\n            ? l_text\n            : l_text + Math.pow(B_threshold - l_text, B_exp);\n    const Y_bg =\n        l_bg >= B_threshold ? l_bg : l_bg + Math.pow(B_threshold - l_bg, B_exp);\n\n    // normal polarity (dark text on light background)\n    const S_norm = Math.pow(Y_bg, 0.56) - Math.pow(Y_text, 0.57);\n    // reverse polarity (light text on dark background)\n    const S_rev = Math.pow(Y_bg, 0.65) - Math.pow(Y_text, 0.62);\n    // clamp noise then scale\n    const C =\n        Math.abs(Y_bg - Y_text) < P_in\n            ? 0\n            : Y_text < Y_bg\n              ? S_norm * R_scale\n              : S_rev * R_scale;\n    // clamp minimum contrast then offset\n    const S_apc = Math.abs(C) < P_out ? 0 : C > 0 ? C - W_offset : C + W_offset;\n    // scale to 100\n    return S_apc * 100;\n};\n\nfunction lum(r, g, b) {\n    return (\n        0.2126729 * Math.pow(r / 255, 2.4) +\n        0.7151522 * Math.pow(g / 255, 2.4) +\n        0.072175 * Math.pow(b / 255, 2.4)\n    );\n}\n","import Color from '../Color.js';\nconst { sqrt, pow, min, max, atan2, abs, cos, sin, exp, PI } = Math;\n\nexport default function (a, b, Kl = 1, Kc = 1, Kh = 1) {\n    // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n    var rad2deg = function (rad) {\n        return (360 * rad) / (2 * PI);\n    };\n    var deg2rad = function (deg) {\n        return (2 * PI * deg) / 360;\n    };\n    a = new Color(a);\n    b = new Color(b);\n    const [L1, a1, b1] = Array.from(a.lab());\n    const [L2, a2, b2] = Array.from(b.lab());\n    const avgL = (L1 + L2) / 2;\n    const C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    const C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    const avgC = (C1 + C2) / 2;\n    const G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    const a1p = a1 * (1 + G);\n    const a2p = a2 * (1 + G);\n    const C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    const C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    const avgCp = (C1p + C2p) / 2;\n    const arctan1 = rad2deg(atan2(b1, a1p));\n    const arctan2 = rad2deg(atan2(b2, a2p));\n    const h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    const h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    const avgHp =\n        abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    const T =\n        1 -\n        0.17 * cos(deg2rad(avgHp - 30)) +\n        0.24 * cos(deg2rad(2 * avgHp)) +\n        0.32 * cos(deg2rad(3 * avgHp + 6)) -\n        0.2 * cos(deg2rad(4 * avgHp - 63));\n    let deltaHp = h2p - h1p;\n    deltaHp =\n        abs(deltaHp) <= 180\n            ? deltaHp\n            : h2p <= h1p\n              ? deltaHp + 360\n              : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    const deltaL = L2 - L1;\n    const deltaCp = C2p - C1p;\n    const sl = 1 + (0.015 * pow(avgL - 50, 2)) / sqrt(20 + pow(avgL - 50, 2));\n    const sc = 1 + 0.045 * avgCp;\n    const sh = 1 + 0.015 * avgCp * T;\n    const deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    const Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    const Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    const result = sqrt(\n        pow(deltaL / (Kl * sl), 2) +\n            pow(deltaCp / (Kc * sc), 2) +\n            pow(deltaHp / (Kh * sh), 2) +\n            Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh))\n    );\n    return max(0, min(100, result));\n}\n","import Color from '../Color.js';\n\nexport default (...args) => {\n    try {\n        new Color(...args);\n        return true;\n        // eslint-disable-next-line\n    } catch (e) {\n        return false;\n    }\n};\n","// some pre-defined color scales:\nimport chroma from '../chroma.js';\nimport '../io/hsl/index.js';\nimport scale from '../generator/scale.js';\n\nexport default {\n    cool() {\n        return scale([chroma.hsl(180, 1, 0.9), chroma.hsl(250, 0.7, 0.4)]);\n    },\n    hot() {\n        return scale(['#000', '#f00', '#ff0', '#fff'], [0, 0.25, 0.75, 1]).mode(\n            'rgb'\n        );\n    }\n};\n","/**\n    ColorBrewer colors for chroma.js\n\n    Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n    Pennsylvania State University.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software distributed\n    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n    CONDITIONS OF ANY KIND, either express or implied. See the License for the\n    specific language governing permissions and limitations under the License.\n*/\n\nconst colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n};\n\nconst colorbrewerTypes = Object.keys(colorbrewer);\nconst typeMap = new Map(colorbrewerTypes.map((key) => [key.toLowerCase(), key]));\n\n// use Proxy to allow case-insensitive access to palettes\nconst colorbrewerProxy =\n    typeof Proxy === 'function'\n        ? new Proxy(colorbrewer, {\n              get(target, prop) {\n                  const lower = prop.toLowerCase();\n                  if (typeMap.has(lower)) {\n                      return target[typeMap.get(lower)];\n                  }\n              },\n              getOwnPropertyNames() {\n                  return Object.getOwnPropertyNames(colorbrewerTypes);\n              }\n          })\n        : colorbrewer;\n\nexport default colorbrewerProxy;\n","import { unpack } from '../../utils/index.js';\nconst { max } = Math;\n\nconst rgb2cmyk = (...args) => {\n    let [r, g, b] = unpack(args, 'rgb');\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    const k = 1 - max(r, max(g, b));\n    const f = k < 1 ? 1 / (1 - k) : 0;\n    const c = (1 - r - k) * f;\n    const m = (1 - g - k) * f;\n    const y = (1 - b - k) * f;\n    return [c, m, y, k];\n};\n\nexport default rgb2cmyk;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nimport cmyk2rgb from './cmyk2rgb.js';\nimport rgb2cmyk from './rgb2cmyk.js';\n\nColor.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n};\n\nconst cmyk = (...args) => new Color(...args, 'cmyk');\nObject.assign(chroma, { cmyk });\n\ninput.format.cmyk = cmyk2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'cmyk');\n        if (type(args) === 'array' && args.length === 4) {\n            return 'cmyk';\n        }\n    }\n});\n\nexport { cmyk };\n","import { unpack } from '../../utils/index.js';\n\nconst cmyk2rgb = (...args) => {\n    args = unpack(args, 'cmyk');\n    const [c, m, y, k] = args;\n    const alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) return [0, 0, 0, alpha];\n    return [\n        c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n        m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n        y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n        alpha\n    ];\n};\n\nexport default cmyk2rgb;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - hsl2css(h,s,l)\n * - hsl2css(h,s,l,a)\n * - hsl2css([h,s,l], mode)\n * - hsl2css([h,s,l,a], mode)\n * - hsl2css({h,s,l,a}, mode)\n */\nconst hsl2css = (...args) => {\n    const hsla = unpack(args, 'hsla');\n    let mode = last(args) || 'lsa';\n    hsla[0] = rnd2(hsla[0] || 0) + 'deg';\n    hsla[1] = rnd2(hsla[1] * 100) + '%';\n    hsla[2] = rnd2(hsla[2] * 100) + '%';\n    if (mode === 'hsla' || (hsla.length > 3 && hsla[3] < 1)) {\n        hsla[3] = '/ ' + (hsla.length > 3 ? hsla[3] : 1);\n        mode = 'hsla';\n    } else {\n        hsla.length = 3;\n    }\n    return `${mode.substr(0, 3)}(${hsla.join(' ')})`;\n};\n\nexport default hsl2css;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { unpack, last } from '../../utils/index.js';\nimport hsl2css from './hsl2css.js';\nimport rgb2hsl from '../hsl/rgb2hsl.js';\nimport lab2css from './lab2css.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lch2css from './lch2css.js';\nimport rgb2lch from '../lch/rgb2lch.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport oklab2css from './oklab2css.js';\nimport rgb2oklch from '../oklch/rgb2oklch.js';\nimport oklch2css from './oklch2css.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\nconst { round } = Math;\n\n/*\n * supported arguments:\n * - rgb2css(r,g,b)\n * - rgb2css(r,g,b,a)\n * - rgb2css([r,g,b], mode)\n * - rgb2css([r,g,b,a], mode)\n * - rgb2css({r,g,b,a}, mode)\n */\nconst rgb2css = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    let mode = last(args) || 'rgb';\n    if (mode.substr(0, 3) === 'hsl') {\n        return hsl2css(rgb2hsl(rgba), mode);\n    }\n    if (mode.substr(0, 3) === 'lab') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lab2css(rgb2lab(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 3) === 'lch') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lch2css(rgb2lch(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 5) === 'oklab') {\n        return oklab2css(rgb2oklab(rgba));\n    }\n    if (mode.substr(0, 5) === 'oklch') {\n        return oklch2css(rgb2oklch(rgba));\n    }\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n    if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {\n        rgba[3] = '/ ' + (rgba.length > 3 ? rgba[3] : 1);\n        mode = 'rgba';\n    }\n    return `${mode.substr(0, 3)}(${rgba.slice(0, mode === 'rgb' ? 3 : 4).join(' ')})`;\n};\n\nexport default rgb2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    let mode = last(args) || 'lab';\n    laba[0] = rnd2(laba[0]) + '%';\n    laba[1] = rnd2(laba[1]);\n    laba[2] = rnd2(laba[2]);\n    if (mode === 'laba' || (laba.length > 3 && laba[3] < 1)) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `lab(${laba.join(' ')})`;\n};\n\nexport default lab2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    let mode = last(args) || 'lab';\n    lcha[0] = rnd2(lcha[0]) + '%';\n    lcha[1] = rnd2(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (mode === 'lcha' || (lcha.length > 3 && lcha[3] < 1)) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `lch(${lcha.join(' ')})`;\n};\n\nexport default lch2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    laba[0] = rnd2(laba[0] * 100) + '%';\n    laba[1] = rnd3(laba[1]);\n    laba[2] = rnd3(laba[2]);\n    if (laba.length > 3 && laba[3] < 1) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `oklab(${laba.join(' ')})`;\n};\n\nexport default oklab2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    lcha[0] = rnd2(lcha[0] * 100) + '%';\n    lcha[1] = rnd3(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (lcha.length > 3 && lcha[3] < 1) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `oklch(${lcha.join(' ')})`;\n};\n\nexport default oklch2css;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import hsl2rgb from '../hsl/hsl2rgb.js';\nimport lab2rgb from '../lab/lab2rgb.js';\nimport lch2rgb from '../lch/lch2rgb.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\nimport oklch2rgb from '../oklch/oklch2rgb.js';\nimport input from '../input.js';\nimport limit from '../../utils/limit.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\n\nconst INT_OR_PCT = /((?:-?\\d+)|(?:-?\\d+(?:\\.\\d+)?)%|none)/.source;\nconst FLOAT_OR_PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%?)|none)/.source;\nconst PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%)|none)/.source;\nconst RE_S = /\\s*/.source;\nconst SEP = /\\s+/.source;\nconst COMMA = /\\s*,\\s*/.source;\nconst ANLGE = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:deg)?)|none)/.source;\nconst ALPHA = /\\s*(?:\\/\\s*((?:[01]|[01]?\\.\\d+)|\\d+(?:\\.\\d+)?%))?/.source;\n\n// e.g. rgb(250 20 0), rgb(100% 50% 20%), rgb(100% 50% 20% / 0.5)\nconst RE_RGB = new RegExp(\n    '^rgba?\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_RGB_LEGACY = new RegExp(\n    '^rgb\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\nconst RE_RGBA_LEGACY = new RegExp(\n    '^rgba\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT, FLOAT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\n\nconst RE_HSL = new RegExp(\n    '^hsla?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(SEP) + ALPHA + '\\\\)$'\n);\nconst RE_HSL_LEGACY = new RegExp(\n    '^hsl?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(COMMA) + RE_S + '\\\\)$'\n);\nconst RE_HSLA_LEGACY =\n    /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\nconst RE_LAB = new RegExp(\n    '^lab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_LCH = new RegExp(\n    '^lch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLAB = new RegExp(\n    '^oklab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLCH = new RegExp(\n    '^oklch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\n\nconst { round } = Math;\n\nconst roundRGB = (rgb) => {\n    return rgb.map((v, i) => (i <= 2 ? limit(round(v), 0, 255) : v));\n};\n\nconst percentToAbsolute = (pct, min = 0, max = 100, signed = false) => {\n    if (typeof pct === 'string' && pct.endsWith('%')) {\n        pct = parseFloat(pct.substring(0, pct.length - 1)) / 100;\n        if (signed) {\n            // signed percentages are in the range -100% to 100%\n            pct = min + (pct + 1) * 0.5 * (max - min);\n        } else {\n            pct = min + pct * (max - min);\n        }\n    }\n    return +pct;\n};\n\nconst noneToValue = (v, noneValue) => {\n    return v === 'none' ? noneValue : v;\n};\n\nconst css2rgb = (css) => {\n    css = css.toLowerCase().trim();\n\n    if (css === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n\n    let m;\n\n    if (input.format.named) {\n        try {\n            return input.format.named(css);\n            // eslint-disable-next-line\n        } catch (e) {}\n    }\n\n    // rgb(250 20 0) or rgb(250,20,0)\n    if ((m = css.match(RE_RGB)) || (m = css.match(RE_RGB_LEGACY))) {\n        let rgb = m.slice(1, 4);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = +percentToAbsolute(noneToValue(rgb[i], 0), 0, 255);\n        }\n        rgb = roundRGB(rgb);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha; // default alpha\n        return rgb;\n    }\n\n    // rgba(250,20,0,0.4)\n    if ((m = css.match(RE_RGBA_LEGACY))) {\n        const rgb = m.slice(1, 5);\n        for (let i = 0; i < 4; i++) {\n            rgb[i] = +percentToAbsolute(rgb[i], 0, 255);\n        }\n        return rgb;\n    }\n\n    // hsl(0,100%,50%)\n    if ((m = css.match(RE_HSL)) || (m = css.match(RE_HSL_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[0] = +noneToValue(hsl[0].replace('deg', ''), 0);\n        hsl[1] = +percentToAbsolute(noneToValue(hsl[1], 0), 0, 100) * 0.01;\n        hsl[2] = +percentToAbsolute(noneToValue(hsl[2], 0), 0, 100) * 0.01;\n        const rgb = roundRGB(hsl2rgb(hsl));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    // hsla(0,100%,50%,0.5)\n    if ((m = css.match(RE_HSLA_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[1] *= 0.01;\n        hsl[2] *= 0.01;\n        const rgb = hsl2rgb(hsl);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = round(rgb[i]);\n        }\n        rgb[3] = +m[4]; // default alpha = 1\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LAB))) {\n        const lab = m.slice(1, 4);\n        lab[0] = percentToAbsolute(noneToValue(lab[0], 0), 0, 100);\n        lab[1] = percentToAbsolute(noneToValue(lab[1], 0), -125, 125, true);\n        lab[2] = percentToAbsolute(noneToValue(lab[2], 0), -125, 125, true);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lab2rgb(lab));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LCH))) {\n        const lch = m.slice(1, 4);\n        lch[0] = percentToAbsolute(lch[0], 0, 100);\n        lch[1] = percentToAbsolute(noneToValue(lch[1], 0), 0, 150, false);\n        lch[2] = +noneToValue(lch[2].replace('deg', ''), 0);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lch2rgb(lch));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLAB))) {\n        const oklab = m.slice(1, 4);\n        oklab[0] = percentToAbsolute(noneToValue(oklab[0], 0), 0, 1);\n        oklab[1] = percentToAbsolute(noneToValue(oklab[1], 0), -0.4, 0.4, true);\n        oklab[2] = percentToAbsolute(noneToValue(oklab[2], 0), -0.4, 0.4, true);\n        const rgb = roundRGB(oklab2rgb(oklab));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLCH))) {\n        const oklch = m.slice(1, 4);\n        oklch[0] = percentToAbsolute(noneToValue(oklch[0], 0), 0, 1);\n        oklch[1] = percentToAbsolute(noneToValue(oklch[1], 0), 0, 0.4, false);\n        oklch[2] = +noneToValue(oklch[2].replace('deg', ''), 0);\n        const rgb = roundRGB(oklch2rgb(oklch));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n};\n\ncss2rgb.test = (s) => {\n    return (\n        // modern\n        RE_RGB.test(s) ||\n        RE_HSL.test(s) ||\n        RE_LAB.test(s) ||\n        RE_LCH.test(s) ||\n        RE_OKLAB.test(s) ||\n        RE_OKLCH.test(s) ||\n        // legacy\n        RE_RGB_LEGACY.test(s) ||\n        RE_RGBA_LEGACY.test(s) ||\n        RE_HSL_LEGACY.test(s) ||\n        RE_HSLA_LEGACY.test(s) ||\n        s === 'transparent'\n    );\n};\n\nexport default css2rgb;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport rgb2css from './rgb2css.js';\nimport css2rgb from './css2rgb.js';\n\nColor.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n};\n\nconst css = (...args) => new Color(...args, 'css');\nchroma.css = css;\n\ninput.format.css = css2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && css2rgb.test(h)) {\n            return 'css';\n        }\n    }\n});\n\nexport { css };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport input from '../input.js';\nimport { unpack } from '../../utils/index.js';\n\ninput.format.gl = (...args) => {\n    const rgb = unpack(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n};\n\nconst gl = (...args) => new Color(...args, 'gl');\nchroma.gl = gl;\n\nColor.prototype.gl = function () {\n    const rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n};\n\nexport { gl };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport { type } from '../../utils/index.js';\nimport input from '../input.js';\nimport hex2rgb from './hex2rgb.js';\nimport rgb2hex from './rgb2hex.js';\n\nColor.prototype.hex = function (mode) {\n    return rgb2hex(this._rgb, mode);\n};\n\nconst hex = (...args) => new Color(...args, 'hex');\nchroma.hex = hex;\n\ninput.format.hex = hex2rgb;\ninput.autodetect.push({\n    p: 4,\n    test: (h, ...rest) => {\n        if (\n            !rest.length &&\n            type(h) === 'string' &&\n            [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0\n        ) {\n            return 'hex';\n        }\n    }\n});\n\nexport { hex };\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n */\n\nconst { log } = Math;\n\nconst temperature2rgb = (kelvin) => {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n        r = 255;\n        g =\n            temp < 6\n                ? 0\n                : -155.25485562709179 -\n                  0.44596950469579133 * (g = temp - 2) +\n                  104.49216199393888 * log(g);\n        b =\n            temp < 20\n                ? 0\n                : -254.76935184120902 +\n                  0.8274096064007395 * (b = temp - 10) +\n                  115.67994401066147 * log(b);\n    } else {\n        r =\n            351.97690566805693 +\n            0.114206453784165 * (r = temp - 55) -\n            40.25366309332127 * log(r);\n        g =\n            325.4494125711974 +\n            0.07943456536662342 * (g = temp - 50) -\n            28.0852963507957 * log(g);\n        b = 255;\n    }\n    return [r, g, b, 1];\n};\n\nexport default temperature2rgb;\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n **/\n\nimport temperature2rgb from './temperature2rgb.js';\nimport { unpack } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2temperature = (...args) => {\n    const rgb = unpack(args, 'rgb');\n    const r = rgb[0],\n        b = rgb[2];\n    let minTemp = 1000;\n    let maxTemp = 40000;\n    const eps = 0.4;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n        temp = (maxTemp + minTemp) * 0.5;\n        const rgb = temperature2rgb(temp);\n        if (rgb[2] / rgb[0] >= b / r) {\n            maxTemp = temp;\n        } else {\n            minTemp = temp;\n        }\n    }\n    return round(temp);\n};\n\nexport default rgb2temperature;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport temperature2rgb from './temperature2rgb.js';\nimport rgb2temperature from './rgb2temperature.js';\n\nColor.prototype.temp =\n    Color.prototype.kelvin =\n    Color.prototype.temperature =\n        function () {\n            return rgb2temperature(this._rgb);\n        };\n\nconst temp = (...args) => new Color(...args, 'temp');\nObject.assign(chroma, { temp, kelvin: temp, temperature: temp });\n\ninput.format.temp =\n    input.format.kelvin =\n    input.format.temperature =\n        temperature2rgb;\n\nexport { temp, temp as kelvin, temp as temperature };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklch2rgb from './oklch2rgb.js';\nimport rgb2oklch from './rgb2oklch.js';\n\nColor.prototype.oklch = function () {\n    return rgb2oklch(this._rgb);\n};\n\nconst oklch = (...args) => new Color(...args, 'oklch');\nObject.assign(chroma, { oklch });\n\ninput.format.oklch = oklch2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklch');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklch';\n        }\n    }\n});\n\nexport { oklch };\n","// feel free to comment out anything to rollup\n// a smaller chroma.js bundle\nimport chroma from './src/chroma.js';\n\n// io --> convert colors\nimport './src/io/named/index.js';\n\n// operators --> modify existing Colors\nimport './src/ops/alpha.js';\nimport './src/ops/clipped.js';\nimport './src/ops/darken.js';\nimport './src/ops/get.js';\nimport './src/ops/luminance.js';\nimport './src/ops/mix.js';\nimport './src/ops/premultiply.js';\nimport './src/ops/saturate.js';\nimport './src/ops/set.js';\nimport './src/ops/shade.js';\n\n// interpolators\nimport './src/interpolator/rgb.js';\nimport './src/interpolator/lrgb.js';\nimport './src/interpolator/lab.js';\nimport './src/interpolator/lch.js';\nimport './src/interpolator/num.js';\nimport './src/interpolator/hcg.js';\nimport './src/interpolator/hsi.js';\nimport './src/interpolator/hsl.js';\nimport './src/interpolator/hsv.js';\nimport './src/interpolator/oklab.js';\nimport './src/interpolator/oklch.js';\n\n// generators -- > create new colors\nimport average from './src/generator/average.js';\nimport bezier from './src/generator/bezier.js';\nimport blend from './src/generator/blend.js';\nimport cubehelix from './src/generator/cubehelix.js';\nimport mix from './src/generator/mix.js';\nimport random from './src/generator/random.js';\nimport scale from './src/generator/scale.js';\n\n// other utility methods\nimport { analyze } from './src/utils/analyze.js';\nimport contrast from './src/utils/contrast.js';\nimport contrastAPCA from './src/utils/contrastAPCA.js';\nimport deltaE from './src/utils/delta-e.js';\nimport distance from './src/utils/distance.js';\nimport { limits } from './src/utils/analyze.js';\nimport valid from './src/utils/valid.js';\nimport input from './src/io/input.js';\n\n// scale\nimport scales from './src/utils/scales.js';\n\n// colors\nimport colors from './src/colors/w3cx11.js';\nimport brewer from './src/colors/colorbrewer.js';\nimport Color from './src/Color.js';\n\nObject.assign(chroma, {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    interpolate: mix,\n    limits,\n    mix,\n    random,\n    scale,\n    scales,\n    valid\n});\n\nexport default chroma;\n\nexport {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    limits,\n    mix,\n    mix as interpolate,\n    random,\n    scale,\n    scales,\n    valid\n};\n\nexport * from './src/io/cmyk/index.js';\nexport * from './src/io/css/index.js';\nexport * from './src/io/gl/index.js';\nexport * from './src/io/hcg/index.js';\nexport * from './src/io/hex/index.js';\nexport * from './src/io/hsi/index.js';\nexport * from './src/io/hsl/index.js';\nexport * from './src/io/hsv/index.js';\nexport * from './src/io/lab/index.js';\nexport * from './src/io/lch/index.js';\nexport * from './src/io/num/index.js';\nexport * from './src/io/rgb/index.js';\nexport * from './src/io/temp/index.js';\nexport * from './src/io/oklab/index.js';\nexport * from './src/io/oklch/index.js';\n","import Color from '../Color.js';\n\n// simple Euclidean distance\nexport default function (a, b, mode = 'lab') {\n    // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.get(mode);\n    const l2 = b.get(mode);\n    let sum_sq = 0;\n    for (let i in l1) {\n        const d = (l1[i] || 0) - (l2[i] || 0);\n        sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n}\n","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2019 Tim Guan-tin Chien and contributors.\n * Released under the MIT license\n */\n\n'use strict'\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate () {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout () {\n      if (!window.postMessage || !window.addEventListener) {\n        return null\n      }\n\n      var callbacks = [undefined]\n      var message = 'zero-timeout-message'\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout (callback) {\n        var id = callbacks.length\n        callbacks.push(callback)\n        window.postMessage(message + id.toString(36), '*')\n\n        return id\n      }\n\n      window.addEventListener('message', function setZeroTimeoutMessage (evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return\n        }\n\n        evt.stopImmediatePropagation()\n\n        var id = parseInt(evt.data.substr(message.length), 36)\n        if (!callbacks[id]) {\n          return\n        }\n\n        callbacks[id]()\n        callbacks[id] = undefined\n      }, true)\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout (id) {\n        if (!callbacks[id]) {\n          return\n        }\n\n        callbacks[id] = undefined\n      }\n\n      return setZeroTimeout\n    })() ||\n    // fallback\n    function setImmediateFallback (fn) {\n      window.setTimeout(fn, 0)\n    }\n  })()\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate () {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback (timer) {\n      window.clearTimeout(timer)\n    }\n  })()\n}\n\n(function (global) {\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported () {\n    var canvas = document.createElement('canvas')\n    if (!canvas || !canvas.getContext) {\n      return false\n    }\n\n    var ctx = canvas.getContext('2d')\n    if (!ctx) {\n      return false\n    }\n    if (!ctx.getImageData) {\n      return false\n    }\n    if (!ctx.fillText) {\n      return false\n    }\n\n    if (!Array.prototype.some) {\n      return false\n    }\n    if (!Array.prototype.push) {\n      return false\n    }\n\n    return true\n  }())\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize () {\n    if (!isSupported) {\n      return\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d')\n\n    // start from 20\n    var size = 20\n\n    // two sizes to measure\n    var hanWidth, mWidth\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif'\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1)\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width\n      mWidth = ctx.measureText('m').width\n\n      size--\n    }\n\n    return 0\n  })()\n\n  var getItemExtraData = function (item) {\n    if (Array.isArray(item)) {\n      var itemCopy = item.slice()\n      // remove data we already have (word and weight)\n      itemCopy.splice(0, 2)\n      return itemCopy\n    } else {\n      return []\n    }\n  }\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray (arr) {\n    for (var j, x, i = arr.length; i;) {\n      j = Math.floor(Math.random() * i)\n      x = arr[--i]\n      arr[i] = arr[j]\n      arr[j] = x\n    }\n    return arr\n  }\n\n  var timer = {};\n  var WordCloud = function WordCloud (elements, options) {\n    if (!isSupported) {\n      return\n    }\n\n    var timerId = Math.floor(Math.random() * Date.now())\n\n    if (!Array.isArray(elements)) {\n      elements = [elements]\n    }\n\n    elements.forEach(function (el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el)\n        if (!elements[i]) {\n          throw new Error('The element id specified is not found.')\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw new Error('You must pass valid HTML elements, or ID of the element.')\n      }\n    })\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff', // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      shrinkToFit: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop () {},\n\n      minRotation: -Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationSteps: 0,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    }\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key]\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor\n      settings.weightFactor = function weightFactor (pt) {\n        return pt * factor // in px\n      }\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle'\n          break\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid (theta) {\n            return 1 - Math.sin(theta)\n          }\n          break\n\n          /*\n          To work out an X-gon, one has to calculate \"m\",\n          where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n          http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n          2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n          Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n          where t' equals to mod(t, 2PI/X)\n         */\n\n        case 'diamond':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare (theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4)\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime))\n          }\n          break\n\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+min(1%2Fabs(cos(t\n          // )),1%2Fabs(sin(t)))),+t+%3D+0+..+2*PI\n          settings.shape = function shapeSquare (theta) {\n            return Math.min(\n              1 / Math.abs(Math.cos(theta)),\n              1 / Math.abs(Math.sin(theta))\n            )\n          }\n          break\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle (theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3)\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime))\n          }\n          break\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle (theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3)\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime))\n          }\n          break\n\n        case 'pentagon':\n          settings.shape = function shapePentagon (theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5)\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime))\n          }\n          break\n\n        case 'star':\n          settings.shape = function shapeStar (theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10)\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime))\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime))\n            }\n          }\n          break\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4)\n\n    /* shorthand */\n    var g = settings.gridSize\n    var maskRectWidth = g - settings.maskGapWidth\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation)\n    var rotationSteps = Math.abs(Math.floor(settings.rotationSteps))\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation)\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime\n\n    /* function for getting the color of the text */\n    var getTextColor\n    function randomHslColor (min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)'\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor () {\n          return randomHslColor(10, 50)\n        }\n        break\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor () {\n          return randomHslColor(50, 90)\n        }\n        break\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color\n        }\n        break\n    }\n\n    /* function for getting the font-weight of the text */\n    var getTextFontWeight\n    if (typeof settings.fontWeight === 'function') {\n      getTextFontWeight = settings.fontWeight\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes\n    }\n\n    /* Interactive */\n    var interactive = false\n    var infoGrid = []\n    var hovered\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent (evt) {\n      var canvas = evt.currentTarget\n      var rect = canvas.getBoundingClientRect()\n      var clientX\n      var clientY\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX\n        clientY = evt.touches[0].clientY\n      } else {\n        clientX = evt.clientX\n        clientY = evt.clientY\n      }\n\n      var eventXvalue = clientX - rect.left\n      var eventX = eventXvalue < 0 ? 0 : eventXvalue\n      var eventY = clientY - rect.top\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g)\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g)\n      \n      if (!infoGrid[x]) {\n        return null\n      }\n\n      return infoGrid[x][y]\n    }\n\n    var wordcloudhover = function wordcloudhover (evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt)\n\n      if (hovered === info) {\n        return\n      }\n\n      hovered = info\n      if (!info) {\n        settings.hover(undefined, undefined, evt)\n\n        return\n      }\n\n      settings.hover(info.item, info.dimension, evt)\n    }\n\n    var wordcloudclick = function wordcloudclick (evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt)\n      if (!info) {\n        return\n      }\n\n      settings.click(info.item, info.dimension, evt)\n      evt.preventDefault()\n    }\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = []\n    var getPointsAtRadius = function getPointsAtRadius (radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius]\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8\n\n      // Getting all the points at this radius\n      var t = T\n      var points = []\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0])\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI) // 0 to 1\n        }\n\n        // Push [x, y, t] t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI])\n      }\n\n      pointsAtRadius[radius] = points\n      return points\n    }\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime () {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold))\n    }\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg () {\n      if (settings.rotateRatio === 0) {\n        return 0\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0\n      }\n\n      if (rotationRange === 0) {\n        return minRotation\n      }\n\n      if (rotationSteps > 0) {\n        // Min rotation + zero or more steps * span of one step\n        return minRotation +\n          Math.floor(Math.random() * rotationSteps) *\n          rotationRange / (rotationSteps - 1)\n      } else {\n        return minRotation + Math.random() * rotationRange\n      }\n    }\n\n    var getTextInfo = function getTextInfo (word, weight, rotateDeg, extraDataArray) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false\n      var fontSize = settings.weightFactor(weight)\n      if (fontSize <= settings.minSize) {\n        return false\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor () {\n          var mu = 2\n          while (mu * fontSize < minFontSize) {\n            mu += 2\n          }\n          return mu\n        })()\n      }\n\n      // Get fontWeight that will be used to set fctx.font\n      var fontWeight\n      if (getTextFontWeight) {\n        fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray)\n      } else {\n        fontWeight = settings.fontWeight\n      }\n\n      var fcanvas = document.createElement('canvas')\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true })\n\n      fctx.font = fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu\n      var fh = Math.max(fontSize * mu,\n        fctx.measureText('m').width,\n        fctx.measureText('\\uFF37').width\n      ) / mu\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2\n      var boxHeight = fh * 3\n      var fgw = Math.ceil(boxWidth / g)\n      var fgh = Math.ceil(boxHeight / g)\n      boxWidth = fgw * g\n      boxHeight = fgh * g\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = -fw / 2\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = -fh * 0.4\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g)\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g)\n      var width = cgw * g\n      var height = cgh * g\n\n      fcanvas.setAttribute('width', width)\n      fcanvas.setAttribute('height', height)\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas)\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save()\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu)\n      fctx.translate(width * mu / 2, height * mu / 2)\n      fctx.rotate(-rotateDeg)\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000'\n      fctx.textBaseline = 'middle'\n      fctx.fillText(\n        word, fillTextOffsetX * mu,\n        (fillTextOffsetY + fontSize * 0.5) * mu\n      )\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data\n\n      if (exceedTime()) {\n        return false\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(\n          fillTextOffsetX * mu,\n          fillTextOffsetY, fw * mu, fh * mu\n        )\n        fctx.restore()\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = []\n      var gx = cgw\n      var gy, x, y\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2]\n      while (gx--) {\n        gy = cgh\n        while (gy--) {\n          y = g\n          /* eslint no-labels: [\"error\", { \"allowLoop\": true }] */\n          singleGridLoop: while (y--) {\n            x = g\n            while (x--) {\n              if (imageData[((gy * g + y) * width +\n                (gx * g + x)) * 4 + 3]) {\n                occupied.push([gx, gy])\n\n                if (gx < bounds[3]) {\n                  bounds[3] = gx\n                }\n                if (gx > bounds[1]) {\n                  bounds[1] = gx\n                }\n                if (gy < bounds[0]) {\n                  bounds[0] = gy\n                }\n                if (gy > bounds[2]) {\n                  bounds[2] = gy\n                }\n\n                if (debug) {\n                  fctx.fillStyle = 'rgba(255, 0, 0, 0.5)'\n                  fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5)\n                }\n                break singleGridLoop\n              }\n            }\n          }\n          if (debug) {\n            fctx.fillStyle = 'rgba(0, 0, 255, 0.5)'\n            fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5)\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)'\n        fctx.fillRect(\n          bounds[3] * g,\n          bounds[0] * g,\n          (bounds[1] - bounds[3] + 1) * g,\n          (bounds[2] - bounds[0] + 1) * g\n        )\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      }\n    }\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText (gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length\n      while (i--) {\n        var px = gx + occupied[i][0]\n        var py = gy + occupied[i][1]\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false\n          }\n          continue\n        }\n\n        if (!grid[px][py]) {\n          return false\n        }\n      }\n      return true\n    }\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText (gx, gy, info, word, weight, distance, theta, rotateDeg, attributes, extraDataArray) {\n      var fontSize = info.fontSize\n      var color\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta, extraDataArray)\n      } else {\n        color = settings.color\n      }\n\n      // get fontWeight that will be used to set ctx.font and font style rule\n      var fontWeight\n      if (getTextFontWeight) {\n        fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray)\n      } else {\n        fontWeight = settings.fontWeight\n      }\n\n      var classes\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, extraDataArray)\n      } else {\n        classes = settings.classes\n      }\n\n      elements.forEach(function (el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d')\n          var mu = info.mu\n\n          // Save the current state before messing it\n          ctx.save()\n          ctx.scale(1 / mu, 1 / mu)\n\n          ctx.font = fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily\n          ctx.fillStyle = color\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate(\n            (gx + info.gw / 2) * g * mu,\n            (gy + info.gh / 2) * g * mu\n          )\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(-rotateDeg)\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle'\n          ctx.fillText(\n            word, info.fillTextOffsetX * mu,\n            (info.fillTextOffsetY + fontSize * 0.5) * mu\n          )\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight) */\n\n          // Restore the state.\n          ctx.restore()\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span')\n          var transformRule = ''\n          transformRule = 'rotate(' + (-rotateDeg / Math.PI * 180) + 'deg) '\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')'\n          }\n          var styleRules = {\n            position: 'absolute',\n            display: 'block',\n            font: fontWeight + ' ' +\n              (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            left: ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            top: ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            width: info.fillTextWidth + 'px',\n            height: info.fillTextHeight + 'px',\n            lineHeight: fontSize + 'px',\n            whiteSpace: 'nowrap',\n            transform: transformRule,\n            webkitTransform: transformRule,\n            msTransform: transformRule,\n            transformOrigin: '50% 40%',\n            webkitTransformOrigin: '50% 40%',\n            msTransformOrigin: '50% 40%'\n          }\n          if (color) {\n            styleRules.color = color\n          }\n          span.textContent = word\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp]\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute])\n            }\n          }\n          if (classes) {\n            span.className += classes\n          }\n          el.appendChild(span)\n        }\n      })\n    }\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt (x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return\n      }\n\n      grid[x][y] = false\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d')\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth)\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension }\n      }\n    }\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid (gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied\n      var drawMask = settings.drawMask\n      var ctx\n      if (drawMask) {\n        ctx = elements[0].getContext('2d')\n        ctx.save()\n        ctx.fillStyle = settings.maskColor\n      }\n\n      var dimension\n      if (interactive) {\n        var bounds = info.bounds\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        }\n      }\n\n      var i = occupied.length\n      while (i--) {\n        var px = gx + occupied[i][0]\n        var py = gy + occupied[i][1]\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item)\n      }\n\n      if (drawMask) {\n        ctx.restore()\n      }\n    }\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord (item) {\n      var word, weight, attributes\n      if (Array.isArray(item)) {\n        word = item[0]\n        weight = item[1]\n      } else {\n        word = item.word\n        weight = item.weight\n        attributes = item.attributes\n      }\n      var rotateDeg = getRotateDeg()\n\n      var extraDataArray = getItemExtraData(item)\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg, extraDataArray)\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false\n      }\n\n      if (exceedTime()) {\n        return false\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound && !settings.shrinkToFit) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1\n\n      var tryToPutWordAtPoint = function (gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2)\n        var gy = Math.floor(gxy[1] - info.gh / 2)\n        var gw = info.gw\n        var gh = info.gh\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n          (maxRadius - r), gxy[2], rotateDeg, attributes, extraDataArray)\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item)\n\n        // Return true so some() will stop and also return true.\n        return true\n      }\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r)\n\n        if (settings.shuffle) {\n          points = [].concat(points)\n          shuffleArray(points)\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        // If all the points returns false, array.some() returns false.\n        var drawn = points.some(tryToPutWordAtPoint)\n\n        if (drawn) {\n          // leave putWord() and return true\n          return true\n        }\n      }\n      if (settings.shrinkToFit) {\n        if (Array.isArray(item)) {\n          item[1] = item[1] * 3 / 4\n        } else {\n          item.weight = item.weight * 3 / 4\n        }\n        return putWord(item)\n      }\n      // we tried all distances but text won't fit, return false\n      return false\n    }\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent (type, cancelable, details) {\n      if (cancelable) {\n        return !elements.some(function (el) {\n          var event = new CustomEvent(type, {\n            detail: details || {}\n          })\n          return !el.dispatchEvent(event)\n        }, this)\n      } else {\n        elements.forEach(function (el) {\n          var event = new CustomEvent(type, {\n            detail: details || {}\n          })\n          el.dispatchEvent(event)\n        }, this)\n      }\n    }\n\n    /* Start drawing on a canvas */\n    var start = function start () {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0]\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g)\n        ngy = Math.ceil(canvas.height / g)\n      } else {\n        var rect = canvas.getBoundingClientRect()\n        ngx = Math.ceil(rect.width / g)\n        ngy = Math.ceil(rect.height / g)\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin)\n        ? [settings.origin[0] / g, settings.origin[1] / g]\n        : [ngx / 2, ngy / 2]\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy))\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = []\n\n      var gx, gy, i\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function (el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d')\n            ctx.fillStyle = settings.backgroundColor\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1))\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1))\n          } else {\n            el.textContent = ''\n            el.style.backgroundColor = settings.backgroundColor\n            el.style.position = 'relative'\n          }\n        })\n\n        /* fill the grid with empty state */\n        gx = ngx\n        while (gx--) {\n          grid[gx] = []\n          gy = ngy\n          while (gy--) {\n            grid[gx][gy] = true\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d')\n\n        bctx.fillStyle = settings.backgroundColor\n        bctx.fillRect(0, 0, 1, 1)\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data\n\n        gx = ngx\n        var x, y\n        while (gx--) {\n          grid[gx] = []\n          gy = ngy\n          while (gy--) {\n            y = g\n            /* eslint no-labels: [\"error\", { \"allowLoop\": true }] */\n            singleGridLoop: while (y--) {\n              x = g\n              while (x--) {\n                i = 4\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false\n                    break singleGridLoop\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n        interactive = true\n\n        /* fill the grid with empty state */\n        gx = ngx + 1\n        while (gx--) {\n          infoGrid[gx] = []\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover)\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick)\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)'\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction () {\n          canvas.removeEventListener('wordcloudstart', stopInteraction)\n          canvas.removeEventListener('mousemove', wordcloudhover)\n          canvas.removeEventListener('click', wordcloudclick)\n          hovered = undefined\n        })\n      }\n\n      i = 0\n      var loopingFunction, stoppingFunction\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout\n        stoppingFunction = window.clearTimeout\n      } else {\n        loopingFunction = window.setImmediate\n        stoppingFunction = window.clearImmediate\n      }\n\n      var addEventListener = function addEventListener (type, listener) {\n        elements.forEach(function (el) {\n          el.addEventListener(type, listener)\n        }, this)\n      }\n\n      var removeEventListener = function removeEventListener (type, listener) {\n        elements.forEach(function (el) {\n          el.removeEventListener(type, listener)\n        }, this)\n      }\n\n      var anotherWordCloudStart = function anotherWordCloudStart () {\n        removeEventListener('wordcloudstart', anotherWordCloudStart)\n        stoppingFunction(timer[timerId])\n      }\n\n      addEventListener('wordcloudstart', anotherWordCloudStart)\n      timer[timerId] = loopingFunction(function loop () {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer[timerId])\n          sendEvent('wordcloudstop', false)\n          removeEventListener('wordcloudstart', anotherWordCloudStart)\n          delete timer[timerId];\n          return\n        }\n        escapeTime = (new Date()).getTime()\n        var drawn = putWord(settings.list[i])\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i],\n          drawn: drawn\n        })\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer[timerId])\n          settings.abort()\n          sendEvent('wordcloudabort', false)\n          sendEvent('wordcloudstop', false)\n          removeEventListener('wordcloudstart', anotherWordCloudStart)\n          delete timer[timerId]\n          return\n        }\n        i++\n        timer[timerId] = loopingFunction(loop, settings.wait)\n      }, settings.wait)\n    }\n\n    // All set, start the drawing\n    start()\n  }\n\n  WordCloud.isSupported = isSupported\n  WordCloud.minFontSize = minFontSize\n  WordCloud.stop = function stop () {\n    if (timer) {\n      for (var timerId in timer) {\n        window.clearImmediate(timer[timerId])\n      }\n    }\n  }\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) { // eslint-disable-line no-undef\n    global.WordCloud = WordCloud\n    define('wordcloud', [], function () { return WordCloud }) // eslint-disable-line no-undef\n  } else if (typeof module !== 'undefined' && module.exports) { // eslint-disable-line no-undef\n    module.exports = WordCloud // eslint-disable-line no-undef\n  } else {\n    global.WordCloud = WordCloud\n  }\n})(this) // jshint ignore:line\n","import { useEffect, useRef, type FC } from 'react';\nimport chroma from 'chroma-js';\nimport WordCloud from 'wordcloud';\n\nimport type { CollectionName } from '@/types/content';\n\nimport '@fontsource-variable/noto-serif-sc';\n\nexport interface Props {\n  tags: [string, number, string][];\n  collection?: CollectionName;\n}\n\nconst TagCloud: FC<Props> = ({\n  tags,\n  collection = 'post',\n}) => {\n  const cloudRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!cloudRef.current) return;\n\n    const renderWordCloud = () => {\n      const cloudContainer = cloudRef.current;\n      if (!cloudContainer) return;\n\n      // 清空之前的内容（如果有）\n      cloudContainer.replaceChildren();\n\n      const minWeight = Math.max(Math.min(...tags.map(tag => tag[1])), 1);\n      const maxWeight = Math.max(...tags.map(tag => tag[1]), 1);\n\n      // 边界保护：所有权重相同时使用默认factor\n      const factor = minWeight === maxWeight ? 1 : 48 / Math.log(maxWeight / minWeight);\n\n      // OKLCH颜色生成函数\n      const generateAdaptiveColor = () => {\n        const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        // 使用OKLCH颜色空间 - 感知均匀\n        return chroma.oklch(\n          isDark ? 0.75 + Math.random() * 0.15 : 0.35 + Math.random() * 0.15,  // L: 亮度\n          0.12 + Math.random() * 0.08,  // C: 色度\n          Math.random() * 360,          // H: 色相\n        ).hex();\n      };\n\n      // 配置选项\n      const options: WordCloud.Options = {\n        list: tags.filter(tag => tag[1] > 0),\n        gridSize: 8,\n        weightFactor: (weight: number) => {\n          if (weight === 0) return 24;\n          return 24 + Math.log(weight / minWeight) * factor;\n        },\n        fontFamily: 'Noto Serif SC Variable',\n        color: generateAdaptiveColor,\n        rotateRatio: 0,\n        backgroundColor: 'transparent',\n        shape: 'square',\n        // 为span元素添加类名\n        classes: 'transition-transform duration-200 hover:scale-110 cursor-pointer',\n        // 点击事件\n        click: (item) => {\n          window.location.href = item[2] as string;\n        },\n      };\n\n      // 调用WordCloud - 传入div而不是canvas，会自动使用span元素渲染\n      WordCloud(cloudContainer, options);\n    };\n\n    // 初次渲染\n    void document.fonts.load('16px Noto Serif SC Variable', '标签云TagCloud')\n      .then(() => {\n        renderWordCloud();\n      });\n\n    // 监听主题变化并重绘\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleThemeChange = () => {\n      // 主题变化时重新渲染\n      WordCloud.stop();\n      renderWordCloud();\n    };\n\n    mediaQuery.addEventListener('change', handleThemeChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleThemeChange);\n      WordCloud.stop();\n    };\n  }, [tags, collection]);\n\n  return (\n    <div\n      ref={cloudRef}\n      className=\"relative h-full min-h-64 w-full\"\n    />\n  );\n};\n\nexport default TagCloud;\n"],"names":["min","max","Math","limit","x","low","high","clip_rgb","rgb","_clipped","_unclipped","slice","i","classToType","name","toLowerCase","type","obj","Object","prototype","toString","call","unpack","args","keyOrder","length","Array","split","filter","k","undefined","map","last","l","PI","rnd2","a","round","rnd3","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","reverse3","arr","reverse","input","format","autodetect","Color","constructor","me","this","mode","_input","sorted","sort","b","p","chk","test","Error","apply","_rgb","push","hex","join","chroma","version","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RE_HEX","RE_HEXA","hex2rgb","match","substr","u","parseInt","rgb2hex","r","g","str","hxa","n","keys","named","h","rest","alpha","mutate","clipped","labConstants","Kn","labWhitePoint","Xn","Yn","Zn","kE","kKE","kK","RefWhiteRGB","X","Y","Z","MtxRGB2XYZ","m00","m01","m02","m10","m11","m12","m20","m21","m22","MtxXYZ2RGB","As","Bs","Cs","MtxAdaptMa","MtxAdaptMaI","ILLUMINANTS","Map","setLabWhitePoint","ill","get","String","getLabWhitePoint","lab2rgb","L","y","z","lab2xyz","b_","xyz2rgb","LAB_CONSTANTS","fy","fx","fz","fx3","fz3","pow","compand","linear","sign","abs","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","rgb2lab","rgb2xyz","xr","yr","zr","xyz2lab","gammaAdjustSRGB","companded","lab","assign","darken","amount","brighten","darker","brighter","mc","channel","src","indexOf","luminance","lum","cur_lum","max_iter","mid","interpolate","lm","rgb2luminance","luminance_x","index","mix","col1","col2","f","interpolator","premultiply","sin","cos","lch2lab","c","isNaN","lch2rgb","sqrt","atan2","lab2lch","Number","NaN","rgb2lch","lch","hcl","forEach","m","saturate","desaturate","set","value","charAt","out","tint","shade","xyz0","xyz1","lrgb","x1","y1","z1","x2","y2","z2","interpolate_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","hsl","hsv","hcg","hsi","oklch","num","rgb2num","c1","c2","floor","minRgb","maxRgb","delta","_g","rgb2hcg","_c","q","t","v","acos","min_","s","rgb2hsi","hsl2rgb","t3","t2","t1","h_","rgb2hsl","max_","rgb2hsv","multiplyMatrices","A","B","isArray","B_cols","_","product","row","col","reduce","oklab2rgb","LMStoXYZ","LMSnl","rgb2oklab","XYZ","LMStoOKLab","LMS","cbrt","XYZ_to_OKLab","oklab","_average_lrgb","colors","weights","xyz","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","d","analyze","limits","domain","arguments","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","t0","padding","numColors","result","dm","dd","left","right","ascending","end","__range__","samples","asc","cache","gamma","nodata","rnd","rgba","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","random","log","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","best","mindist","dist","newCentroids","kClusters","tmpKMeansBreaks","B_threshold","exp","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewerTypes","typeMap","colorbrewerProxy","Proxy","target","prop","lower","has","getOwnPropertyNames","cmyk","rgb2cmyk","rgb2oklch","rgb2css","hsla","hsl2css","prevWhitePoint","cssColor","laba","lab2css","lcha","lch2css","oklab2css","oklch2css","oklch2rgb","INT_OR_PCT","source","FLOAT_OR_PCT","PCT","RE_S","SEP","COMMA","ANLGE","ALPHA","RE_RGB","RegExp","RE_RGB_LEGACY","RE_RGBA_LEGACY","RE_HSL","RE_HSL_LEGACY","RE_HSLA_LEGACY","RE_LAB","RE_LCH","RE_OKLAB","RE_OKLCH","roundRGB","percentToAbsolute","pct","signed","endsWith","parseFloat","substring","noneToValue","noneValue","css2rgb","css","trim","e","replace","wp","gl","temperature2rgb","kelvin","temp","temperature","minTemp","maxTemp","rgb2temperature","average","w","first","shift","cnt","dx","dy","ci","xyz2","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","newrow","binom_row","el","contrast","l1","l2","contrastAPCA","text","bg","l_text","l_bg","Y_text","Y_bg","S_norm","S_rev","C","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rt","distance","sum_sq","code","valid","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","addEventListener","callbacks","message","evt","stopImmediatePropagation","id","clearImmediate","callback","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","global","isSupported","canvas","document","createElement","getContext","ctx","getImageData","fillText","some","minFontSize","hanWidth","mWidth","size","font","measureText","width","shuffleArray","WordCloud","elements","options","timerId","Date","now","getElementById","tagName","appendChild","settings","list","fontFamily","fontWeight","color","minSize","weightFactor","clearCanvas","backgroundColor","gridSize","drawOutOfBound","shrinkToFit","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","minRotation","maxRotation","rotationSteps","shuffle","rotateRatio","shape","ellipticity","hover","click","factor","pt","theta","thetaPrime","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","getTextFontWeight","maskRectWidth","rotationRange","randomHslColor","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventXvalue","eventX","eventY","height","wordcloudhover","info","item","dimension","wordcloudclick","preventDefault","pointsAtRadius","getPointsAtRadius","radius","points","rx","exceedTime","getTime","fillGridAt","fillRect","putWord","word","weight","attributes","rotateDeg","extraDataArray","itemCopy","splice","getItemExtraData","fontSize","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","translate","rotate","fillStyle","textBaseline","imageData","gy","occupied","gx","bounds","singleGridLoop","gw","gh","fillTextWidth","fillTextHeight","getTextInfo","tryToPutWordAtPoint","gxy","px","py","canFitText","save","restore","span","transformRule","styleRules","position","display","lineHeight","whiteSpace","transform","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","textContent","style","attribute","className","drawText","updateGrid","concat","sendEvent","cancelable","details","event","CustomEvent","detail","dispatchEvent","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","removeEventListener","listener","anotherWordCloudStart","loop","drawn","canceled","toFixed","stop","module","exports","TagCloud","tags","collection","cloudRef","useRef","useEffect","current","renderWordCloud","cloudContainer","replaceChildren","minWeight","tag","maxWeight","generateAdaptiveColor","isDark","matchMedia","matches","location","href","fonts","load","then","mediaQuery","handleThemeChange","_jsx","ref"],"mappings":"kLAAA,UAAQA,EAAGC,IAAEA,GAAQC,KAErBC,EAAe,CAACC,EAAGC,EAAM,EAAGC,EAAO,IACxBN,EAAIC,EAAII,EAAKD,GAAIE,GCD5BC,EAAgBC,IACZA,EAAIC,UAAW,EACfD,EAAIE,WAAaF,EAAIG,MAAM,GAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAChBA,EAAI,IACAJ,EAAII,GAAK,GAAKJ,EAAII,GAAK,OAAKJ,EAAIC,UAAW,GAC/CD,EAAII,GAAKT,EAAMK,EAAII,GAAI,EAAG,MACb,IAANA,IACPJ,EAAII,GAAKT,EAAMK,EAAII,GAAI,EAAG,IAGlC,OAAOJ,GCZLK,EAAc,CAAA,EACpB,IAAK,IAAIC,KAAQ,CACb,UACA,SACA,SACA,WACA,QACA,OACA,SACA,YACA,QAEAD,EAAY,WAAWC,OAAWA,GAAKC,cAE5B,SAAAC,EAAUC,GACrB,OAAOJ,EAAYK,OAAOC,UAAUC,SAASC,KAAKJ,KAAS,QAC/D,CCfA,MAAAK,EAAe,CAACC,EAAMC,EAAW,OAEzBD,EAAKE,QAAU,EAAUC,MAAMP,UAAUR,MAAMU,KAAKE,GAGnC,UAAjBP,EAAKO,EAAK,KAAmBC,EACtBA,EACFG,MAAM,IACNC,OAAQC,QAAqBC,IAAfP,EAAK,GAAGM,IACtBE,IAAKF,GAAMN,EAAK,GAAGM,IAIrBN,EAAK,GAAGZ,MAAM,GCbzBqB,EAAgBT,IACZ,GAAIA,EAAKE,OAAS,EAAG,OAAO,KAC5B,MAAMQ,EAAIV,EAAKE,OAAS,EACxB,MAAqB,UAAjBT,EAAKO,EAAKU,IAAwBV,EAAKU,GAAGlB,cACvC,OCNLmB,GAAEA,EAAElC,IAAEA,MAAKC,GAAQC,KAEnBiC,EAAQC,GAAMlC,KAAKmC,MAAU,IAAJD,GAAW,IACpCE,EAAQF,GAAMlC,KAAKmC,MAAU,IAAJD,GAAW,IAQpCG,EAAa,EAALL,EACRM,EAAUN,EAAK,EACfO,EAAUP,EAAK,IACfQ,EAAU,IAAMR,EAQtB,SAASS,EAASC,GACd,MAAO,IAAIA,EAAIjC,MAAM,EAAG,GAAGkC,aAAcD,EAAIjC,MAAM,GACvD,CCxBA,MAAAmC,EAAe,CACXC,OAAQ,CAAA,EACRC,WAAY,ICChB,MAAMC,EACF,WAAAC,IAAe3B,GACX,MAAM4B,EAAKC,KACX,GACsB,WAAlBpC,EAAKO,EAAK,KACVA,EAAK,GAAG2B,aACR3B,EAAK,GAAG2B,cAAgBE,KAAKF,YAG7B,OAAO3B,EAAK,GAGhB,IAAI8B,EAAOrB,EAAKT,GACZyB,GAAa,EACjB,IAAKK,EAAM,CACPL,GAAa,EAERM,EAAOC,SACRD,EAAON,WAAaM,EAAON,WAAWQ,KAAK,CAACpB,EAAGqB,IAAMA,EAAEC,EAAItB,EAAEsB,GAC7DJ,EAAOC,QAAS,GAIpB,IAAK,IAAII,KAAOL,EAAON,WAEnB,GADAK,EAAOM,EAAIC,QAAQrC,GACf8B,EAAM,KAElB,CACA,IAAIC,EAAOP,OAAOM,GAOd,MAAM,IAAIQ,MAAM,mBAAqBtC,GAPhB,CACrB,MAAMf,EAAM8C,EAAOP,OAAOM,GAAMS,MAC5B,KACAd,EAAazB,EAAOA,EAAKZ,MAAM,GAAG,IAEtCwC,EAAGY,KAAOxD,EAASC,EACvB,CAIuB,IAAnB2C,EAAGY,KAAKtC,QAAc0B,EAAGY,KAAKC,KAAK,EAC3C,CACA,QAAA5C,GACI,MAAsB,YAAlBJ,EAAKoC,KAAKa,KAA2Bb,KAAKa,MACvC,IAAIb,KAAKW,KAAKG,KAAK,OAC9B,EC7CG,MCEDC,EAAS,IAAI5C,IACR,IAAI0B,KAAS1B,GAGxB4C,EAAOC,QDNgB,QEKvB,MAAMC,EAAS,CACXC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,SAAU,UACVC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,KAAM,UACNC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,eAAgB,UAChBC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WChKXC,EAAS,sCACTC,EAAU,sCAEVC,EAAWjK,IACb,GAAIA,EAAIkK,MAAMH,GAAS,CAEA,IAAf/J,EAAIxC,QAA+B,IAAfwC,EAAIxC,SACxBwC,EAAMA,EAAImK,OAAO,IAGF,IAAfnK,EAAIxC,SAEJwC,GADAA,EAAMA,EAAItC,MAAM,KACN,GAAKsC,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAE3D,MAAMoK,EAAIC,SAASrK,EAAK,IAIxB,MAAO,CAHGoK,GAAK,GACJA,GAAK,EAAK,IACP,IAAJA,EACO,EACrB,CAGA,GAAIpK,EAAIkK,MAAMF,GAAU,CACD,IAAfhK,EAAIxC,QAA+B,IAAfwC,EAAIxC,SAExBwC,EAAMA,EAAImK,OAAO,IAGF,IAAfnK,EAAIxC,SAEJwC,GADAA,EAAMA,EAAItC,MAAM,KAER,GACJsC,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,IAEZ,MAAMoK,EAAIC,SAASrK,EAAK,IAKxB,MAAO,CAJIoK,GAAK,GAAM,IACXA,GAAK,GAAM,IACXA,GAAK,EAAK,IACXnO,KAAKmC,OAAY,IAAJgM,GAAY,IAAQ,KAAO,IAEtD,CAMA,MAAM,IAAIxK,MAAM,sBAAsBI,OCnDpC5B,MAAEA,GAAUnC,KAEZqO,EAAU,IAAIhN,KAChB,IAAKiN,EAAGC,EAAGhL,EAAGrB,GAAKd,EAAOC,EAAM,QAC5B8B,EAAOrB,EAAKT,IAAS,YACfO,IAANM,IAAiBA,EAAI,GACZ,SAATiB,IACAA,EAAOjB,EAAI,EAAI,OAAS,OAE5BoM,EAAInM,EAAMmM,GACVC,EAAIpM,EAAMoM,GACVhL,EAAIpB,EAAMoB,GAEV,IAAIiL,EAAM,UADCF,GAAK,GAAOC,GAAK,EAAKhL,GACVrC,SAAS,IAChCsN,EAAMA,EAAIN,OAAOM,EAAIjN,OAAS,GAC9B,IAAIkN,EAAM,IAAMtM,EAAU,IAAJD,GAAShB,SAAS,IAExC,OADAuN,EAAMA,EAAIP,OAAOO,EAAIlN,OAAS,GACtB4B,EAAKtC,eACT,IAAK,OACD,MAAO,IAAI2N,IAAMC,IACrB,IAAK,OACD,MAAO,IAAIA,IAAMD,IACrB,QACI,MAAO,IAAIA,MChBvBzL,EAAM9B,UAAUL,KAAO,WACnB,MAAMmD,EAAMsK,EAAQnL,KAAKW,KAAM,OAC/B,IAAK,IAAI6K,KAAK1N,OAAO2N,KAAKxK,GACtB,GAAIA,EAAOuK,KAAO3K,EAAK,OAAO2K,EAAE7N,cAEpC,OAAOkD,CACX,EAEAnB,EAAMC,OAAO+L,MAAShO,IAElB,GADAA,EAAOA,EAAKC,cACRsD,EAAOvD,GAAO,OAAOoN,EAAQ7J,EAAOvD,IACxC,MAAM,IAAI+C,MAAM,uBAAyB/C,IAG7CgC,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,CAACmL,KAAMC,KACT,IAAKA,EAAKvN,QAAsB,WAAZT,EAAK+N,IAAmB1K,EAAO0K,EAAEhO,eACjD,MAAO,WCvBnBkC,EAAM9B,UAAU8N,MAAQ,SAAU7M,EAAG8M,GAAS,GAC1C,YAAUpN,IAANM,GAA+B,WAAZpB,EAAKoB,GACpB8M,GACA9L,KAAKW,KAAK,GAAK3B,EACRgB,MAEJ,IAAIH,EAAM,CAACG,KAAKW,KAAK,GAAIX,KAAKW,KAAK,GAAIX,KAAKW,KAAK,GAAI3B,GAAI,OAE7DgB,KAAKW,KAAK,EACrB,ECVAd,EAAM9B,UAAUgO,QAAU,WACtB,OAAO/L,KAAKW,KAAKtD,WAAY,CACjC,ECJA,MAAM2O,EAAe,CAEjBC,GAAI,GAGJC,cAAe,MACfC,GAAI,OACJC,GAAI,EACJC,GAAI,QAOJC,GAAI,IAAQ,MACZC,IAAK,EACLC,GAAI,MAAU,GAEdC,YAAa,CAETC,EAAG,OACHC,EAAG,EACHC,EAAG,SAGPC,WAAY,CACRC,IAAK,kBACLC,IAAK,mBACLC,IAAK,kBACLC,IAAK,iBACLC,IAAK,iBACLC,IAAK,mBACLC,IAAK,mBACLC,IAAK,mBACLC,IAAK,mBAGTC,WAAY,CACRT,IAAK,mBACLC,KAAK,kBACLC,IAAK,oBACLC,KAAK,mBACLC,IAAK,mBACLC,KAAK,kBACLC,KAAK,iBACLC,IAAK,oBACLC,IAAK,oBAITE,GAAI,kBACJC,GAAI,YACJC,GAAI,YAEJC,WAAY,CACRb,IAAK,MACLC,KAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,OACLC,KAAK,MACLC,KAAK,MACLC,IAAK,MACLC,IAAK,QAGTM,YAAa,CACTd,IAAK,kBACLC,IAAK,mBACLC,KAAK,oBACLC,KAAK,mBACLC,IAAK,kBACLC,IAAK,mBACLC,IAAK,mBACLC,IAAK,kBACLC,IAAK,oBAOPO,EAAc,IAAIC,IAAI,CAExB,CAAC,IAAK,CAAC,OAAQ,SAEf,CAAC,IAAK,CAAC,OAAQ,SAEf,CAAC,IAAK,CAAC,OAAS,UAEhB,CAAC,MAAO,CAAC,OAAS,SAElB,CAAC,MAAO,CAAC,OAAS,SAElB,CAAC,MAAO,CAAC,OAAS,UAElB,CAAC,IAAK,CAAC,EAAG,EAAG,IAEb,CAAC,KAAM,CAAC,OAAS,SAEjB,CAAC,KAAM,CAAC,OAAS,UAEjB,CAAC,MAAO,CAAC,QAAS,QAClB,CAAC,MAAO,CAAC,OAAS,WAGf,SAASC,EAAiBrQ,GAC7B,MAAMsQ,EAAMH,EAAYI,IAAIC,OAAOxQ,GAAMC,eACzC,IAAKqQ,EACD,MAAM,IAAIvN,MAAM,0BAA4B/C,GAEhDsO,EAAaE,cAAgBxO,EAC7BsO,EAAaG,GAAK6B,EAAI,GACtBhC,EAAaK,GAAK2B,EAAI,EAC1B,CAEO,SAASG,IACZ,OAAOnC,EAAaE,aACxB,CC/GA,MAAMkC,EAAU,IAAIjQ,KAChBA,EAAOD,EAAOC,EAAM,OACpB,MAAOkQ,EAAGrP,EAAGqB,GAAKlC,GACXnB,EAAGsR,EAAGC,GAAKC,EAAQH,EAAGrP,EAAGqB,IACzB+K,EAAGC,EAAGoD,GAAMC,EAAQ1R,EAAGsR,EAAGC,GACjC,MAAO,CAACnD,EAAGC,EAAGoD,EAAItQ,EAAKE,OAAS,EAAIF,EAAK,GAAK,IAG5CqQ,EAAU,CAACH,EAAGrP,EAAGqB,KACnB,MAAMiM,GAAEA,EAAEE,GAAEA,EAAED,IAAEA,EAAGJ,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,GAAOsC,EAE9BC,GAAMP,EAAI,IAAQ,IAClBQ,EAAK,KAAQ7P,EAAI4P,EACjBE,EAAKF,EAAK,KAAQvO,EAElB0O,EAAMF,EAAKA,EAAKA,EAChBG,EAAMF,EAAKA,EAAKA,EAUtB,MAAO,EARIC,EAAMzC,EAAKyC,GAAO,IAAQF,EAAK,IAAQrC,GAInCL,GAHJkC,EAAI9B,EAAMzP,KAAKmS,KAAKZ,EAAI,IAAQ,IAAO,GAAOA,EAAI7B,GAI9CJ,GAHJ4C,EAAM1C,EAAK0C,GAAO,IAAQF,EAAK,IAAQtC,GAInCH,IAKb6C,EAAWC,IAEb,MAAMC,EAAOtS,KAAKsS,KAAKD,GAEvB,QADAA,EAASrS,KAAKuS,IAAIF,KAEH,SACI,MAATA,EACA,MAAQrS,KAAKmS,IAAIE,EAAQ,EAAM,KAAO,MAASC,GAIvDV,EAAU,CAAC1R,EAAGsR,EAAGC,KACnB,MAAMZ,WAAEA,EAAUC,YAAEA,EAAWL,WAAEA,EAAUd,YAAEA,EAAWN,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,GAC9DsC,EAEEnB,EAAKrB,EAAKwB,EAAWb,IAAMV,EAAKuB,EAAWV,IAAMZ,EAAKsB,EAAWP,IACjEK,EAAKtB,EAAKwB,EAAWZ,IAAMX,EAAKuB,EAAWT,IAAMb,EAAKsB,EAAWN,IACjEK,EAAKvB,EAAKwB,EAAWX,IAAMZ,EAAKuB,EAAWR,IAAMd,EAAKsB,EAAWL,IAEjEgC,EACF7C,EAAYC,EAAIiB,EAAWb,IAC3BL,EAAYE,EAAIgB,EAAWV,IAC3BR,EAAYG,EAAIe,EAAWP,IACzBmC,EACF9C,EAAYC,EAAIiB,EAAWZ,IAC3BN,EAAYE,EAAIgB,EAAWT,IAC3BT,EAAYG,EAAIe,EAAWN,IACzBmC,EACF/C,EAAYC,EAAIiB,EAAWX,IAC3BP,EAAYE,EAAIgB,EAAWR,IAC3BV,EAAYG,EAAIe,EAAWL,IAEzBmC,GACDzS,EAAI2Q,EAAWb,IAAMwB,EAAIX,EAAWV,IAAMsB,EAAIZ,EAAWP,MACzDkC,EAAK9B,GACJkC,GACD1S,EAAI2Q,EAAWZ,IAAMuB,EAAIX,EAAWT,IAAMqB,EAAIZ,EAAWN,MACzDkC,EAAK9B,GACJkC,GACD3S,EAAI2Q,EAAWX,IAAMsB,EAAIX,EAAWR,IAAMoB,EAAIZ,EAAWL,MACzDkC,EAAK9B,GAEJkC,EACFH,EAAK7B,EAAYd,IAAM4C,EAAK9B,EAAYX,IAAM0C,EAAK/B,EAAYR,IAC7DyC,EACFJ,EAAK7B,EAAYb,IAAM2C,EAAK9B,EAAYV,IAAMyC,EAAK/B,EAAYP,IAC7DyC,EACFL,EAAK7B,EAAYZ,IAAM0C,EAAK9B,EAAYT,IAAMwC,EAAK/B,EAAYN,IAYnE,MAAO,CAAK,IAVF4B,EACNU,EAAKrC,EAAWT,IAAM+C,EAAKtC,EAAWN,IAAM6C,EAAKvC,EAAWH,KAS3C,IAPX8B,EACNU,EAAKrC,EAAWR,IAAM8C,EAAKtC,EAAWL,IAAM4C,EAAKvC,EAAWF,KAMlC,IAJpB6B,EACNU,EAAKrC,EAAWP,IAAM6C,EAAKtC,EAAWJ,IAAM2C,EAAKvC,EAAWD,OC1F9DyC,EAAU,IAAI5R,KAChB,MAAOiN,EAAGC,EAAGhL,KAAMuL,GAAQ1N,EAAOC,EAAM,QACjCnB,EAAGsR,EAAGC,GAAKyB,EAAQ5E,EAAGC,EAAGhL,IACzBgO,EAAGrP,EAAGyP,GAIjB,SAAiBzR,EAAGsR,EAAGC,GACnB,MAAMpC,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,EAAEE,GAAEA,GAAOmC,EACzBsB,EAAKjT,EAAImP,EACT+D,EAAK5B,EAAIlC,EACT+D,EAAK5B,EAAIlC,EAETwC,EAAKoB,EAAK3D,EAAKxP,KAAKmS,IAAIgB,EAAI,EAAM,IAAQzD,EAAKyD,EAAK,IAAQ,IAC5DrB,EAAKsB,EAAK5D,EAAKxP,KAAKmS,IAAIiB,EAAI,EAAM,IAAQ1D,EAAK0D,EAAK,IAAQ,IAC5DpB,EAAKqB,EAAK7D,EAAKxP,KAAKmS,IAAIkB,EAAI,EAAM,IAAQ3D,EAAK2D,EAAK,IAAQ,IAElE,MAAO,CAAC,IAAQvB,EAAK,GAAM,KAASC,EAAKD,GAAK,KAASA,EAAKE,GAChE,CAfuBsB,CAAQpT,EAAGsR,EAAGC,GACjC,MAAO,CAACF,EAAGrP,EAAGyP,KAAQ7C,EAAKvN,OAAS,GAAKuN,EAAK,GAAK,EAAI,CAACA,EAAK,IAAM,KAgBvE,SAASyE,EAAgBC,GACrB,MAAMlB,EAAOtS,KAAKsS,KAAKkB,GAMvB,QALAA,EAAYxT,KAAKuS,IAAIiB,KAEJ,OACPA,EAAY,MACZxT,KAAKmS,KAAKqB,EAAY,MAAS,MAAO,MAChClB,CACpB,CAEA,MAAMY,EAAU,CAAC5E,EAAGC,EAAGhL,KAEnB+K,EAAIiF,EAAgBjF,EAAI,KACxBC,EAAIgF,EAAgBhF,EAAI,KACxBhL,EAAIgQ,EAAgBhQ,EAAI,KAExB,MAAMwM,WAAEA,EAAUc,WAAEA,EAAUC,YAAEA,EAAWzB,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,EAAEmB,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,GAC7DiB,EAEJ,IAAI3R,EAAIoO,EAAIyB,EAAWC,IAAMzB,EAAIwB,EAAWI,IAAM5M,EAAIwM,EAAWO,IAC7DkB,EAAIlD,EAAIyB,EAAWE,IAAM1B,EAAIwB,EAAWK,IAAM7M,EAAIwM,EAAWQ,IAC7DkB,EAAInD,EAAIyB,EAAWG,IAAM3B,EAAIwB,EAAWM,IAAM9M,EAAIwM,EAAWS,IAEjE,MAAMgC,EAAKnD,EAAKwB,EAAWb,IAAMV,EAAKuB,EAAWV,IAAMZ,EAAKsB,EAAWP,IACjEmC,EAAKpD,EAAKwB,EAAWZ,IAAMX,EAAKuB,EAAWT,IAAMb,EAAKsB,EAAWN,IACjEmC,EAAKrD,EAAKwB,EAAWX,IAAMZ,EAAKuB,EAAWR,IAAMd,EAAKsB,EAAWL,IAEvE,IAAIZ,EAAI1P,EAAI2Q,EAAWb,IAAMwB,EAAIX,EAAWV,IAAMsB,EAAIZ,EAAWP,IAC7DT,EAAI3P,EAAI2Q,EAAWZ,IAAMuB,EAAIX,EAAWT,IAAMqB,EAAIZ,EAAWN,IAC7DT,EAAI5P,EAAI2Q,EAAWX,IAAMsB,EAAIX,EAAWR,IAAMoB,EAAIZ,EAAWL,IAUjE,OARAZ,GAAK4C,EAAK9B,EACVb,GAAK4C,EAAK9B,EACVb,GAAK4C,EAAK9B,EAEV1Q,EAAI0P,EAAIkB,EAAYd,IAAMH,EAAIiB,EAAYX,IAAML,EAAIgB,EAAYR,IAChEkB,EAAI5B,EAAIkB,EAAYb,IAAMJ,EAAIiB,EAAYV,IAAMN,EAAIgB,EAAYP,IAChEkB,EAAI7B,EAAIkB,EAAYZ,IAAML,EAAIiB,EAAYT,IAAMP,EAAIgB,EAAYN,IAEzD,CAACtQ,EAAGsR,EAAGC,ICtDlB1O,EAAM9B,UAAUwS,IAAM,WAClB,OAAOR,EAAQ/P,KAAKW,KACxB,EAGA7C,OAAO0S,OAAOzP,EAAQ,CAAAwP,IADV,IAAIpS,IAAS,IAAI0B,KAAS1B,EAAM,OACfgQ,mBAAkBJ,qBAE/CrO,EAAMC,OAAO4Q,IAAMnC,EAEnB1O,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,SAC0B,IAAhBA,EAAKE,OAC/B,MAAO,SClBnBwB,EAAM9B,UAAU0S,OAAS,SAAUC,EAAS,GACxC,MACMH,EADKvQ,KACIuQ,MAEf,OADAA,EAAI,IAAM5B,EAAc1C,GAAKyE,EACtB,IAAI7Q,EAAM0Q,EAAK,OAAO1E,MAHlB7L,KAG2B6L,SAAS,EACnD,EAEAhM,EAAM9B,UAAU4S,SAAW,SAAUD,EAAS,GAC1C,OAAO1Q,KAAKyQ,QAAQC,EACxB,EAEA7Q,EAAM9B,UAAU6S,OAAS/Q,EAAM9B,UAAU0S,OACzC5Q,EAAM9B,UAAU8S,SAAWhR,EAAM9B,UAAU4S,SCd3C9Q,EAAM9B,UAAUkQ,IAAM,SAAU6C,GAC5B,MAAO7Q,EAAM8Q,GAAWD,EAAGvS,MAAM,KAC3ByS,EAAMhR,KAAKC,KACjB,GAAI8Q,EAAS,CACT,MAAMvT,EAAIyC,EAAKgR,QAAQF,IAAkC,OAAtB9Q,EAAK+K,OAAO,EAAG,GAAc,EAAI,GACpE,GAAIxN,GAAI,EAAI,OAAOwT,EAAIxT,GACvB,MAAM,IAAIiD,MAAM,mBAAmBsQ,aAAmB9Q,IAC1D,CACI,OAAO+Q,CAEf,ECVA,MAAM/B,IAAEA,GAAQnS,KAKhB+C,EAAM9B,UAAUmT,UAAY,SAAUC,EAAKlR,EAAO,OAC9C,QAAYvB,IAARyS,GAAmC,WAAdvT,EAAKuT,GAAmB,CAC7C,GAAY,IAARA,EAEA,OAAO,IAAItR,EAAM,CAAC,EAAG,EAAG,EAAGG,KAAKW,KAAK,IAAK,OAE9C,GAAY,IAARwQ,EAEA,OAAO,IAAItR,EAAM,CAAC,IAAK,IAAK,IAAKG,KAAKW,KAAK,IAAK,OAGpD,IAAIyQ,EAAUpR,KAAKkR,YACfG,EAdK,GAgBT,MAAM7Q,EAAO,CAACvD,EAAKC,KACf,MAAMoU,EAAMrU,EAAIsU,YAAYrU,EAAM,GAAK+C,GACjCuR,EAAKF,EAAIJ,YACf,OAAIpU,KAAKuS,IAAI8B,EAAMK,GApBnB,OAoBiCH,IAEtBC,EAEJE,EAAKL,EAAM3Q,EAAKvD,EAAKqU,GAAO9Q,EAAK8Q,EAAKpU,IAG3CE,GACFgU,EAAUD,EACJ3Q,EAAK,IAAIX,EAAM,CAAC,EAAG,EAAG,IAAKG,MAC3BQ,EAAKR,KAAM,IAAIH,EAAM,CAAC,IAAK,IAAK,QACxCzC,MACF,OAAO,IAAIyC,EAAM,IAAIzC,EAAK4C,KAAKW,KAAK,IACxC,CACA,OAAO8Q,KAAiBzR,KAAKW,KAAKpD,MAAM,EAAG,GAC/C,EAEA,MAAMkU,EAAgB,CAACrG,EAAGC,EAAGhL,IAMlB,OAHP+K,EAAIsG,EAAYtG,IAGI,OAFpBC,EAAIqG,EAAYrG,IAEiB,OADjChL,EAAIqR,EAAYrR,IAIdqR,EAAe1U,IACjBA,GAAK,MACO,OAAUA,EAAI,MAAQiS,GAAKjS,EAAI,MAAS,MAAO,KCpD/D2U,EAAe,CAAA,ECIfC,EAAe,CAACC,EAAMC,EAAMC,EAAI,MAAQnG,KACpC,IAAI3L,EAAO2L,EAAK,IAAM,OAKtB,GAJKoG,EAAa/R,IAAU2L,EAAKvN,SAE7B4B,EAAOnC,OAAO2N,KAAKuG,GAAc,KAEhCA,EAAa/R,GACd,MAAM,IAAIQ,MAAM,sBAAsBR,oBAI1C,MAFmB,WAAfrC,EAAKiU,KAAoBA,EAAO,IAAIhS,EAAMgS,IAC3B,WAAfjU,EAAKkU,KAAoBA,EAAO,IAAIjS,EAAMiS,IACvCE,EAAa/R,GAAM4R,EAAMC,EAAMC,GAAGlG,MACrCgG,EAAKhG,QAAUkG,GAAKD,EAAKjG,QAAUgG,EAAKhG,WCbhDhM,EAAM9B,UAAU6T,IAAM/R,EAAM9B,UAAUwT,YAAc,SAChDO,EACAC,EAAI,MACDnG,GAEH,OAAOgG,EAAI5R,KAAM8R,EAAMC,KAAMnG,EACjC,ECPA/L,EAAM9B,UAAUkU,YAAc,SAAUnG,GAAS,GAC7C,MAAM1O,EAAM4C,KAAKW,KACX3B,EAAI5B,EAAI,GACd,OAAI0O,GACA9L,KAAKW,KAAO,CAACvD,EAAI,GAAK4B,EAAG5B,EAAI,GAAK4B,EAAG5B,EAAI,GAAK4B,EAAGA,GAC1CgB,MAEA,IAAIH,EAAM,CAACzC,EAAI,GAAK4B,EAAG5B,EAAI,GAAK4B,EAAG5B,EAAI,GAAK4B,EAAGA,GAAI,MAElE,ECVA,UAAQkT,EAAGC,IAAEA,GAAQrV,KAEfsV,EAAU,IAAIjU,KAQhB,IAAKU,EAAGwT,EAAG1G,GAAKzN,EAAOC,EAAM,OAG7B,OAFImU,MAAM3G,KAAIA,EAAI,GAClBA,GAAQtM,EACD,CAACR,EAAGsT,EAAIxG,GAAK0G,EAAGH,EAAIvG,GAAK0G,ICV9BE,EAAU,IAAIpU,KAChBA,EAAOD,EAAOC,EAAM,OACpB,MAAOU,EAAGwT,EAAG1G,GAAKxN,GACXkQ,EAAGrP,EAAGyP,GAAM2D,EAAQvT,EAAGwT,EAAG1G,IAC1BP,EAAGC,EAAGhL,GAAK+N,EAAQC,EAAGrP,EAAGyP,GAChC,MAAO,CAACrD,EAAGC,EAAGhL,EAAGlC,EAAKE,OAAS,EAAIF,EAAK,GAAK,KCR3CqU,KAAEA,EAAIC,MAAEA,QAAOxT,GAAUnC,KAEzB4V,EAAU,IAAIvU,KAChB,MAAOU,EAAGG,EAAGqB,GAAKnC,EAAOC,EAAM,OACzBkU,EAAIG,EAAKxT,EAAIA,EAAIqB,EAAIA,GAC3B,IAAIsL,GAAK8G,EAAMpS,EAAGrB,GAAKM,EAAU,KAAO,IAExC,OADyB,IAArBL,EAAU,IAAJoT,KAAkB1G,EAAIgH,OAAOC,KAChC,CAAC/T,EAAGwT,EAAG1G,ICJZkH,GAAU,IAAI1U,KAChB,MAAOiN,EAAGC,EAAGhL,KAAMuL,GAAQ1N,EAAOC,EAAM,QACjCU,EAAGG,EAAGyP,GAAMsB,EAAQ3E,EAAGC,EAAGhL,IAC1BgO,EAAGgE,EAAG1G,GAAK+G,EAAQ7T,EAAGG,EAAGyP,GAChC,MAAO,CAACJ,EAAGgE,EAAG1G,KAAOC,EAAKvN,OAAS,GAAKuN,EAAK,GAAK,EAAI,CAACA,EAAK,IAAM,KCAtE/L,EAAM9B,UAAU+U,IAAM,WAClB,OAAOD,GAAQ7S,KAAKW,KACxB,EACAd,EAAM9B,UAAUgV,IAAM,WAClB,OAAOxT,EAASsT,GAAQ7S,KAAKW,MACjC,EAKA7C,OAAO0S,OAAOzP,EAAQ,KAHV,IAAI5C,IAAS,IAAI0B,KAAS1B,EAAM,OAGf4U,IAFjB,IAAI5U,IAAS,IAAI0B,KAAS1B,EAAM,SAI5CuB,EAAMC,OAAOmT,IAAMP,EACnB7S,EAAMC,OAAOoT,IClBG,IAAI5U,KAChB,MAAM4U,EAAMxT,EAASrB,EAAOC,EAAM,QAClC,OAAOoU,KAAWQ,IDiBtB,CAAC,MAAO,OAAOC,QAASC,GACpBvT,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM8U,KAC0B,IAAhB9U,EAAKE,OAC/B,OAAO4U,MExBvBpT,EAAM9B,UAAUmV,SAAW,SAAUxC,EAAS,GAC1C,MACMoC,EADK9S,KACI8S,MAGf,OAFAA,EAAI,IAAMnE,EAAc1C,GAAKyE,EACzBoC,EAAI,GAAK,IAAGA,EAAI,GAAK,GAClB,IAAIjT,EAAMiT,EAAK,OAAOjH,MAJlB7L,KAI2B6L,SAAS,EACnD,EAEAhM,EAAM9B,UAAUoV,WAAa,SAAUzC,EAAS,GAC5C,OAAO1Q,KAAKkT,UAAUxC,EAC1B,ECXA7Q,EAAM9B,UAAUqV,IAAM,SAAUtC,EAAIuC,EAAOvH,GAAS,GAChD,MAAO7L,EAAM8Q,GAAWD,EAAGvS,MAAM,KAC3ByS,EAAMhR,KAAKC,KACjB,GAAI8Q,EAAS,CACT,MAAMvT,EAAIyC,EAAKgR,QAAQF,IAAkC,OAAtB9Q,EAAK+K,OAAO,EAAG,GAAc,EAAI,GACpE,GAAIxN,GAAI,EAAI,CACR,GAAmB,UAAfI,EAAKyV,GACL,OAAQA,EAAMC,OAAO,IACjB,IAAK,IAGL,IAAK,IACDtC,EAAIxT,KAAO6V,EACX,MACJ,IAAK,IACDrC,EAAIxT,KAAO6V,EAAMrI,OAAO,GACxB,MACJ,IAAK,IACDgG,EAAIxT,KAAO6V,EAAMrI,OAAO,GACxB,MACJ,QACIgG,EAAIxT,IAAM6V,MAEf,IAAoB,WAAhBzV,EAAKyV,GAGZ,MAAM,IAAI5S,MAAM,mCAFhBuQ,EAAIxT,GAAK6V,CAGb,CACA,MAAME,EAAM,IAAI1T,EAAMmR,EAAK/Q,GAC3B,OAAI6L,GACA9L,KAAKW,KAAO4S,EAAI5S,KACTX,MAEJuT,CACX,CACA,MAAM,IAAI9S,MAAM,mBAAmBsQ,aAAmB9Q,IAC1D,CACI,OAAO+Q,CAEf,ECtCAnR,EAAM9B,UAAUyV,KAAO,SAAUzB,EAAI,MAAQnG,GACzC,OAAOgG,EAAI5R,KAAM,QAAS+R,KAAMnG,EACpC,EAEA/L,EAAM9B,UAAU0V,MAAQ,SAAU1B,EAAI,MAAQnG,GAC1C,OAAOgG,EAAI5R,KAAM,QAAS+R,KAAMnG,EACpC,ECKA+F,EAAMvU,IAZM,CAACyU,EAAMC,EAAMC,KACrB,MAAM2B,EAAO7B,EAAKlR,KACZgT,EAAO7B,EAAKnR,KAClB,OAAO,IAAId,EACP6T,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9B,QCTR,WAAQlB,GAAIvD,IAAEA,IAAQnS,KAetB6U,EAAMiC,KAZO,CAAC/B,EAAMC,EAAMC,KACtB,MAAO8B,EAAIC,EAAIC,GAAMlC,EAAKlR,MACnBqT,EAAIC,EAAIC,GAAMpC,EAAKnR,KAC1B,OAAO,IAAId,EACP2S,GAAKvD,GAAI4E,EAAI,IAAM,EAAI9B,GAAK9C,GAAI+E,EAAI,GAAKjC,GACzCS,GAAKvD,GAAI6E,EAAI,IAAM,EAAI/B,GAAK9C,GAAIgF,EAAI,GAAKlC,GACzCS,GAAKvD,GAAI8E,EAAI,IAAM,EAAIhC,GAAK9C,GAAIiF,EAAI,GAAKnC,GACzC,QCKRJ,EAAMpB,IAZM,CAACsB,EAAMC,EAAMC,KACrB,MAAM2B,EAAO7B,EAAKtB,MACZoD,EAAO7B,EAAKvB,MAClB,OAAO,IAAI1Q,EACP6T,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9B,QCTR,MAAAS,GAAe,CAACtC,EAAMC,EAAMC,EAAGkB,KAC3B,IAAIS,EAAMC,EAsBNS,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAM9BC,EAAKC,EAAKC,EAAKC,EAwBnB,MAnDU,QAAN5B,GACAS,EAAO7B,EAAKiD,MACZnB,EAAO7B,EAAKgD,OACC,QAAN7B,GACPS,EAAO7B,EAAKkD,MACZpB,EAAO7B,EAAKiD,OACC,QAAN9B,GACPS,EAAO7B,EAAKmD,MACZrB,EAAO7B,EAAKkD,OACC,QAAN/B,GACPS,EAAO7B,EAAKoD,MACZtB,EAAO7B,EAAKmD,OACC,QAANhC,GAAqB,QAANA,GACtBA,EAAI,MACJS,EAAO7B,EAAKkB,MACZY,EAAO7B,EAAKiB,OACC,UAANE,IACPS,EAAO7B,EAAKqD,QAAQzV,UACpBkU,EAAO7B,EAAKoD,QAAQzV,WAID,MAAnBwT,EAAEjI,OAAO,EAAG,IAAoB,UAANiI,KACzBmB,EAAME,EAAME,GAAQd,GACpBW,EAAME,EAAME,GAAQd,GAKpBrB,MAAM8B,IAAU9B,MAAM+B,GAUf/B,MAAM8B,GAGN9B,MAAM+B,GAIdM,EAAMhC,OAAOC,KAHb+B,EAAMN,EACO,GAARG,GAAqB,GAARA,GAAmB,OAALvB,IAAYyB,EAAMH,KAJlDI,EAAMP,EACO,GAARK,GAAqB,GAARA,GAAmB,OAALxB,IAAYyB,EAAMJ,KAT9CO,EADAR,EAAOD,GAAQC,EAAOD,EAAO,IACxBC,GAAQD,EAAO,KACbC,EAAOD,GAAQA,EAAOC,EAAO,IAC/BA,EAAO,IAAMD,EAEbC,EAAOD,EAEhBO,EAAMP,EAAOrC,EAAI8C,QAWTnW,IAARgW,IAAmBA,EAAMJ,EAAOvC,GAAKwC,EAAOD,IAChDM,EAAMJ,EAAOzC,GAAK0C,EAAOD,GAEnB,IAAI3U,EADG,UAANoT,EACS,CAAC2B,EAAKF,EAAKC,GACX,CAACA,EAAKD,EAAKE,GADM3B,ICpD/BH,GAAM,CAACjB,EAAMC,EAAMC,IACdoC,GAAgBtC,EAAMC,EAAMC,EAAG,OAI1CJ,EAAMmB,IAAMA,GACZnB,EAAMoB,IAAMD,GCHZjT,EAAM9B,UAAUoX,IAAM,WAClB,MCNY,KAAIhX,KAChB,MAAOiN,EAAGC,EAAGhL,GAAKnC,EAAOC,EAAM,OAC/B,OAAQiN,GAAK,KAAOC,GAAK,GAAKhL,GDIvB+U,CAAQpV,KAAKW,KACxB,EAIA7C,OAAO0S,OAAOzP,EAAQ,CAAAoU,IAFV,IAAIhX,IAAS,IAAI0B,KAAS1B,EAAM,SAI5CuB,EAAMC,OAAOwV,IEbIA,IACb,GAAiB,UAAbvX,EAAKuX,IAAoBA,GAAO,GAAKA,GAAO,SAAU,CAItD,MAAO,CAHGA,GAAO,GACNA,GAAO,EAAK,IACP,IAANA,EACO,EACrB,CACA,MAAM,IAAI1U,MAAM,sBAAwB0U,IFQ5CzV,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KACN,GACoB,IAAhBA,EAAKE,QACa,WAAlBT,EAAKO,EAAK,KACVA,EAAK,IAAM,GACXA,EAAK,IAAM,SAEX,MAAO,SGdnBwT,EAAMwD,IAPM,CAACtD,EAAMC,EAAMC,KACrB,MAAMsD,EAAKxD,EAAKsD,MACVG,EAAKxD,EAAKqD,MAChB,OAAO,IAAItV,EAAMwV,EAAKtD,GAAKuD,EAAKD,GAAK,QCPzC,MAAME,MAAEA,IAAUzY,KCMlB+C,EAAM9B,UAAUiX,IAAM,WAClB,MCNY,KAAI7W,KAChB,MAAOiN,EAAGC,EAAGhL,GAAKnC,EAAOC,EAAM,OACzBqX,EAAS5Y,EAAIwO,EAAGC,EAAGhL,GACnBoV,EAAS5Y,EAAIuO,EAAGC,EAAGhL,GACnBqV,EAAQD,EAASD,EACjBnD,EAAa,IAARqD,EAAe,IACpBC,EAAMH,GAAU,IAAME,GAAU,IACtC,IAAI/J,EAUJ,OATc,IAAV+J,EACA/J,EAAIgH,OAAOC,KAEPxH,IAAMqK,IAAQ9J,GAAKN,EAAIhL,GAAKqV,GAC5BrK,IAAMoK,IAAQ9J,EAAI,GAAKtL,EAAI+K,GAAKsK,GAChCrV,IAAMoV,IAAQ9J,EAAI,GAAKP,EAAIC,GAAKqK,GACpC/J,GAAK,GACDA,EAAI,IAAGA,GAAK,MAEb,CAACA,EAAG0G,EAAGsD,IDXPC,CAAQ5V,KAAKW,KACxB,EAGAI,EAAOiU,IADK,IAAI7W,IAAS,IAAI0B,KAAS1B,EAAM,OAG5CuB,EAAMC,OAAOqV,IDHG,IAAI7W,KAChBA,EAAOD,EAAOC,EAAM,OACpB,IACIiN,EAAGC,EAAGhL,GADLsL,EAAG0G,EAAGsD,GAAMxX,EAEjBwX,GAAU,IACV,MAAME,EAAS,IAAJxD,EACX,GAAU,IAANA,EACAjH,EAAIC,EAAIhL,EAAIsV,MACT,CACO,MAANhK,IAAWA,EAAI,GACfA,EAAI,MAAKA,GAAK,KACdA,EAAI,IAAGA,GAAK,KAChBA,GAAK,GACL,MAAMnO,EAAI+X,GAAM5J,GACVoG,EAAIpG,EAAInO,EACR8C,EAAIqV,GAAM,EAAItD,GACdyD,EAAIxV,EAAIuV,GAAM,EAAI9D,GAClBgE,EAAIzV,EAAIuV,EAAK9D,EACbiE,EAAI1V,EAAIuV,EACd,OAAQrY,GACJ,KAAK,GACA4N,EAAGC,EAAGhL,GAAK,CAAC2V,EAAGD,EAAGzV,GACnB,MACJ,KAAK,GACA8K,EAAGC,EAAGhL,GAAK,CAACyV,EAAGE,EAAG1V,GACnB,MACJ,KAAK,GACA8K,EAAGC,EAAGhL,GAAK,CAACC,EAAG0V,EAAGD,GACnB,MACJ,KAAK,GACA3K,EAAGC,EAAGhL,GAAK,CAACC,EAAGwV,EAAGE,GACnB,MACJ,KAAK,GACA5K,EAAGC,EAAGhL,GAAK,CAAC0V,EAAGzV,EAAG0V,GACnB,MACJ,KAAK,GACA5K,EAAGC,EAAGhL,GAAK,CAAC2V,EAAG1V,EAAGwV,GAG/B,CACA,MAAO,CAAC1K,EAAGC,EAAGhL,EAAGlC,EAAKE,OAAS,EAAIF,EAAK,GAAK,ICnCjDuB,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,SAC0B,IAAhBA,EAAKE,OAC/B,MAAO,SEZnBsT,EAAMqD,IALM,CAACnD,EAAMC,EAAMC,IACdoC,GAAgBtC,EAAMC,EAAMC,EAAG,OCJ1C,MAAMI,IAAEA,IAAQrV,MCAVF,IAAEA,GAAG4V,KAAEA,GAAIyD,KAAEA,IAASnZ,KCM5B+C,EAAM9B,UAAUkX,IAAM,WAClB,MDLY,KAAI9W,KAKhB,IAIIwN,GAJCP,EAAGC,EAAGhL,GAAKnC,EAAOC,EAAM,OAC7BiN,GAAK,IACLC,GAAK,IACLhL,GAAK,IAEL,MAAM6V,EAAOtZ,GAAIwO,EAAGC,EAAGhL,GACjB7C,GAAK4N,EAAIC,EAAIhL,GAAK,EAClB8V,EAAI3Y,EAAI,EAAI,EAAI0Y,EAAO1Y,EAAI,EAYjC,OAXU,IAAN2Y,EACAxK,EAAIiH,KAEJjH,GAAKP,EAAIC,GAAKD,EAAI/K,IAAM,EACxBsL,GAAK6G,IAAMpH,EAAIC,IAAMD,EAAIC,IAAMD,EAAI/K,IAAMgL,EAAIhL,IAC7CsL,EAAIsK,GAAKtK,GACLtL,EAAIgL,IACJM,EAAIxM,EAAQwM,GAEhBA,GAAKxM,GAEF,CAAK,IAAJwM,EAASwK,EAAG3Y,ICnBb4Y,CAAQpW,KAAKW,KACxB,EAGAI,EAAOkU,IADK,IAAI9W,IAAS,IAAI0B,KAAS1B,EAAM,OAG5CuB,EAAMC,OAAOsV,IFNG,IAAI9W,KAKhBA,EAAOD,EAAOC,EAAM,OACpB,IACIiN,EAAGC,EAAGhL,GADLsL,EAAGwK,EAAG3Y,GAAKW,EA2BhB,OAxBImU,MAAM3G,KAAIA,EAAI,GACd2G,MAAM6D,KAAIA,EAAI,GAEdxK,EAAI,MAAKA,GAAK,KACdA,EAAI,IAAGA,GAAK,KAChBA,GAAK,IACDA,EAAI,EAAI,GACRtL,GAAK,EAAI8V,GAAK,EACd/K,GAAK,EAAK+K,EAAIhE,GAAIhT,EAAQwM,GAAMwG,GAAI/S,EAAUD,EAAQwM,IAAM,EAC5DN,EAAI,GAAKhL,EAAI+K,IACNO,EAAI,EAAI,GACfA,GAAK,EAAI,EACTP,GAAK,EAAI+K,GAAK,EACd9K,GAAK,EAAK8K,EAAIhE,GAAIhT,EAAQwM,GAAMwG,GAAI/S,EAAUD,EAAQwM,IAAM,EAC5DtL,EAAI,GAAK+K,EAAIC,KAEbM,GAAK,EAAI,EACTN,GAAK,EAAI8K,GAAK,EACd9V,GAAK,EAAK8V,EAAIhE,GAAIhT,EAAQwM,GAAMwG,GAAI/S,EAAUD,EAAQwM,IAAM,EAC5DP,EAAI,GAAKC,EAAIhL,IAEjB+K,EAAIrO,EAAMS,EAAI4N,EAAI,GAClBC,EAAItO,EAAMS,EAAI6N,EAAI,GAClBhL,EAAItD,EAAMS,EAAI6C,EAAI,GACX,CAAK,IAAJ+K,EAAa,IAAJC,EAAa,IAAJhL,EAASlC,EAAKE,OAAS,EAAIF,EAAK,GAAK,IEzBnEuB,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,SAC0B,IAAhBA,EAAKE,OAC/B,MAAO,SCZnBsT,EAAMsD,IALM,CAACpD,EAAMC,EAAMC,IACdoC,GAAgBtC,EAAMC,EAAMC,EAAG,OCH1C,MAAMsE,GAAU,IAAIlY,KAChBA,EAAOD,EAAOC,EAAM,OACpB,MAAOwN,EAAGwK,EAAGtX,GAAKV,EAClB,IAAIiN,EAAGC,EAAGhL,EACV,GAAU,IAAN8V,EACA/K,EAAIC,EAAIhL,EAAQ,IAAJxB,MACT,CACH,MAAMyX,EAAK,CAAC,EAAG,EAAG,GACZjE,EAAI,CAAC,EAAG,EAAG,GACXkE,EAAK1X,EAAI,GAAMA,GAAK,EAAIsX,GAAKtX,EAAIsX,EAAItX,EAAIsX,EACzCK,EAAK,EAAI3X,EAAI0X,EACbE,EAAK9K,EAAI,IACf2K,EAAG,GAAKG,EAAK,EAAI,EACjBH,EAAG,GAAKG,EACRH,EAAG,GAAKG,EAAK,EAAI,EACjB,IAAK,IAAIjZ,EAAI,EAAGA,EAAI,EAAGA,IACf8Y,EAAG9Y,GAAK,IAAG8Y,EAAG9Y,IAAM,GACpB8Y,EAAG9Y,GAAK,IAAG8Y,EAAG9Y,IAAM,GACpB,EAAI8Y,EAAG9Y,GAAK,EAAG6U,EAAE7U,GAAKgZ,EAAiB,GAAXD,EAAKC,GAAUF,EAAG9Y,GACzC,EAAI8Y,EAAG9Y,GAAK,EAAG6U,EAAE7U,GAAK+Y,EACtB,EAAID,EAAG9Y,GAAK,EAAG6U,EAAE7U,GAAKgZ,GAAMD,EAAKC,IAAO,EAAI,EAAIF,EAAG9Y,IAAM,EAC7D6U,EAAE7U,GAAKgZ,GAEfpL,EAAGC,EAAGhL,GAAK,CAAQ,IAAPgS,EAAE,GAAiB,IAAPA,EAAE,GAAiB,IAAPA,EAAE,GAC3C,CACA,OAAIlU,EAAKE,OAAS,EAEP,CAAC+M,EAAGC,EAAGhL,EAAGlC,EAAK,IAEnB,CAACiN,EAAGC,EAAGhL,EAAG,ICrBfqW,GAAU,IAAIvY,KAChBA,EAAOD,EAAOC,EAAM,QACpB,IAAKiN,EAAGC,EAAGhL,GAAKlC,EAEhBiN,GAAK,IACLC,GAAK,IACLhL,GAAK,IAEL,MAAMmV,EAAS5Y,EAAIwO,EAAGC,EAAGhL,GACnBoV,EAAS5Y,EAAIuO,EAAGC,EAAGhL,GAEnBxB,GAAK4W,EAASD,GAAU,EAC9B,IAAIW,EAAGxK,EAkBP,OAhBI8J,IAAWD,GACXW,EAAI,EACJxK,EAAIgH,OAAOC,KAEXuD,EACItX,EAAI,IACG4W,EAASD,IAAWC,EAASD,IAC7BC,EAASD,IAAW,EAAIC,EAASD,GAG5CpK,GAAKqK,EAAQ9J,GAAKN,EAAIhL,IAAMoV,EAASD,GAChCnK,GAAKoK,EAAQ9J,EAAI,GAAKtL,EAAI+K,IAAMqK,EAASD,GACzCnV,GAAKoV,IAAQ9J,EAAI,GAAKP,EAAIC,IAAMoK,EAASD,IAElD7J,GAAK,GACDA,EAAI,IAAGA,GAAK,KACZxN,EAAKE,OAAS,QAAiBK,IAAZP,EAAK,GAAyB,CAACwN,EAAGwK,EAAGtX,EAAGV,EAAK,IAC7D,CAACwN,EAAGwK,EAAGtX,IClClBgB,EAAM9B,UAAU+W,IAAM,WAClB,OAAO4B,GAAQ1W,KAAKW,KACxB,EAGAI,EAAO+T,IADK,IAAI3W,IAAS,IAAI0B,KAAS1B,EAAM,OAG5CuB,EAAMC,OAAOmV,IAAMuB,GAEnB3W,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,SAC0B,IAAhBA,EAAKE,OAC/B,MAAO,SCZnBsT,EAAMmD,IALM,CAACjD,EAAMC,EAAMC,IACdoC,GAAgBtC,EAAMC,EAAMC,EAAG,OCJ1C,MAAMwD,MAAEA,IAAUzY,UCAVF,GAAGC,IAAEA,IAAQC,KCMrB+C,EAAM9B,UAAUgX,IAAM,WAClB,MDCY,KAAI5W,KAChBA,EAAOD,EAAOC,EAAM,OACpB,IAAKiN,EAAGC,EAAGhL,GAAKlC,EAChB,MAAM+X,EAAOtZ,GAAIwO,EAAGC,EAAGhL,GACjBsW,EAAO9Z,GAAIuO,EAAGC,EAAGhL,GACjBqV,EAAQiB,EAAOT,EACrB,IAAIvK,EAAGwK,EAAGH,EAaV,OAZAA,EAAIW,EAAO,IACE,IAATA,GACAhL,EAAIgH,OAAOC,IACXuD,EAAI,IAEJA,EAAIT,EAAQiB,EACRvL,IAAMuL,IAAMhL,GAAKN,EAAIhL,GAAKqV,GAC1BrK,IAAMsL,IAAMhL,EAAI,GAAKtL,EAAI+K,GAAKsK,GAC9BrV,IAAMsW,IAAMhL,EAAI,GAAKP,EAAIC,GAAKqK,GAClC/J,GAAK,GACDA,EAAI,IAAGA,GAAK,MAEb,CAACA,EAAGwK,EAAGH,ICpBPY,CAAQ5W,KAAKW,KACxB,EAGAI,EAAOgU,IADK,IAAI5W,IAAS,IAAI0B,KAAS1B,EAAM,OAG5CuB,EAAMC,OAAOoV,IFXG,IAAI5W,KAChBA,EAAOD,EAAOC,EAAM,OACpB,IACIiN,EAAGC,EAAGhL,GADLsL,EAAGwK,EAAGH,GAAK7X,EAGhB,GADA6X,GAAK,IACK,IAANG,EACA/K,EAAIC,EAAIhL,EAAI2V,MACT,CACO,MAANrK,IAAWA,EAAI,GACfA,EAAI,MAAKA,GAAK,KACdA,EAAI,IAAGA,GAAK,KAChBA,GAAK,GAEL,MAAMnO,EAAI+X,GAAM5J,GACVoG,EAAIpG,EAAInO,EACR8C,EAAI0V,GAAK,EAAIG,GACbL,EAAIE,GAAK,EAAIG,EAAIpE,GACjBgE,EAAIC,GAAK,EAAIG,GAAK,EAAIpE,IAE5B,OAAQvU,GACJ,KAAK,GACA4N,EAAGC,EAAGhL,GAAK,CAAC2V,EAAGD,EAAGzV,GACnB,MACJ,KAAK,GACA8K,EAAGC,EAAGhL,GAAK,CAACyV,EAAGE,EAAG1V,GACnB,MACJ,KAAK,GACA8K,EAAGC,EAAGhL,GAAK,CAACC,EAAG0V,EAAGD,GACnB,MACJ,KAAK,GACA3K,EAAGC,EAAGhL,GAAK,CAACC,EAAGwV,EAAGE,GACnB,MACJ,KAAK,GACA5K,EAAGC,EAAGhL,GAAK,CAAC0V,EAAGzV,EAAG0V,GACnB,MACJ,KAAK,GACA5K,EAAGC,EAAGhL,GAAK,CAAC2V,EAAG1V,EAAGwV,GAG/B,CACA,MAAO,CAAC1K,EAAGC,EAAGhL,EAAGlC,EAAKE,OAAS,EAAIF,EAAK,GAAK,IE3BjDuB,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,SAC0B,IAAhBA,EAAKE,OAC/B,MAAO,SCpBJ,SAASwY,GAAiBC,EAAGC,GACxC,IAAI9D,EAAI6D,EAAEzY,OAELC,MAAM0Y,QAAQF,EAAE,MAEjBA,EAAI,CAACA,IAGJxY,MAAM0Y,QAAQD,EAAE,MAEjBA,EAAIA,EAAEpY,IAAK3B,GAAM,CAACA,KAGtB,IAAIsD,EAAIyW,EAAE,GAAG1Y,OACT4Y,EAASF,EAAE,GAAGpY,IAAI,CAACuY,EAAG1Z,IAAMuZ,EAAEpY,IAAK3B,GAAMA,EAAEQ,KAC3C2Z,EAAUL,EAAEnY,IAAKyY,GACjBH,EAAOtY,IAAK0Y,GACH/Y,MAAM0Y,QAAQI,GAIZA,EAAIE,OAAO,CAACtY,EAAGqT,EAAG7U,IAAMwB,EAAIqT,GAAKgF,EAAI7Z,IAAM,GAAI,GAH3C6Z,EAAIC,OAAO,CAACtY,EAAGqT,IAAMrT,EAAIqT,EAAI+E,EAAK,KAWrD,OAJU,IAANnE,IACAkE,EAAUA,EAAQ,IAGZ,IAAN7W,EACO6W,EAAQxY,IAAK3B,GAAMA,EAAE,IAGzBma,CACX,CC1BAxF,EAAMoD,IALM,CAAClD,EAAMC,EAAMC,IACdoC,GAAgBtC,EAAMC,EAAMC,EAAG,OCD1C,MAAMwF,GAAY,IAAIpZ,KAClBA,EAAOD,EAAOC,EAAM,OACpB,MAAOkQ,EAAGrP,EAAGqB,KAAMuL,GAAQzN,GACpBuO,EAAGC,EAAGC,IAQT4K,EAAW,CACX,CAAC,oBAAoB,kBAAqB,mBAC1C,EAAC,kBAAqB,sCACtB,EAAC,mBAAqB,kBAAqB,qBAQ3CC,EAAQZ,GANK,CACb,CAAC,EAAK,kBAAoB,mBAC1B,CAAC,GAAK,sCACN,CAAC,GAAK,mBAAqB,qBAhBA,CAACxI,EAAGrP,EAAGqB,IAoB/BwW,GACHW,EACAC,EAAM9Y,IAAK0T,GAAMA,GAAK,KAhB9B,IAEQmF,EAWAC,EAlBJ,MAAOrM,EAAGC,EAAGoD,GAAMC,EAAQhC,EAAGC,EAAGC,GACjC,MAAO,CAACxB,EAAGC,EAAGoD,KAAQ7C,EAAKvN,OAAS,GAAKuN,EAAK,GAAK,EAAI,CAACA,EAAK,IAAM,KCLvE,MAAM8L,GAAY,IAAIvZ,KAClB,MAAOiN,EAAGC,EAAGhL,KAAMuL,GAAQ1N,EAAOC,EAAM,OAGxC,MAAO,IAIX,SAAsBwZ,GAElB,MAKMC,EAAa,CACf,CAAC,iBAAmB,sCACpB,CAAC,oBAAoB,iBAAqB,kBAC1C,CAAC,kBAAoB,mBAAoB,oBAGvCC,EAAMhB,GAXK,CACb,CAAC,iBAAmB,sCACpB,CAAC,kBAAoB,kBAAoB,mBACzC,CAAC,kBAAoB,kBAAoB,oBAQNc,GAIvC,OAAOd,GACHe,EACAC,EAAIlZ,IAAK0T,GAAMvV,KAAKgb,KAAKzF,IAGjC,CA3BkB0F,CADF/H,EAAQ5E,EAAGC,EAAGhL,OAEJuL,EAAKvN,OAAS,GAAKuN,EAAK,GAAK,EAAI,CAACA,EAAK,IAAM,KCDvE/L,EAAM9B,UAAUia,MAAQ,WACpB,OAAON,GAAU1X,KAAKW,KAC1B,EAGA7C,OAAO0S,OAAOzP,EAAQ,CAAAiX,MADR,IAAI7Z,IAAS,IAAI0B,KAAS1B,EAAM,WAG9CuB,EAAMC,OAAOqY,MAAQT,GAErB7X,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,WAC0B,IAAhBA,EAAKE,OAC/B,MAAO,WCLnBsT,EAAMqG,MAZQ,CAACnG,EAAMC,EAAMC,KACvB,MAAM2B,EAAO7B,EAAKmG,QACZrE,EAAO7B,EAAKkG,QAClB,OAAO,IAAInY,EACP6T,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK3B,GAAK4B,EAAK,GAAKD,EAAK,IAC9B,UCFR/B,EAAMuD,MALQ,CAACrD,EAAMC,EAAMC,IAChBoC,GAAgBtC,EAAMC,EAAMC,EAAG,SCF1C,MAAM9C,IAAEA,GAAGuD,KAAEA,MAAM1T,GAAEqT,IAAEA,GAAGD,IAAEA,GAAGO,MAAEA,IAAU3V,KAmErCmb,GAAgB,CAACC,EAAQC,KAC3B,MAAMtZ,EAAIqZ,EAAO7Z,OACX+Z,EAAM,CAAC,EAAG,EAAG,EAAG,GACtB,IAAK,IAAI5a,EAAI,EAAGA,EAAI0a,EAAO7Z,OAAQb,IAAK,CACpC,MAAM6Z,EAAMa,EAAO1a,GACbuU,EAAIoG,EAAQ3a,GAAKqB,EACjBzB,EAAMia,EAAI1W,KAChByX,EAAI,IAAMnJ,GAAI7R,EAAI,GAAI,GAAK2U,EAC3BqG,EAAI,IAAMnJ,GAAI7R,EAAI,GAAI,GAAK2U,EAC3BqG,EAAI,IAAMnJ,GAAI7R,EAAI,GAAI,GAAK2U,EAC3BqG,EAAI,IAAMhb,EAAI,GAAK2U,CACvB,CAKA,OAJAqG,EAAI,GAAK5F,GAAK4F,EAAI,IAClBA,EAAI,GAAK5F,GAAK4F,EAAI,IAClBA,EAAI,GAAK5F,GAAK4F,EAAI,IACdA,EAAI,GAAK,WAAWA,EAAI,GAAK,GAC1B,IAAIvY,EAAM1C,EAASib,MChFxBnJ,IAAEA,IAAQnS,KAED,SAAAub,GAAUH,GAErB,IAAII,EAAQ,MACRC,EAASxX,EAAO,QAChByX,EAAU,EAEVC,EAAU,CAAC,EAAG,GACdC,EAAO,GACPC,EAAW,CAAC,EAAG,GACfC,GAAW,EACXC,EAAU,GACVC,GAAO,EACPC,EAAO,EACPC,EAAO,EACPC,GAAoB,EACpBC,EAAc,CAAA,EACdC,GAAY,EACZC,EAAS,EAIb,MAAMC,EAAY,SAAUnB,GAUxB,IATAA,EAASA,GAAU,CAAC,OAAQ,UAGP,WAAjBta,EAAKsa,IACLnX,EAAOuY,QACPvY,EAAOuY,OAAOpB,EAAOva,iBAErBua,EAASnX,EAAOuY,OAAOpB,EAAOva,gBAEb,UAAjBC,EAAKsa,GAAqB,CAEJ,IAAlBA,EAAO7Z,SACP6Z,EAAS,CAACA,EAAO,GAAIA,EAAO,KAGhCA,EAASA,EAAO3a,MAAM,GAEtB,IAAK,IAAI8U,EAAI,EAAGA,EAAI6F,EAAO7Z,OAAQgU,IAC/B6F,EAAO7F,GAAKtR,EAAOmX,EAAO7F,IAG9BqG,EAAKra,OAAS,EACd,IAAK,IAAIgU,EAAI,EAAGA,EAAI6F,EAAO7Z,OAAQgU,IAC/BqG,EAAK9X,KAAKyR,GAAK6F,EAAO7Z,OAAS,GAEvC,CAEA,OADAkb,IACQV,EAAUX,CACtB,EAcA,IAAIsB,EAAiBzD,GAAMA,EACvB0D,EAAc1D,GAAMA,EAcxB,MAAM2D,EAAW,SAAUC,EAAKC,GAC5B,IAAIvC,EAAKtB,EAIT,GAHiB,MAAb6D,IACAA,GAAY,GAEZtH,MAAMqH,IAAgB,OAARA,EACd,OAAOpB,EAEX,GAAKqB,EAYD7D,EAAI4D,OAXJ,GAAIf,GAAYA,EAASva,OAAS,EAAG,CAGjC0X,EAvCK,SAAU1C,GACvB,GAAgB,MAAZuF,EAAkB,CAClB,MAAMpN,EAAIoN,EAASva,OAAS,EAC5B,IAAIb,EAAI,EACR,KAAOA,EAAIgO,GAAK6H,GAASuF,EAASpb,IAC9BA,IAEJ,OAAOA,EAAI,CACf,CACA,OAAO,CACX,CA4BsBqc,CAASF,IACVf,EAASva,OAAS,EAC/B,MAEI0X,EAFOiD,IAASD,GAEXY,EAAMZ,IAASC,EAAOD,GAEvB,EAOZhD,EAAI0D,EAAW1D,GAEV6D,IACD7D,EAAIyD,EAAczD,IAGP,IAAXqD,IACArD,EAAI9G,GAAI8G,EAAGqD,IAGfrD,EAAI4C,EAAS,GAAK5C,GAAK,EAAI4C,EAAS,GAAKA,EAAS,IAElD5C,EAAIhZ,EAAMgZ,EAAG,EAAG,GAEhB,MAAMtX,EAAI3B,KAAKyY,MAAU,IAAJQ,GAErB,GAAIoD,GAAaD,EAAYza,GACzB4Y,EAAM6B,EAAYza,OACf,CACH,GAAsB,UAAlBb,EAAKib,GAEL,IAAK,IAAIrb,EAAI,EAAGA,EAAIkb,EAAKra,OAAQb,IAAK,CAClC,MAAM8C,EAAIoY,EAAKlb,GACf,GAAIuY,GAAKzV,EAAG,CACR+W,EAAMwB,EAAQrb,GACd,KACJ,CACA,GAAIuY,GAAKzV,GAAK9C,IAAMkb,EAAKra,OAAS,EAAG,CACjCgZ,EAAMwB,EAAQrb,GACd,KACJ,CACA,GAAIuY,EAAIzV,GAAKyV,EAAI2C,EAAKlb,EAAI,GAAI,CAC1BuY,GAAKA,EAAIzV,IAAMoY,EAAKlb,EAAI,GAAK8C,GAC7B+W,EAAMtW,EAAOwQ,YACTsH,EAAQrb,GACRqb,EAAQrb,EAAI,GACZuY,EACAuC,GAEJ,KACJ,CACJ,KACyB,aAAlB1a,EAAKib,KACZxB,EAAMwB,EAAQ9C,IAEdoD,IACAD,EAAYza,GAAK4Y,EAEzB,CACA,OAAOA,CACX,EAEA,IAAIkC,EAAa,IAAOL,EAAc,GAEtCG,EAAUnB,GAIV,MAAMnG,EAAI,SAAUiE,GAChB,MAAM3D,EAAItR,EAAO2Y,EAAS1D,IAC1B,OAAI8C,GAAQzG,EAAEyG,GACHzG,EAAEyG,KAEFzG,CAEf,EA8MA,OA5MAN,EAAE+H,QAAU,SAAUA,GAClB,GAAe,MAAXA,EAAiB,CACjB,GAAsB,UAAlBlc,EAAKkc,GACLlB,EAAWkB,EACXrB,EAAU,CAACqB,EAAQ,GAAIA,EAAQA,EAAQzb,OAAS,QAC7C,CACH,MAAM0b,EAAIhZ,EAAOiZ,QAAQvB,GAErBG,EADY,IAAZkB,EACW,CAACC,EAAEnd,IAAKmd,EAAEld,KAEVkE,EAAOkZ,OAAOF,EAAG,IAAKD,EAEzC,CACA,OAAO/H,CACX,CACA,OAAO6G,CACX,EAEA7G,EAAEmI,OAAS,SAAUA,GACjB,IAAKC,UAAU9b,OACX,OAAOoa,EAEXM,EAAOmB,EAAO,GACdlB,EAAOkB,EAAOA,EAAO7b,OAAS,GAC9Bqa,EAAO,GACP,MAAMja,EAAIoa,EAAQxa,OAClB,GAAI6b,EAAO7b,SAAWI,GAAKsa,IAASC,EAEhC,IAAK,IAAIe,KAAKzb,MAAM8b,KAAKF,GACrBxB,EAAK9X,MAAMmZ,EAAIhB,IAASC,EAAOD,QAEhC,CACH,IAAK,IAAI1G,EAAI,EAAGA,EAAI5T,EAAG4T,IACnBqG,EAAK9X,KAAKyR,GAAK5T,EAAI,IAEvB,GAAIyb,EAAO7b,OAAS,EAAG,CAEnB,MAAMgc,EAAOH,EAAOvb,IAAI,CAACob,EAAGvc,IAAMA,GAAK0c,EAAO7b,OAAS,IACjDic,EAAUJ,EAAOvb,IAAKob,IAAOA,EAAIhB,IAASC,EAAOD,IAClDuB,EAAQC,MAAM,CAACZ,EAAKnc,IAAM6c,EAAK7c,KAAOmc,KACvCF,EAAc1D,IACV,GAAIA,GAAK,GAAKA,GAAK,EAAG,OAAOA,EAC7B,IAAIvY,EAAI,EACR,KAAOuY,GAAKuE,EAAQ9c,EAAI,IAAIA,IAC5B,MAAMuU,GACDgE,EAAIuE,EAAQ9c,KAAO8c,EAAQ9c,EAAI,GAAK8c,EAAQ9c,IAEjD,OADY6c,EAAK7c,GAAKuU,GAAKsI,EAAK7c,EAAI,GAAK6c,EAAK7c,KAI1D,CACJ,CAEA,OADAib,EAAU,CAACM,EAAMC,GACVjH,CACX,EAEAA,EAAE9R,KAAO,SAAUua,GACf,OAAKL,UAAU9b,QAGfia,EAAQkC,EACRjB,IACOxH,GAJIuG,CAKf,EAEAvG,EAAE0I,MAAQ,SAAUvC,EAAQQ,GAExB,OADAW,EAAUnB,GACHnG,CACX,EAEAA,EAAEwB,IAAM,SAAUmH,GAEd,OADA5B,EAAO4B,EACA3I,CACX,EAEAA,EAAE4I,OAAS,SAAUhB,GACjB,OAAKQ,UAAU9b,QAGfma,EAAUmB,EACH5H,GAHIyG,CAIf,EAEAzG,EAAE6I,iBAAmB,SAAU5E,GAsC3B,OArCS,MAALA,IACAA,GAAI,GAERiD,EAAoBjD,EACpBuD,IAEIC,EADAP,EACgB,SAAUlD,GACtB,MAAM8E,EAAKnB,EAAS,GAAG,GAAMnJ,MAAM,GAC7BuK,EAAKpB,EAAS,GAAG,GAAMnJ,MAAM,GAC7BwK,EAAMF,EAAKC,EACjB,IAAIE,EAAWtB,EAAS3D,GAAG,GAAMxF,MAAM,GACvC,MAAM0K,EAAUJ,GAAMC,EAAKD,GAAM9E,EACjC,IAAImF,EAASF,EAAWC,EACpBE,EAAK,EACL3E,EAAK,EACLnF,EAAW,GACf,KAAOvU,KAAKuS,IAAI6L,GAAU,KAAQ7J,KAAa,IAC3C,WACQ0J,IACAG,IAAU,GAEVA,EAAS,GACTC,EAAKpF,EACLA,GAAgB,IAAVS,EAAKT,KAEXS,EAAKT,EACLA,GAAgB,IAAVoF,EAAKpF,IAEfiF,EAAWtB,EAAS3D,GAAG,GAAMxF,MAAM,GAC3B2K,EAASF,EAAWC,CAC/B,EAbD,GAeJ,OAAOlF,CACX,EAEiBA,GAAMA,EAEpBhE,CACX,EAEAA,EAAEqJ,QAAU,SAAU9a,GAClB,OAAS,MAALA,GACgB,WAAZ1C,EAAK0C,KACLA,EAAI,CAACA,EAAGA,IAEZqY,EAAWrY,EACJyR,GAEA4G,CAEf,EAEA5G,EAAEmG,OAAS,SAAUmD,EAAW9H,GAExB4G,UAAU9b,OAAS,IACnBkV,EAAM,OAEV,IAAI+H,EAAS,GAEb,GAAyB,IAArBnB,UAAU9b,OACVid,EAASzC,EAAQtb,MAAM,QACpB,GAAkB,IAAd8d,EACPC,EAAS,CAACvJ,EAAE,UACT,GAAIsJ,EAAY,EAAG,CACtB,MAAME,EAAK9C,EAAQ,GACb+C,EAAK/C,EAAQ,GAAK8C,EACxBD,EAyDZ,SAAmBG,EAAMC,GACrB,IAAIjB,EAAQ,GACRkB,EAAYF,EAAOC,EACnBE,EAAmBF,EACvB,IAAK,IAAIle,EAAIie,EAAME,EAAYne,EAAIoe,EAAMpe,EAAIoe,EAAKD,EAAYne,IAAMA,IAChEid,EAAM7Z,KAAKpD,GAEf,OAAOid,CACX,CAjEqBoB,CAAU,EAAGR,GAAkB1c,IAAKnB,GACzCuU,EAAEwJ,EAAM/d,GAAK6d,EAAY,GAAMG,GAEvC,KAAO,CAEHtD,EAAS,GACT,IAAI4D,EAAU,GACd,GAAIlD,GAAYA,EAASva,OAAS,EAC9B,IACI,IAAIb,EAAI,EAAGoe,EAAMhD,EAASva,OAAQ0d,EAAM,GAAKH,EAC7CG,EAAMve,EAAIoe,EAAMpe,EAAIoe,EACpBG,EAAMve,IAAMA,IAEZse,EAAQlb,KAAuC,IAAjCgY,EAASpb,EAAI,GAAKob,EAASpb,UAG7Cse,EAAUrD,EAEd6C,EAASQ,EAAQnd,IAAKqX,GAAMjE,EAAEiE,GAClC,CAKA,OAHIjV,EAAOwS,KACP+H,EAASA,EAAO3c,IAAK0T,GAAMA,EAAEkB,OAE1B+H,CACX,EAEAvJ,EAAEiK,MAAQ,SAAU3J,GAChB,OAAS,MAALA,GACA8G,EAAY9G,EACLN,GAEAoH,CAEf,EAEApH,EAAEkK,MAAQ,SAAU5Q,GAChB,OAAS,MAALA,GACA+N,EAAS/N,EACF0G,GAEAqH,CAEf,EAEArH,EAAEmK,OAAS,SAAUnC,GACjB,OAAS,MAALA,GACAxB,EAASxX,EAAOgZ,GACThI,GAEAwG,CAEf,EAEOxG,CACX,CCrXA,MCNM9S,MAAEA,IAAUnC,KAElB+C,EAAM9B,UAAUX,IAAM,SAAU+e,GAAM,GAClC,OAAY,IAARA,EAAsBnc,KAAKW,KAAKpD,MAAM,EAAG,GACtCyC,KAAKW,KAAKpD,MAAM,EAAG,GAAGoB,IAAIM,GACrC,EAEAY,EAAM9B,UAAUqe,KAAO,SAAUD,GAAM,GACnC,OAAOnc,KAAKW,KAAKpD,MAAM,EAAG,GAAGoB,IAAI,CAACqX,EAAGxY,IAC1BA,EAAI,GAAa,IAAR2e,EAAgBnG,EAAI/W,GAAM+W,GAAMA,EAExD,EAGAlY,OAAO0S,OAAOzP,EAAQ,CAAE3D,IADZ,IAAIe,IAAS,IAAI0B,KAAS1B,EAAM,SAG5CuB,EAAMC,OAAOvC,IAAM,IAAIe,KACnB,MAAMie,EAAOle,EAAOC,EAAM,QAE1B,YADgBO,IAAZ0d,EAAK,KAAkBA,EAAK,GAAK,GAC9BA,GAGX1c,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GACmB,UAAfP,EAFJO,EAAOD,EAAOC,EAAM,WAGC,IAAhBA,EAAKE,QACe,IAAhBF,EAAKE,QACe,UAAjBT,EAAKO,EAAK,KACVA,EAAK,IAAM,GACXA,EAAK,IAAM,GAEnB,MAAO,SC9BnB,MAAMke,GAAQ,CAACC,EAAQC,EAAKtc,KACxB,IAAKoc,GAAMpc,GACP,MAAM,IAAIQ,MAAM,sBAAwBR,GAE5C,OAAOoc,GAAMpc,GAAMqc,EAAQC,IAGzBC,GAAWzK,GAAM,CAACuK,EAAQC,KAC5B,MAAME,EAAK1b,EAAOwb,GAAKnf,MACjBiY,EAAKtU,EAAOub,GAAQlf,MAC1B,OAAO2D,EAAO3D,IAAI2U,EAAE0K,EAAIpH,KAGtBqH,GAAQ3K,GAAM,CAAC0K,EAAIpH,KACrB,MAAM9B,EAAM,GAIZ,OAHAA,EAAI,GAAKxB,EAAE0K,EAAG,GAAIpH,EAAG,IACrB9B,EAAI,GAAKxB,EAAE0K,EAAG,GAAIpH,EAAG,IACrB9B,EAAI,GAAKxB,EAAE0K,EAAG,GAAIpH,EAAG,IACd9B,GAoBX8I,GAAMM,OAASH,GAAQE,GAjBP1d,GAAMA,IAkBtBqd,GAAMO,SAAWJ,GAAQE,GAjBR,CAAC1d,EAAGqB,IAAOrB,EAAIqB,EAAK,MAkBrCgc,GAAMQ,OAASL,GAAQE,GAfR,CAAC1d,EAAGqB,IAAM,KAAO,GAAK,EAAIrB,EAAI,MAAQ,EAAIqB,EAAI,QAgB7Dgc,GAAMS,QAAUN,GAAQE,GAfR,CAAC1d,EAAGqB,IAChBA,EAAI,IAAO,EAAIrB,EAAIqB,EAAK,IAAM,KAAO,EAAI,GAAK,EAAIrB,EAAI,MAAQ,EAAIqB,EAAI,QAe1Egc,GAAM5L,OAAS+L,GAAQE,GAnBR,CAAC1d,EAAGqB,IAAOrB,EAAIqB,EAAIA,EAAIrB,IAoBtCqd,GAAMU,QAAUP,GAAQE,GAnBR,CAAC1d,EAAGqB,IAAOrB,EAAIqB,EAAIrB,EAAIqB,IAoBvCgc,GAAMW,MAAQR,GAAQE,GAfR,CAAC1d,EAAGqB,IACJ,MAANrB,IACJA,EAAYqB,EAAI,IAAX,KAAoB,EAAIrB,EAAI,MACtB,IAFW,IAECA,IAa3Bqd,GAAMY,KAAOT,GAAQE,GAjBR,CAAC1d,EAAGqB,IAAM,KAAO,GAAK,EAAIA,EAAI,MAAQrB,EAAI,QC/BvD,MAAMiQ,IAAEA,GAAGiD,IAAEA,OAAKC,IAAQrV,KCJ1B,YAEQyY,GAAK2H,OAAEA,IAAWpgB,MCDpBqgB,IAAEA,GAAGlO,IAAEA,GAAGsG,MAAEA,GAAKlG,IAAEA,IAAQvS,KAE1B,SAASkd,GAAQoD,EAAMC,EAAM,MAChC,MAAMjS,EAAI,CACNxO,IAAK+V,OAAO2K,UACZzgB,KAAwB,EAAnB8V,OAAO2K,UACZC,IAAK,EACLC,OAAQ,GACRC,MAAO,GAoBX,MAlBmB,WAAf7f,EAAKwf,KACLA,EAAOtf,OAAO0f,OAAOJ,IAEzBA,EAAKpK,QAAS2G,IACN0D,GAAqB,WAAdzf,EAAK+b,KAAmBA,EAAMA,EAAI0D,IACzC1D,SAAsCrH,MAAMqH,KAC5CvO,EAAEoS,OAAO5c,KAAK+Y,GACdvO,EAAEmS,KAAO5D,EACLA,EAAMvO,EAAExO,MAAKwO,EAAExO,IAAM+c,GACrBA,EAAMvO,EAAEvO,MAAKuO,EAAEvO,IAAM8c,GACzBvO,EAAEqS,OAAS,KAInBrS,EAAE8O,OAAS,CAAC9O,EAAExO,IAAKwO,EAAEvO,KAErBuO,EAAE6O,OAAS,CAACha,EAAMkV,IAAQ8E,GAAO7O,EAAGnL,EAAMkV,GAEnC/J,CACX,CAEO,SAAS6O,GAAOmD,EAAMnd,EAAO,QAASkV,EAAM,GAC7B,SAAdvX,EAAKwf,KACLA,EAAOpD,GAAQoD,IAEnB,MAAMxgB,IAAEA,EAAGC,IAAEA,GAAQugB,EACfI,EAASJ,EAAKI,OAAOpd,KAAK,CAACpB,EAAGqB,IAAMrB,EAAIqB,GAE9C,GAAY,IAAR8U,EACA,MAAO,CAACvY,EAAKC,GAGjB,MAAMod,EAAS,GAQf,GAN0B,MAAtBha,EAAK+K,OAAO,EAAG,KAEfiP,EAAOrZ,KAAKhE,GACZqd,EAAOrZ,KAAK/D,IAGU,MAAtBoD,EAAK+K,OAAO,EAAG,GAAY,CAE3BiP,EAAOrZ,KAAKhE,GACZ,IAAK,IAAIY,EAAI,EAAGA,EAAI2X,EAAK3X,IACrByc,EAAOrZ,KAAKhE,EAAOY,EAAI2X,GAAQtY,EAAMD,IAEzCqd,EAAOrZ,KAAK/D,EAChB,MAAO,GAA0B,MAAtBoD,EAAK+K,OAAO,EAAG,GAAY,CAElC,GAAIpO,GAAO,EACP,MAAM,IAAI6D,MACN,uDAGR,MAAMid,EAAU5gB,KAAK6gB,OAASR,GAAIvgB,GAC5BghB,EAAU9gB,KAAK6gB,OAASR,GAAItgB,GAClCod,EAAOrZ,KAAKhE,GACZ,IAAK,IAAIY,EAAI,EAAGA,EAAI2X,EAAK3X,IACrByc,EAAOrZ,KAAKqO,GAAI,GAAIyO,EAAWlgB,EAAI2X,GAAQyI,EAAUF,KAEzDzD,EAAOrZ,KAAK/D,EAChB,MAAO,GAA0B,MAAtBoD,EAAK+K,OAAO,EAAG,GAAY,CAElCiP,EAAOrZ,KAAKhE,GACZ,IAAK,IAAIY,EAAI,EAAGA,EAAI2X,EAAK3X,IAAK,CAC1B,MAAM8C,GAAMkd,EAAOnf,OAAS,GAAKb,EAAK2X,EAChC0I,EAAKtI,GAAMjV,GACjB,GAAIud,IAAOvd,EACP2Z,EAAOrZ,KAAK4c,EAAOK,QAChB,CAEH,MAAMC,EAAKxd,EAAIud,EACf5D,EAAOrZ,KAAK4c,EAAOK,IAAO,EAAIC,GAAMN,EAAOK,EAAK,GAAKC,EACzD,CACJ,CACA7D,EAAOrZ,KAAK/D,EAChB,MAAO,GAA0B,MAAtBoD,EAAK+K,OAAO,EAAG,GAAY,CAOlC,IAAI+S,EACJ,MAAMvS,EAAIgS,EAAOnf,OACX2f,EAAc,IAAI1f,MAAMkN,GACxByS,EAAe,IAAI3f,MAAM6W,GAC/B,IAAI+I,GAAS,EACTC,EAAW,EACXC,EAAY,KAGhBA,EAAY,GACZA,EAAUxd,KAAKhE,GACf,IAAK,IAAIY,EAAI,EAAGA,EAAI2X,EAAK3X,IACrB4gB,EAAUxd,KAAKhE,EAAOY,EAAI2X,GAAQtY,EAAMD,IAI5C,IAFAwhB,EAAUxd,KAAK/D,GAERqhB,GAAQ,CAEX,IAAK,IAAIG,EAAI,EAAGA,EAAIlJ,EAAKkJ,IACrBJ,EAAaI,GAAK,EAEtB,IAAK,IAAI7gB,EAAI,EAAGA,EAAIgO,EAAGhO,IAAK,CACxB,MAAM6V,EAAQmK,EAAOhgB,GACrB,IACI8gB,EADAC,EAAU5L,OAAO2K,UAErB,IAAK,IAAIe,EAAI,EAAGA,EAAIlJ,EAAKkJ,IAAK,CAC1B,MAAMG,EAAOnP,GAAI+O,EAAUC,GAAKhL,GAC5BmL,EAAOD,IACPA,EAAUC,EACVF,EAAOD,GAEXJ,EAAaK,KACbN,EAAYxgB,GAAK8gB,CACrB,CACJ,CAGA,MAAMG,EAAe,IAAIngB,MAAM6W,GAC/B,IAAK,IAAIkJ,EAAI,EAAGA,EAAIlJ,EAAKkJ,IACrBI,EAAaJ,GAAK,KAEtB,IAAK,IAAI7gB,EAAI,EAAGA,EAAIgO,EAAGhO,IACnBugB,EAAUC,EAAYxgB,GACQ,OAA1BihB,EAAaV,GACbU,EAAaV,GAAWP,EAAOhgB,GAE/BihB,EAAaV,IAAYP,EAAOhgB,GAGxC,IAAK,IAAI6gB,EAAI,EAAGA,EAAIlJ,EAAKkJ,IACrBI,EAAaJ,IAAM,EAAIJ,EAAaI,GAIxCH,GAAS,EACT,IAAK,IAAIG,EAAI,EAAGA,EAAIlJ,EAAKkJ,IACrB,GAAII,EAAaJ,KAAOD,EAAUC,GAAI,CAClCH,GAAS,EACT,KACJ,CAGJE,EAAYK,EACZN,IAEIA,EAAW,MACXD,GAAS,EAEjB,CAIA,MAAMQ,EAAY,CAAA,EAClB,IAAK,IAAIL,EAAI,EAAGA,EAAIlJ,EAAKkJ,IACrBK,EAAUL,GAAK,GAEnB,IAAK,IAAI7gB,EAAI,EAAGA,EAAIgO,EAAGhO,IACnBugB,EAAUC,EAAYxgB,GACtBkhB,EAAUX,GAASnd,KAAK4c,EAAOhgB,IAEnC,IAAImhB,EAAkB,GACtB,IAAK,IAAIN,EAAI,EAAGA,EAAIlJ,EAAKkJ,IACrBM,EAAgB/d,KAAK8d,EAAUL,GAAG,IAClCM,EAAgB/d,KAAK8d,EAAUL,GAAGK,EAAUL,GAAGhgB,OAAS,IAE5DsgB,EAAkBA,EAAgBve,KAAK,CAACpB,EAAGqB,IAAMrB,EAAIqB,GACrD4Z,EAAOrZ,KAAK+d,EAAgB,IAC5B,IAAK,IAAInhB,EAAI,EAAGA,EAAImhB,EAAgBtgB,OAAQb,GAAK,EAAG,CAChD,MAAMwY,EAAI2I,EAAgBnhB,GACrB8U,MAAM0D,SAAMiE,EAAOhJ,QAAQ+E,IAC5BiE,EAAOrZ,KAAKoV,EAEpB,CACJ,CACA,OAAOiE,CACX,CC3LA,MCmBM2E,GAAc;;;;;;;;;;;;;GAuCpB,SAASzN,GAAI/F,EAAGC,EAAGhL,GACf,MACI,SAAYvD,KAAKmS,IAAI7D,EAAI,IAAK,KAC9B,SAAYtO,KAAKmS,IAAI5D,EAAI,IAAK,KAC9B,QAAWvO,KAAKmS,IAAI5O,EAAI,IAAK,IAErC,CClEA,MAAMmS,KAAEA,GAAIvD,IAAEA,GAAGrS,IAAEA,GAAGC,IAAEA,GAAG4V,MAAEA,GAAKpD,IAAEA,GAAG8C,IAAEA,GAAGD,IAAEA,GAAG2M,IAAEA,GAAG/f,GAAEA,IAAOhC,KCC/D,MCGAgiB,GAAe,CACXC,KAAI,IACO1G,GAAM,CAACtX,EAAO+T,IAAI,IAAK,EAAG,IAAM/T,EAAO+T,IAAI,IAAK,GAAK,MAEhEkK,IAAG,IACQ3G,GAAM,CAAC,OAAQ,OAAQ,OAAQ,SAA6BpY,KAC/D,QCMNgf,GAAc,CAEhBC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGlGC,SAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACzHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACpFC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACtFC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChIC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrFC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClIC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvFC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAGhGC,GAAmBxjB,OAAO2N,KAAKwT,IAC/BsC,GAAU,IAAIzT,IAAIwT,GAAiB3iB,IAAK0e,GAAQ,CAACA,EAAI1f,cAAe0f,KAGpEmE,GACe,mBAAVC,MACD,IAAIA,MAAMxC,GAAa,CACnB,GAAAhR,CAAIyT,EAAQC,GACR,MAAMC,EAAQD,EAAKhkB,cACnB,GAAI4jB,GAAQM,IAAID,GACZ,OAAOF,EAAOH,GAAQtT,IAAI2T,GAElC,EACAE,oBAAmB,IACRhkB,OAAOgkB,oBAAoBR,MAG1CrC,IC7EJpiB,IAAEA,IAAQC,KCMhB+C,EAAM9B,UAAUgkB,KAAO,WACnB,MDLa,KAAI5jB,KACjB,IAAKiN,EAAGC,EAAGhL,GAAKnC,EAAOC,EAAM,OAC7BiN,GAAQ,IACRC,GAAQ,IACRhL,GAAQ,IACR,MAAM5B,EAAI,EAAI5B,GAAIuO,EAAGvO,GAAIwO,EAAGhL,IACtB0R,EAAItT,EAAI,EAAI,GAAK,EAAIA,GAAK,EAIhC,MAAO,EAHI,EAAI2M,EAAI3M,GAAKsT,GACb,EAAI1G,EAAI5M,GAAKsT,GACb,EAAI1R,EAAI5B,GAAKsT,EACPtT,ICLVujB,CAAShiB,KAAKW,KACzB,EAGA7C,OAAO0S,OAAOzP,EAAQ,CAAEghB,KADX,IAAI5jB,IAAS,IAAI0B,KAAS1B,EAAM,UAG7CuB,EAAMC,OAAOoiB,KCZI,IAAI5jB,KACjBA,EAAOD,EAAOC,EAAM,QACpB,MAAOkU,EAAGY,EAAG3E,EAAG7P,GAAKN,EACf0N,EAAQ1N,EAAKE,OAAS,EAAIF,EAAK,GAAK,EAC1C,OAAU,IAANM,EAAgB,CAAC,EAAG,EAAG,EAAGoN,GACvB,CACHwG,GAAK,EAAI,EAAI,KAAO,EAAIA,IAAM,EAAI5T,GAClCwU,GAAK,EAAI,EAAI,KAAO,EAAIA,IAAM,EAAIxU,GAClC6P,GAAK,EAAI,EAAI,KAAO,EAAIA,IAAM,EAAI7P,GAClCoN,IDKRnM,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,UAC0B,IAAhBA,EAAKE,OAC/B,MAAO,UEXnB,MCNM4jB,GAAY,IAAI9jB,KAClB,MAAOiN,EAAGC,EAAGhL,KAAMuL,GAAQ1N,EAAOC,EAAM,QACjCU,EAAGG,EAAGyP,GAAMiJ,GAAUtM,EAAGC,EAAGhL,IAC5BgO,EAAGgE,EAAG1G,GAAK+G,EAAQ7T,EAAGG,EAAGyP,GAChC,MAAO,CAACJ,EAAGgE,EAAG1G,KAAOC,EAAKvN,OAAS,GAAKuN,EAAK,GAAK,EAAI,CAACA,EAAK,IAAM,MCIhE3M,MAAEA,IAAUnC,KAUZolB,GAAU,IAAI/jB,KAChB,MAAMie,EAAOle,EAAOC,EAAM,QAC1B,IAAI8B,EAAOrB,EAAKT,IAAS,MACzB,GAA0B,QAAtB8B,EAAK+K,OAAO,EAAG,GACf,MFhBQ,KAAI7M,KAChB,MAAMgkB,EAAOjkB,EAAOC,EAAM,QAC1B,IAAI8B,EAAOrB,EAAKT,IAAS,MAUzB,OATAgkB,EAAK,GAAKpjB,EAAKojB,EAAK,IAAM,GAAK,MAC/BA,EAAK,GAAKpjB,EAAe,IAAVojB,EAAK,IAAY,IAChCA,EAAK,GAAKpjB,EAAe,IAAVojB,EAAK,IAAY,IACnB,SAATliB,GAAoBkiB,EAAK9jB,OAAS,GAAK8jB,EAAK,GAAK,GACjDA,EAAK,GAAK,MAAQA,EAAK9jB,OAAS,EAAI8jB,EAAK,GAAK,GAC9CliB,EAAO,QAEPkiB,EAAK9jB,OAAS,EAEX,GAAG4B,EAAK+K,OAAO,EAAG,MAAMmX,EAAKrhB,KAAK,SEI9BshB,CAAQ1L,GAAQ0F,GAAOnc,GAElC,GAA0B,QAAtBA,EAAK+K,OAAO,EAAG,GAAc,CAE7B,MAAMqX,EAAiBlU,IACvBJ,EAAiB,OACjB,MAAMuU,ECvBE,KAAInkB,KAChB,MAAMokB,EAAOrkB,EAAOC,EAAM,OAC1B,IAAI8B,EAAOrB,EAAKT,IAAS,MASzB,OARAokB,EAAK,GAAKxjB,EAAKwjB,EAAK,IAAM,IAC1BA,EAAK,GAAKxjB,EAAKwjB,EAAK,IACpBA,EAAK,GAAKxjB,EAAKwjB,EAAK,IACP,SAATtiB,GAAoBsiB,EAAKlkB,OAAS,GAAKkkB,EAAK,GAAK,EACjDA,EAAK,GAAK,MAAQA,EAAKlkB,OAAS,EAAIkkB,EAAK,GAAK,GAE9CA,EAAKlkB,OAAS,EAEX,OAAOkkB,EAAKzhB,KAAK,SDYH0hB,CAAQzS,EAAQqM,GAAOnc,GAExC,OADA8N,EAAiBsU,GACVC,CACX,CACA,GAA0B,QAAtBriB,EAAK+K,OAAO,EAAG,GAAc,CAE7B,MAAMqX,EAAiBlU,IACvBJ,EAAiB,OACjB,MAAMuU,EE/BE,KAAInkB,KAChB,MAAMskB,EAAOvkB,EAAOC,EAAM,OAC1B,IAAI8B,EAAOrB,EAAKT,IAAS,MASzB,OARAskB,EAAK,GAAK1jB,EAAK0jB,EAAK,IAAM,IAC1BA,EAAK,GAAK1jB,EAAK0jB,EAAK,IACpBA,EAAK,GAAKnQ,MAAMmQ,EAAK,IAAM,OAAS1jB,EAAK0jB,EAAK,IAAM,MACvC,SAATxiB,GAAoBwiB,EAAKpkB,OAAS,GAAKokB,EAAK,GAAK,EACjDA,EAAK,GAAK,MAAQA,EAAKpkB,OAAS,EAAIokB,EAAK,GAAK,GAE9CA,EAAKpkB,OAAS,EAEX,OAAOokB,EAAK3hB,KAAK,SFoBH4hB,CAAQ7P,GAAQuJ,GAAOnc,GAExC,OADA8N,EAAiBsU,GACVC,CACX,CACA,MAA0B,UAAtBriB,EAAK+K,OAAO,EAAG,GG1CL,KAAI7M,KAClB,MAAMokB,EAAOrkB,EAAOC,EAAM,OAS1B,OARAokB,EAAK,GAAKxjB,EAAe,IAAVwjB,EAAK,IAAY,IAChCA,EAAK,GAAKrjB,EAAKqjB,EAAK,IACpBA,EAAK,GAAKrjB,EAAKqjB,EAAK,IAChBA,EAAKlkB,OAAS,GAAKkkB,EAAK,GAAK,EAC7BA,EAAK,GAAK,MAAQA,EAAKlkB,OAAS,EAAIkkB,EAAK,GAAK,GAE9CA,EAAKlkB,OAAS,EAEX,SAASkkB,EAAKzhB,KAAK,SHiCf6hB,CAAUjL,GAAU0E,IAEL,UAAtBnc,EAAK+K,OAAO,EAAG,GI7CL,KAAI7M,KAClB,MAAMskB,EAAOvkB,EAAOC,EAAM,OAS1B,OARAskB,EAAK,GAAK1jB,EAAe,IAAV0jB,EAAK,IAAY,IAChCA,EAAK,GAAKvjB,EAAKujB,EAAK,IACpBA,EAAK,GAAKnQ,MAAMmQ,EAAK,IAAM,OAAS1jB,EAAK0jB,EAAK,IAAM,MAChDA,EAAKpkB,OAAS,GAAKokB,EAAK,GAAK,EAC7BA,EAAK,GAAK,MAAQA,EAAKpkB,OAAS,EAAIokB,EAAK,GAAK,GAE9CA,EAAKpkB,OAAS,EAEX,SAASokB,EAAK3hB,KAAK,SJoCf8hB,CAAUX,GAAU7F,KAE/BA,EAAK,GAAKnd,GAAMmd,EAAK,IACrBA,EAAK,GAAKnd,GAAMmd,EAAK,IACrBA,EAAK,GAAKnd,GAAMmd,EAAK,KACR,SAATnc,GAAoBmc,EAAK/d,OAAS,GAAK+d,EAAK,GAAK,KACjDA,EAAK,GAAK,MAAQA,EAAK/d,OAAS,EAAI+d,EAAK,GAAK,GAC9Cnc,EAAO,QAEJ,GAAGA,EAAK+K,OAAO,EAAG,MAAMoR,EAAK7e,MAAM,EAAY,QAAT0C,EAAiB,EAAI,GAAGa,KAAK,UKrDxE+hB,GAAY,IAAI1kB,KAClBA,EAAOD,EAAOC,EAAM,OACpB,MAAOU,EAAGwT,EAAG1G,KAAMC,GAAQzN,GACpBkQ,EAAGrP,EAAGyP,GAAM2D,EAAQvT,EAAGwT,EAAG1G,IAC1BP,EAAGC,EAAGhL,GAAKkX,GAAUlJ,EAAGrP,EAAGyP,GAClC,MAAO,CAACrD,EAAGC,EAAGhL,KAAOuL,EAAKvN,OAAS,GAAKuN,EAAK,GAAK,EAAI,CAACA,EAAK,IAAM,KCAhEkX,GAAa,wCAAwCC,OACrDC,GAAe,yCAAyCD,OACxDE,GAAM,wCAAwCF,OAC9CG,GAAO,MAAMH,OACbI,GAAM,MAAMJ,OACZK,GAAQ,UAAUL,OAClBM,GAAQ,+CAA+CN,OACvDO,GAAQ,oDAAoDP,OAG5DQ,GAAS,IAAIC,OACf,YACIN,GACA,CAACJ,GAAYA,GAAYA,IAAYhiB,KAAKqiB,IAC1CG,GACA,QAEFG,GAAgB,IAAID,OACtB,UACIN,GACA,CAACJ,GAAYA,GAAYA,IAAYhiB,KAAKsiB,IAC1CF,GACA,QAEFQ,GAAiB,IAAIF,OACvB,WACIN,GACA,CAACJ,GAAYA,GAAYA,GAAYE,IAAcliB,KAAKsiB,IACxDF,GACA,QAGFS,GAAS,IAAIH,OACf,YAAcN,GAAO,CAACG,GAAOJ,GAAKA,IAAKniB,KAAKqiB,IAAOG,GAAQ,QAEzDM,GAAgB,IAAIJ,OACtB,WAAaN,GAAO,CAACG,GAAOJ,GAAKA,IAAKniB,KAAKsiB,IAASF,GAAO,QAEzDW,GACF,wGAEEC,GAAS,IAAIN,OACf,UACIN,GACA,CAACF,GAAcA,GAAcA,IAAcliB,KAAKqiB,IAChDG,GACA,QAEFS,GAAS,IAAIP,OACf,UACIN,GACA,CAACF,GAAcA,GAAcK,IAAOviB,KAAKqiB,IACzCG,GACA,QAEFU,GAAW,IAAIR,OACjB,YACIN,GACA,CAACF,GAAcA,GAAcA,IAAcliB,KAAKqiB,IAChDG,GACA,QAEFW,GAAW,IAAIT,OACjB,YACIN,GACA,CAACF,GAAcA,GAAcK,IAAOviB,KAAKqiB,IACzCG,GACA,SAGFrkB,MAAEA,IAAUnC,KAEZonB,GAAY9mB,GACPA,EAAIuB,IAAI,CAACqX,EAAGxY,IAAOA,GAAK,EAAIT,EAAMkC,GAAM+W,GAAI,EAAG,KAAOA,GAG3DmO,GAAoB,CAACC,EAAKxnB,EAAM,EAAGC,EAAM,IAAKwnB,GAAS,KACtC,iBAARD,GAAoBA,EAAIE,SAAS,OACxCF,EAAMG,WAAWH,EAAII,UAAU,EAAGJ,EAAI/lB,OAAS,IAAM,IAGjD+lB,EAFAC,EAEMznB,EAAkB,IAAXwnB,EAAM,IAAYvnB,EAAMD,GAE/BA,EAAMwnB,GAAOvnB,EAAMD,KAGzBwnB,GAGNK,GAAc,CAACzO,EAAG0O,IACP,SAAN1O,EAAe0O,EAAY1O,EAGhC2O,GAAWC,IAGb,GAAY,iBAFZA,EAAMA,EAAIjnB,cAAcknB,QAGpB,MAAO,CAAC,EAAG,EAAG,EAAG,GAGrB,IAAI5R,EAEJ,GAAIvT,EAAMC,OAAO+L,MACb,IACI,OAAOhM,EAAMC,OAAO+L,MAAMkZ,EAE9B,CAAE,MAAOE,GAAI,CAIjB,IAAK7R,EAAI2R,EAAI7Z,MAAMwY,OAAatQ,EAAI2R,EAAI7Z,MAAM0Y,KAAiB,CAC3D,IAAIrmB,EAAM6V,EAAE1V,MAAM,EAAG,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBJ,EAAII,IAAM2mB,GAAkBM,GAAYrnB,EAAII,GAAI,GAAI,EAAG,KAE3DJ,EAAM8mB,GAAS9mB,GACf,MAAMyO,OAAiBnN,IAATuU,EAAE,IAAoBkR,GAAkBlR,EAAE,GAAI,EAAG,GAAK,EAEpE,OADA7V,EAAI,GAAKyO,EACFzO,CACX,CAGA,GAAK6V,EAAI2R,EAAI7Z,MAAM2Y,IAAkB,CACjC,MAAMtmB,EAAM6V,EAAE1V,MAAM,EAAG,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBJ,EAAII,IAAM2mB,GAAkB/mB,EAAII,GAAI,EAAG,KAE3C,OAAOJ,CACX,CAGA,IAAK6V,EAAI2R,EAAI7Z,MAAM4Y,OAAa1Q,EAAI2R,EAAI7Z,MAAM6Y,KAAiB,CAC3D,MAAM9O,EAAM7B,EAAE1V,MAAM,EAAG,GACvBuX,EAAI,IAAM2P,GAAY3P,EAAI,GAAGiQ,QAAQ,MAAO,IAAK,GACjDjQ,EAAI,GAA0D,KAApDqP,GAAkBM,GAAY3P,EAAI,GAAI,GAAI,EAAG,KACvDA,EAAI,GAA0D,KAApDqP,GAAkBM,GAAY3P,EAAI,GAAI,GAAI,EAAG,KACvD,MAAM1X,EAAM8mB,GAAS7N,GAAQvB,IACvBjJ,OAAiBnN,IAATuU,EAAE,IAAoBkR,GAAkBlR,EAAE,GAAI,EAAG,GAAK,EAEpE,OADA7V,EAAI,GAAKyO,EACFzO,CACX,CAGA,GAAK6V,EAAI2R,EAAI7Z,MAAM8Y,IAAkB,CACjC,MAAM/O,EAAM7B,EAAE1V,MAAM,EAAG,GACvBuX,EAAI,IAAM,IACVA,EAAI,IAAM,IACV,MAAM1X,EAAMiZ,GAAQvB,GACpB,IAAK,IAAItX,EAAI,EAAGA,EAAI,EAAGA,IACnBJ,EAAII,GAAKyB,GAAM7B,EAAII,IAGvB,OADAJ,EAAI,IAAM6V,EAAE,GACL7V,CACX,CAEA,GAAK6V,EAAI2R,EAAI7Z,MAAM+Y,IAAU,CACzB,MAAMvT,EAAM0C,EAAE1V,MAAM,EAAG,GACvBgT,EAAI,GAAK4T,GAAkBM,GAAYlU,EAAI,GAAI,GAAI,EAAG,KACtDA,EAAI,GAAK4T,GAAkBM,GAAYlU,EAAI,GAAI,QAAU,KAAK,GAC9DA,EAAI,GAAK4T,GAAkBM,GAAYlU,EAAI,GAAI,QAAU,KAAK,GAE9D,MAAMyU,EAAK7W,IACXJ,EAAiB,OACjB,MAAM3Q,EAAM8mB,GAAS9V,EAAQmC,IAE7BxC,EAAiBiX,GACjB,MAAMnZ,OAAiBnN,IAATuU,EAAE,IAAoBkR,GAAkBlR,EAAE,GAAI,EAAG,GAAK,EAEpE,OADA7V,EAAI,GAAKyO,EACFzO,CACX,CAEA,GAAK6V,EAAI2R,EAAI7Z,MAAMgZ,IAAU,CACzB,MAAMjR,EAAMG,EAAE1V,MAAM,EAAG,GACvBuV,EAAI,GAAKqR,GAAkBrR,EAAI,GAAI,EAAG,KACtCA,EAAI,GAAKqR,GAAkBM,GAAY3R,EAAI,GAAI,GAAI,EAAG,KAAK,GAC3DA,EAAI,IAAM2R,GAAY3R,EAAI,GAAGiS,QAAQ,MAAO,IAAK,GAEjD,MAAMC,EAAK7W,IACXJ,EAAiB,OACjB,MAAM3Q,EAAM8mB,GAAS3R,EAAQO,IAE7B/E,EAAiBiX,GACjB,MAAMnZ,OAAiBnN,IAATuU,EAAE,IAAoBkR,GAAkBlR,EAAE,GAAI,EAAG,GAAK,EAEpE,OADA7V,EAAI,GAAKyO,EACFzO,CACX,CAEA,GAAK6V,EAAI2R,EAAI7Z,MAAMiZ,IAAY,CAC3B,MAAMhM,EAAQ/E,EAAE1V,MAAM,EAAG,GACzBya,EAAM,GAAKmM,GAAkBM,GAAYzM,EAAM,GAAI,GAAI,EAAG,GAC1DA,EAAM,GAAKmM,GAAkBM,GAAYzM,EAAM,GAAI,OAAU,IAAK,GAClEA,EAAM,GAAKmM,GAAkBM,GAAYzM,EAAM,GAAI,OAAU,IAAK,GAClE,MAAM5a,EAAM8mB,GAAS3M,GAAUS,IACzBnM,OAAiBnN,IAATuU,EAAE,IAAoBkR,GAAkBlR,EAAE,GAAI,EAAG,GAAK,EAEpE,OADA7V,EAAI,GAAKyO,EACFzO,CACX,CAEA,GAAK6V,EAAI2R,EAAI7Z,MAAMkZ,IAAY,CAC3B,MAAM/O,EAAQjC,EAAE1V,MAAM,EAAG,GACzB2X,EAAM,GAAKiP,GAAkBM,GAAYvP,EAAM,GAAI,GAAI,EAAG,GAC1DA,EAAM,GAAKiP,GAAkBM,GAAYvP,EAAM,GAAI,GAAI,EAAG,IAAK,GAC/DA,EAAM,IAAMuP,GAAYvP,EAAM,GAAG6P,QAAQ,MAAO,IAAK,GACrD,MAAM3nB,EAAM8mB,GAASrB,GAAU3N,IACzBrJ,OAAiBnN,IAATuU,EAAE,IAAoBkR,GAAkBlR,EAAE,GAAI,EAAG,GAAK,EAEpE,OADA7V,EAAI,GAAKyO,EACFzO,CACX,GAGJunB,GAAQnkB,KAAQ2V,GAGRoN,GAAO/iB,KAAK2V,IACZwN,GAAOnjB,KAAK2V,IACZ2N,GAAOtjB,KAAK2V,IACZ4N,GAAOvjB,KAAK2V,IACZ6N,GAASxjB,KAAK2V,IACd8N,GAASzjB,KAAK2V,IAEdsN,GAAcjjB,KAAK2V,IACnBuN,GAAeljB,KAAK2V,IACpByN,GAAcpjB,KAAK2V,IACnB0N,GAAerjB,KAAK2V,IACd,gBAANA,ECjORtW,EAAM9B,UAAU6mB,IAAM,SAAU3kB,GAC5B,OAAOiiB,GAAQliB,KAAKW,KAAMV,EAC9B,EAGAc,EAAO6jB,IADK,IAAIzmB,IAAS,IAAI0B,KAAS1B,EAAM,OAG5CuB,EAAMC,OAAOilB,IAAMD,GAEnBjlB,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,CAACmL,KAAMC,KACT,IAAKA,EAAKvN,QAAsB,WAAZT,EAAK+N,IAAmBgZ,GAAQnkB,KAAKmL,GACrD,MAAO,SChBnBjM,EAAMC,OAAOslB,GAAK,IAAI9mB,KAClB,MAAMf,EAAMc,EAAOC,EAAM,QAIzB,OAHAf,EAAI,IAAM,IACVA,EAAI,IAAM,IACVA,EAAI,IAAM,IACHA,GAIX2D,EAAOkkB,GADI,IAAI9mB,IAAS,IAAI0B,KAAS1B,EAAM,MAG3C0B,EAAM9B,UAAUknB,GAAK,WACjB,MAAM7nB,EAAM4C,KAAKW,KACjB,MAAO,CAACvD,EAAI,GAAK,IAAKA,EAAI,GAAK,IAAKA,EAAI,GAAK,IAAKA,EAAI,GAC1D,ECZAyC,EAAM9B,UAAU8C,IAAM,SAAUZ,GAC5B,OAAOkL,EAAQnL,KAAKW,KAAMV,EAC9B,EAGAc,EAAOF,IADK,IAAI1C,IAAS,IAAI0B,KAAS1B,EAAM,OAG5CuB,EAAMC,OAAOkB,IAAMiK,EACnBpL,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,CAACmL,KAAMC,KACT,IACKA,EAAKvN,QACM,WAAZT,EAAK+N,IACL,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGsF,QAAQtF,EAAEtN,SAAW,EAE3C,MAAO,SClBnB,MAAM8e,IAAEA,IAAQrgB,KAEVooB,GAAmBC,IACrB,MAAMC,EAAOD,EAAS,IACtB,IAAI/Z,EAAGC,EAAGhL,EA0BV,OAzBI+kB,EAAO,IACPha,EAAI,IACJC,EACI+Z,EAAO,EACD,GACA,mBACA,oBAAuB/Z,EAAI+Z,EAAO,GAClC,mBAAqBjI,GAAI9R,GACnChL,EACI+kB,EAAO,GACD,EAEA,mBAAsB/kB,EAAI+kB,EAAO,IADjC,mBAEA,mBAAqBjI,GAAI9c,KAEnC+K,EACI,mBACA,kBAAqBA,EAAIga,EAAO,IAChC,kBAAoBjI,GAAI/R,GAC5BC,EACI,kBACA,oBAAuBA,EAAI+Z,EAAO,IAClC,iBAAmBjI,GAAI9R,GAC3BhL,EAAI,KAED,CAAC+K,EAAGC,EAAGhL,EAAG,KC5BfpB,MAAEA,IAAUnC,KCDlB+C,EAAM9B,UAAUqnB,KACZvlB,EAAM9B,UAAUonB,OAChBtlB,EAAM9B,UAAUsnB,YACZ,WACI,MDDY,KAAIlnB,KACxB,MAAMf,EAAMc,EAAOC,EAAM,OACnBiN,EAAIhO,EAAI,GACViD,EAAIjD,EAAI,GACZ,IAGIgoB,EAHAE,EAAU,IACVC,EAAU,IAGd,KAAOA,EAAUD,EAFL,IAEoB,CAC5BF,EAA6B,IAArBG,EAAUD,GAClB,MAAMloB,EAAM8nB,GAAgBE,GACxBhoB,EAAI,GAAKA,EAAI,IAAMiD,EAAI+K,EACvBma,EAAUH,EAEVE,EAAUF,CAElB,CACA,OAAOnmB,GAAMmmB,IChBEI,CAAgBxlB,KAAKW,KAChC,EAER,MAAMykB,GAAO,IAAIjnB,IAAS,IAAI0B,KAAS1B,EAAM,QAC7CL,OAAO0S,OAAOzP,EAAQ,CAAEqkB,QAAMD,OAAQC,GAAMC,YAAaD,KAEzD1lB,EAAMC,OAAOylB,KACT1lB,EAAMC,OAAOwlB,OACbzlB,EAAMC,OAAO0lB,YACTH,GCZRrlB,EAAM9B,UAAUmX,MAAQ,WACpB,OAAO+M,GAAUjiB,KAAKW,KAC1B,uGAGA7C,OAAO0S,OAAOzP,EAAQ,CAAEmU,MADV,IAAI/W,IAAS,IAAI0B,KAAS1B,EAAM,WAG9CuB,EAAMC,OAAOuV,MAAQ2N,GAErBnjB,EAAME,WAAWgB,KAAK,CAClBN,EAAG,EACHE,KAAM,IAAIrC,KAEN,GAAmB,UAAfP,EADJO,EAAOD,EAAOC,EAAM,WAC0B,IAAhBA,EAAKE,OAC/B,MAAO,WCsCnBP,OAAO0S,OAAOzP,EAAQ,CAClBiZ,WACAyL,QjCxDW,CAACvN,EAAQjY,EAAO,OAAQkY,EAAU,QAC7C,MAAMtZ,EAAIqZ,EAAO7Z,OACZ8Z,IAASA,EAAU7Z,MAAM8b,KAAK,IAAI9b,MAAMO,IAAIF,IAAI,IAAM,IAE3D,MAAMF,EACFI,EACAsZ,EAAQb,OAAO,SAAUtY,EAAGqB,GACxB,OAAOrB,EAAIqB,CACf,GAMJ,GALA8X,EAAQnF,QAAQ,CAAC0S,EAAGloB,KAChB2a,EAAQ3a,IAAMiB,IAGlByZ,EAASA,EAAOvZ,IAAK0T,GAAM,IAAIxS,EAAMwS,IACxB,SAATpS,EACA,OAAOgY,GAAcC,EAAQC,GAEjC,MAAMwN,EAAQzN,EAAO0N,QACfxN,EAAMuN,EAAM1X,IAAIhO,GAChB4lB,EAAM,GACZ,IAAIC,EAAK,EACLC,EAAK,EAET,IAAK,IAAIvoB,EAAI,EAAGA,EAAI4a,EAAI/Z,OAAQb,IAG5B,GAFA4a,EAAI5a,IAAM4a,EAAI5a,IAAM,GAAK2a,EAAQ,GACjC0N,EAAIjlB,KAAK0R,MAAM8F,EAAI5a,IAAM,EAAI2a,EAAQ,IACd,MAAnBlY,EAAKqT,OAAO9V,KAAe8U,MAAM8F,EAAI5a,IAAK,CAC1C,MAAMsZ,EAAKsB,EAAI5a,GAAK,IAAOsB,GAC3BgnB,GAAM3T,GAAI2E,GAAKqB,EAAQ,GACvB4N,GAAM7T,GAAI4E,GAAKqB,EAAQ,EAC3B,CAGJ,IAAItM,EAAQ8Z,EAAM9Z,QAAUsM,EAAQ,GACpCD,EAAOlF,QAAQ,CAACX,EAAG2T,KACf,MAAMC,EAAO5T,EAAEpE,IAAIhO,GACnB4L,GAASwG,EAAExG,QAAUsM,EAAQ6N,EAAK,GAClC,IAAK,IAAIxoB,EAAI,EAAGA,EAAI4a,EAAI/Z,OAAQb,IAC5B,IAAK8U,MAAM2T,EAAKzoB,IAEZ,GADAqoB,EAAIroB,IAAM2a,EAAQ6N,EAAK,GACA,MAAnB/lB,EAAKqT,OAAO9V,GAAY,CACxB,MAAMsZ,EAAKmP,EAAKzoB,GAAK,IAAOsB,GAC5BgnB,GAAM3T,GAAI2E,GAAKqB,EAAQ6N,EAAK,GAC5BD,GAAM7T,GAAI4E,GAAKqB,EAAQ6N,EAAK,EAChC,MACI5N,EAAI5a,IAAMyoB,EAAKzoB,GAAK2a,EAAQ6N,EAAK,KAMjD,IAAK,IAAIxoB,EAAI,EAAGA,EAAI4a,EAAI/Z,OAAQb,IAC5B,GAAuB,MAAnByC,EAAKqT,OAAO9V,GAAY,CACxB,IAAIsZ,EAAKrE,GAAMsT,EAAKF,EAAIroB,GAAIsoB,EAAKD,EAAIroB,IAAMsB,GAAM,IACjD,KAAOgY,EAAI,GAAGA,GAAK,IACnB,KAAOA,GAAK,KAAKA,GAAK,IACtBsB,EAAI5a,GAAKsZ,CACb,MACIsB,EAAI5a,GAAK4a,EAAI5a,GAAKqoB,EAAIroB,GAI9B,OADAqO,GAAShN,EACF,IAAIgB,EAAMuY,EAAKnY,GAAM4L,MAAMA,EAAQ,OAAU,EAAIA,GAAO,IiCLnEqa,O/BmBgBhO,IACZ,MAAMnG,EA5DK,SAAUmG,GACrB,IAAIiO,EAAGC,EAAMC,EAAMC,EAEnB,GAAsB,KADtBpO,EAASA,EAAOvZ,IAAK0T,GAAM,IAAIxS,EAAMwS,KAC1BhU,QAEN+nB,EAAMC,GAAQnO,EAAOvZ,IAAK0T,GAAMA,EAAE9B,OACnC4V,EAAI,SAAUpQ,GACV,MAAMxF,EAAM,CAAC,EAAG,EAAG,GAAG5R,IAAKnB,GAAM4oB,EAAK5oB,GAAKuY,GAAKsQ,EAAK7oB,GAAK4oB,EAAK5oB,KAC/D,OAAO,IAAIqC,EAAM0Q,EAAK,MAC1B,OACG,GAAsB,IAAlB2H,EAAO7Z,QAEb+nB,EAAMC,EAAMC,GAAQpO,EAAOvZ,IAAK0T,GAAMA,EAAE9B,OACzC4V,EAAI,SAAUpQ,GACV,MAAMxF,EAAM,CAAC,EAAG,EAAG,GAAG5R,IACjBnB,IACI,EAAIuY,IAAM,EAAIA,GAAKqQ,EAAK5oB,GACzB,GAAK,EAAIuY,GAAKA,EAAIsQ,EAAK7oB,GACvBuY,EAAIA,EAAIuQ,EAAK9oB,IAErB,OAAO,IAAIqC,EAAM0Q,EAAK,MAC1B,OACG,GAAsB,IAAlB2H,EAAO7Z,OAAc,CAE5B,IAAIkoB,GACHH,EAAMC,EAAMC,EAAMC,GAAQrO,EAAOvZ,IAAK0T,GAAMA,EAAE9B,OAC/C4V,EAAI,SAAUpQ,GACV,MAAMxF,EAAM,CAAC,EAAG,EAAG,GAAG5R,IACjBnB,IACI,EAAIuY,IAAM,EAAIA,IAAM,EAAIA,GAAKqQ,EAAK5oB,GACnC,GAAK,EAAIuY,IAAM,EAAIA,GAAKA,EAAIsQ,EAAK7oB,GACjC,GAAK,EAAIuY,GAAKA,EAAIA,EAAIuQ,EAAK9oB,GAC3BuY,EAAIA,EAAIA,EAAIwQ,EAAK/oB,IAEzB,OAAO,IAAIqC,EAAM0Q,EAAK,MAC1B,CACJ,KAAO,MAAI2H,EAAO7Z,QAAU,GAkBxB,MAAM,IAAImoB,WAAW,mDAlBM,CAE3B,IAAIC,EAAMrP,EAAK5L,EACfib,EAAOvO,EAAOvZ,IAAK0T,GAAMA,EAAE9B,OAC3B/E,EAAI0M,EAAO7Z,OAAS,EACpB+Y,EArDU,SAAU5L,GACxB,IAAI4L,EAAM,CAAC,EAAG,GACd,IAAK,IAAI5Z,EAAI,EAAGA,EAAIgO,EAAGhO,IAAK,CACxB,IAAIkpB,EAAS,CAAC,GACd,IAAK,IAAIrI,EAAI,EAAGA,GAAKjH,EAAI/Y,OAAQggB,IAC7BqI,EAAOrI,IAAMjH,EAAIiH,IAAM,GAAKjH,EAAIiH,EAAI,GAExCjH,EAAMsP,CACV,CACA,OAAOtP,CACX,CA2CcuP,CAAUnb,GAChB2a,EAAI,SAAUpQ,GACV,MAAM9K,EAAI,EAAI8K,EACRxF,EAAM,CAAC,EAAG,EAAG,GAAG5R,IAAKnB,GACvBipB,EAAKnP,OACD,CAACiG,EAAKqJ,EAAIvI,IACNd,EAAMnG,EAAIiH,GAAKpT,IAAMO,EAAI6S,GAAKtI,GAAKsI,EAAIuI,EAAGppB,GAC9C,IAGR,OAAO,IAAIqC,EAAM0Q,EAAK,MAC1B,CACJ,CAEA,CACA,OAAO4V,CACX,CAGcD,CAAOhO,GAEjB,OADAnG,EAAEsG,MAAQ,IAAMA,GAAMtG,GACfA,G+BrBPsK,SACJ/C,OAAIA,GACAzZ,QACJqY,OAAIA,EACA2O,SzBhEW,CAAC7nB,EAAGqB,KAGfrB,EAAI,IAAIa,EAAMb,GACdqB,EAAI,IAAIR,EAAMQ,GACd,MAAMymB,EAAK9nB,EAAEkS,YACP6V,EAAK1mB,EAAE6Q,YACb,OAAO4V,EAAKC,GAAMD,EAAK,MAASC,EAAK,MAASA,EAAK,MAASD,EAAK,MyB0DjEE,axB3CW,CAACC,EAAMC,KAElBD,EAAO,IAAIpnB,EAAMonB,GACjBC,EAAK,IAAIrnB,EAAMqnB,GAEXD,EAAKpb,QAAU,IACfob,EAAOrV,EAAIsV,EAAID,EAAMA,EAAKpb,QAAS,QAEvC,MAAMsb,EAAShW,MAAO8V,EAAK7pB,OACrBgqB,EAAOjW,MAAO+V,EAAG9pB,OAGjBiqB,EACFF,GAAUvI,GACJuI,EACAA,EAASrqB,KAAKmS,IAAI2P,GAAcuI,EAjBhC,OAkBJG,EACFF,GAAQxI,GAAcwI,EAAOA,EAAOtqB,KAAKmS,IAAI2P,GAAcwI,EAnBrD,OAsBJG,EAASzqB,KAAKmS,IAAIqY,EAAM,KAAQxqB,KAAKmS,IAAIoY,EAAQ,KAEjDG,EAAQ1qB,KAAKmS,IAAIqY,EAAM,KAAQxqB,KAAKmS,IAAIoY,EAAQ,KAEhDI,EACF3qB,KAAKuS,IAAIiY,EAAOD,GA/BX,KAgCC,EACAA,EAASC,EA/BP,KAgCAC,EAhCA,KAiCAC,EAIZ,OAAe,KAFD1qB,KAAKuS,IAAIoY,GApCb,GAoC0B,EAAIA,EAAI,EAAIA,EAtCnC,KAsCkDA,EAtClD,OwBmDbC,U5B9DW,SACXC,EAAQ,IACRC,GAAY,IACZjT,EAAM,EACNsH,EAAQ,EACR4L,EAAY,CAAC,EAAG,IAEhB,IACIC,EADAjT,EAAK,EAEe,UAApBjX,EAAKiqB,GACLC,EAAKD,EAAU,GAAKA,EAAU,IAE9BC,EAAK,EACLD,EAAY,CAACA,EAAWA,IAE5B,MAAM9V,EAAI,SAAUgW,GAChB,MAAM/oB,EAAIG,IAAUwoB,EAAQ,KAAO,IAAMC,EAAYG,GAC/ClpB,EAAIoQ,GAAI4Y,EAAU,GAAKC,EAAKC,EAAO9L,GAEnC+L,GADW,IAAPnT,EAAWF,EAAI,GAAKoT,EAAQlT,EAAKF,GAC1B9V,GAAK,EAAIA,GAAM,EAC1BopB,EAAQ9V,GAAInT,GACZkpB,EAAQhW,GAAIlT,GAIlB,OAAO+B,EAAO5D,EAAS,CAAK,KAHlB0B,EAAImpB,IAAO,OAAWC,EAAQ,QAAUC,IAGb,KAF3BrpB,EAAImpB,IAAO,OAAWC,EAAQ,OAAUC,IAEJ,KADpCrpB,EAAImpB,GAAO,QAAWC,IACmB,IACvD,EAoDA,OAnDAlW,EAAE4V,MAAQ,SAAUxR,GAChB,OAAS,MAALA,EACOwR,GAEXA,EAAQxR,EACDpE,EACX,EACAA,EAAE6V,UAAY,SAAUxc,GACpB,OAAS,MAALA,EACOwc,GAEXA,EAAYxc,EACL2G,EACX,EACAA,EAAEkK,MAAQ,SAAU5Q,GAChB,OAAS,MAALA,EACO4Q,GAEXA,EAAQ5Q,EACD0G,EACX,EACAA,EAAE4C,IAAM,SAAUhJ,GACd,OAAS,MAALA,EACOgJ,GAGO,UAAd/W,EADJ+W,EAAMhJ,IAEFkJ,EAAKF,EAAI,GAAKA,EAAI,GACP,IAAPE,IACAF,EAAMA,EAAI,KAGdE,EAAK,EAEF9C,EACX,EACAA,EAAE8V,UAAY,SAAUlc,GACpB,OAAS,MAALA,EACOkc,GAEK,UAAZjqB,EAAK+N,IACLkc,EAAYlc,EACZmc,EAAKnc,EAAE,GAAKA,EAAE,KAEdkc,EAAY,CAAClc,EAAGA,GAChBmc,EAAK,GAEF/V,EACX,EACAA,EAAEsG,MAAQ,IAAMtX,EAAOsX,MAAMtG,GAC7BA,EAAE4C,IAAIA,GACC5C,CACX,E4BhBIoW,OvBnEW,SAAUnpB,EAAGqB,EAAG+nB,EAAK,EAAGC,EAAK,EAAGC,EAAK,GAGhD,IAAIC,EAAU,SAAUC,GACpB,OAAQ,IAAMA,GAAQ,EAAI1pB,GAC9B,EACI2pB,EAAU,SAAUC,GACpB,OAAQ,EAAI5pB,GAAK4pB,EAAO,GAC5B,EACA1pB,EAAI,IAAIa,EAAMb,GACdqB,EAAI,IAAIR,EAAMQ,GACd,MAAOya,EAAI6N,EAAIC,GAAMtqB,MAAM8b,KAAKpb,EAAEuR,QAC3BsY,EAAIC,EAAIC,GAAMzqB,MAAM8b,KAAK/Z,EAAEkQ,OAC5ByY,GAAQlO,EAAK+N,GAAM,EAGnBI,GAFKzW,GAAKvD,GAAI0Z,EAAI,GAAK1Z,GAAI2Z,EAAI,IAC1BpW,GAAKvD,GAAI6Z,EAAI,GAAK7Z,GAAI8Z,EAAI,KACZ,EACnBG,EAAI,IAAO,EAAI1W,GAAKvD,GAAIga,EAAM,IAAMha,GAAIga,EAAM,GAAKha,GAAI,GAAI,MAC3Dka,EAAMR,GAAM,EAAIO,GAChBE,EAAMN,GAAM,EAAII,GAChBG,EAAM7W,GAAKvD,GAAIka,EAAK,GAAKla,GAAI2Z,EAAI,IACjCU,EAAM9W,GAAKvD,GAAIma,EAAK,GAAKna,GAAI8Z,EAAI,IACjCQ,GAASF,EAAMC,GAAO,EACtBE,EAAUjB,EAAQ9V,GAAMmW,EAAIO,IAC5BM,EAAUlB,EAAQ9V,GAAMsW,EAAIK,IAC5BM,EAAMF,GAAW,EAAIA,EAAUA,EAAU,IACzCG,EAAMF,GAAW,EAAIA,EAAUA,EAAU,IACzCG,EACFva,GAAIqa,EAAMC,GAAO,KAAOD,EAAMC,EAAM,KAAO,GAAKD,EAAMC,GAAO,EAC3DE,EACF,EACA,IAAO1X,GAAIsW,EAAQmB,EAAQ,KAC3B,IAAOzX,GAAIsW,EAAQ,EAAImB,IACvB,IAAOzX,GAAIsW,EAAQ,EAAImB,EAAQ,IAC/B,GAAMzX,GAAIsW,EAAQ,EAAImB,EAAQ,KAClC,IAAIE,EAAUH,EAAMD,EACpBI,EACIza,GAAIya,IAAY,IACVA,EACAH,GAAOD,EACLI,EAAU,IACVA,EAAU,IACtBA,EAAU,EAAItX,GAAK6W,EAAMC,GAAOpX,GAAIuW,EAAQqB,GAAW,GACvD,MAAMC,EAASlB,EAAK/N,EACdkP,EAAUV,EAAMD,EAChBY,EAAK,EAAK,KAAQhb,GAAI+Z,EAAO,GAAI,GAAMxW,GAAK,GAAKvD,GAAI+Z,EAAO,GAAI,IAChEkB,EAAK,EAAI,KAAQX,EACjBY,EAAK,EAAI,KAAQZ,EAAQM,EACzBO,EAAa,GAAKvL,IAAK5P,IAAK2a,EAAQ,KAAO,GAAI,IAE/CS,IADK,EAAI7X,GAAKvD,GAAIsa,EAAO,IAAMta,GAAIsa,EAAO,GAAKta,GAAI,GAAI,MAC5CiD,GAAI,EAAIuW,EAAQ2B,IAC3B9O,EAAS9I,GACXvD,GAAI8a,GAAU3B,EAAK6B,GAAK,GACpBhb,GAAI+a,GAAW3B,EAAK6B,GAAK,GACzBjb,GAAI6a,GAAWxB,EAAK6B,GAAK,GACzBE,GAAML,GAAW3B,EAAK6B,KAAQJ,GAAWxB,EAAK6B,KAEtD,OAAOttB,GAAI,EAAGD,GAAI,IAAK0e,GAC3B,EuBUIgP,SCpEW,SAAUtrB,EAAGqB,EAAGJ,EAAO,OAGlCjB,EAAI,IAAIa,EAAMb,GACdqB,EAAI,IAAIR,EAAMQ,GACd,MAAMymB,EAAK9nB,EAAEiP,IAAIhO,GACX8mB,EAAK1mB,EAAE4N,IAAIhO,GACjB,IAAIsqB,EAAS,EACb,IAAK,IAAI/sB,KAAKspB,EAAI,CACd,MAAM/M,GAAK+M,EAAGtpB,IAAM,IAAMupB,EAAGvpB,IAAM,GACnC+sB,GAAUxQ,EAAIA,CAClB,CACA,OAAOjd,KAAK0V,KAAK+X,EACrB,EDwDI7qB,QACA6R,YAAaK,EACbqI,UACArI,MACJsL,O3BvEe,KACX,IAAIsN,EAAO,IACX,IAAK,IAAIhtB,EAAI,EAAGA,EAAI,EAAGA,IACnBgtB,GAPO,mBAOQlX,OAAOiC,GAAiB,GAAX2H,OAEhC,OAAO,IAAIrd,EAAM2qB,EAAM,Q2BmEvBnS,SACAyG,UACA2L,MtB7EW,IAAItsB,KACf,IAEI,OADA,IAAI0B,KAAS1B,IACN,CAEX,CAAE,MAAO2mB,GACL,OAAO,CACX;;;;;;;8BwBEC4F,OAAOC,eACVD,OAAOC,aACED,OAAOE,gBACdF,OAAOG,oBACPH,OAAOI,iBACPJ,OAAOK,eACP,WACE,IAAKL,OAAOM,cAAgBN,OAAOO,iBACjC,OAAO,KAGT,IAAIC,EAAY,MAACxsB,GACbysB,EAAU,uBA0Cd,OA7BAT,OAAOO,iBAAiB,UAAW,SAAgCG,GAGjE,GAAwB,iBAAbA,EAAIhO,MACXgO,EAAIhO,KAAKpS,OAAO,EAAGmgB,MAAoBA,EAD3C,CAMAC,EAAIC,2BAEJ,IAAIC,EAAKpgB,SAASkgB,EAAIhO,KAAKpS,OAAOmgB,IAAiB,IAC9CD,EAAUI,KAIfJ,EAAUI,KACVJ,EAAUI,QAAM5sB,EAVxB,CAWA,GAAS,GAGHgsB,OAAOa,eAAiB,SAA2BD,GAC5CJ,EAAUI,KAIfJ,EAAUI,QAAM5sB,EACxB,EAnC2B,SAAyB8sB,GAC5C,IAAIF,EAAKJ,EAAU7sB,OAInB,OAHA6sB,EAAUtqB,KAAK4qB,GACfd,OAAOM,YAAYG,EAAUG,EAAGttB,SAAS,IAAK,KAEvCstB,CACf,CAgCK,CAjDD,IAmDA,SAA+BG,GAC7Bf,OAAOgB,WAAWD,EAAI,EAC5B,GAIKf,OAAOa,iBACVb,OAAOa,eACEb,OAAOiB,kBACdjB,OAAOkB,sBACPlB,OAAOmB,mBACPnB,OAAOoB,iBAGP,SAAiCC,GAC/BrB,OAAOsB,aAAaD,EAC1B,GAIA,SAAWE,GAET,IAAIC,EAAe,WACjB,IAAIC,EAASC,SAASC,cAAc,UACpC,IAAKF,IAAWA,EAAOG,WACrB,OAAO,EAGT,IAAIC,EAAMJ,EAAOG,WAAW,MAC5B,SAAKC,GAGAA,EAAIC,cAGJD,EAAIE,UAIJnuB,MAAMP,UAAU2uB,MAGhBpuB,MAAMP,UAAU6C,KAKzB,CAzBiB,GA6BX+rB,EAAc,WAChB,GAAKT,EAAL,CAYA,IARA,IAMIU,EAAUC,EANVN,EAAMH,SAASC,cAAc,UAAUC,WAAW,MAGlDQ,EAAO,GAKJA,GAAM,CAEX,GADAP,EAAIQ,KAAOD,EAAK9uB,SAAS,IAAM,gBAC1BuuB,EAAIS,YAAY,KAAUC,QAAUL,GACpCL,EAAIS,YAAY,KAAU,QAAMH,EACnC,OAAQC,EAAO,EAGjBF,EAAWL,EAAIS,YAAY,KAAUC,MACrCJ,EAASN,EAAIS,YAAY,KAAKC,MAE9BH,GACN,CAEI,OAAO,CAvBX,CAwBG,CA3BiB,GAyCdI,EAAe,SAAuB1tB,GACxC,IAAK,IAAI6e,EAAGrhB,EAAGQ,EAAIgC,EAAInB,OAAQb,GAC7B6gB,EAAIvhB,KAAKyY,MAAMzY,KAAKogB,SAAW1f,GAC/BR,EAAIwC,IAAMhC,GACVgC,EAAIhC,GAAKgC,EAAI6e,GACb7e,EAAI6e,GAAKrhB,EAEX,OAAOwC,CACX,EAEMusB,EAAQ,CAAA,EACRoB,EAAY,SAAoBC,EAAUC,GAC5C,GAAKnB,EAAL,CAIA,IAAIoB,EAAUxwB,KAAKyY,MAAMzY,KAAKogB,SAAWqQ,KAAKC,OAEzClvB,MAAM0Y,QAAQoW,KACjBA,EAAW,CAACA,IAGdA,EAASpa,QAAQ,SAAU4T,EAAIppB,GAC7B,GAAkB,iBAAPopB,GAET,GADAwG,EAAS5vB,GAAK4uB,SAASqB,eAAe7G,IACjCwG,EAAS5vB,GACZ,MAAM,IAAIiD,MAAM,+CAEb,IAAKmmB,EAAG8G,UAAY9G,EAAG+G,YAC5B,MAAM,IAAIltB,MAAM,2DAExB,GAGI,IAAImtB,EAAW,CACbC,KAAM,GACNC,WAAY,6FAEZC,WAAY,SACZC,MAAO,cACPC,QAAS,EACTC,aAAc,EACdC,aAAa,EACbC,gBAAiB,OAEjBC,SAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbC,OAAQ,KAERC,UAAU,EACVC,UAAW,oBACXC,aAAc,GAEdC,KAAM,EACNC,eAAgB,EAChBC,MAAO,WAAiB,EAExBC,aAAcjyB,KAAKgC,GAAK,EACxBkwB,YAAalyB,KAAKgC,GAAK,EACvBmwB,cAAe,EAEfC,SAAS,EACTC,YAAa,GAEbC,MAAO,SACPC,YAAa,IAEbvV,QAAS,KAETwV,MAAO,KACPC,MAAO,MAGT,GAAIlC,EACF,IAAK,IAAIhQ,KAAOgQ,EACVhQ,KAAOuQ,IACTA,EAASvQ,GAAOgQ,EAAQhQ,IAM9B,GAAqC,mBAA1BuQ,EAASM,aAA6B,CAC/C,IAAIsB,EAAS5B,EAASM,aACtBN,EAASM,aAAe,SAAuBuB,GAC7C,OAAOA,EAAKD,CACpB,CACA,CAGI,GAA8B,mBAAnB5B,EAASwB,MAClB,OAAQxB,EAASwB,OACf,IAAK,SAEL,QAEExB,EAASwB,MAAQ,SACjB,MAEF,IAAK,WACHxB,EAASwB,MAAQ,SAAwBM,GACvC,OAAO,EAAI5yB,KAAKoV,IAAIwd,EAChC,EACU,MAWF,IAAK,UAIH9B,EAASwB,MAAQ,SAAsBM,GACrC,IAAIC,EAAaD,GAAS,EAAI5yB,KAAKgC,GAAK,GACxC,OAAO,GAAKhC,KAAKqV,IAAIwd,GAAc7yB,KAAKoV,IAAIyd,GACxD,EACU,MAEF,IAAK,SAGH/B,EAASwB,MAAQ,SAAsBM,GACrC,OAAO5yB,KAAKF,IACV,EAAIE,KAAKuS,IAAIvS,KAAKqV,IAAIud,IACtB,EAAI5yB,KAAKuS,IAAIvS,KAAKoV,IAAIwd,IAEpC,EACU,MAEF,IAAK,mBAIH9B,EAASwB,MAAQ,SAAwBM,GACvC,IAAIC,EAAaD,GAAS,EAAI5yB,KAAKgC,GAAK,GACxC,OAAO,GAAKhC,KAAKqV,IAAIwd,GACT7yB,KAAK0V,KAAK,GAAK1V,KAAKoV,IAAIyd,GAChD,EACU,MAEF,IAAK,WACL,IAAK,mBACH/B,EAASwB,MAAQ,SAAwBM,GACvC,IAAIC,GAAcD,EAAkB,EAAV5yB,KAAKgC,GAAS,IAAM,EAAIhC,KAAKgC,GAAK,GAC5D,OAAO,GAAKhC,KAAKqV,IAAIwd,GACT7yB,KAAK0V,KAAK,GAAK1V,KAAKoV,IAAIyd,GAChD,EACU,MAEF,IAAK,WACH/B,EAASwB,MAAQ,SAAwBM,GACvC,IAAIC,GAAcD,EAAQ,OAAU,EAAI5yB,KAAKgC,GAAK,GAClD,OAAO,GAAKhC,KAAKqV,IAAIwd,GACT,QAAW7yB,KAAKoV,IAAIyd,GAC5C,EACU,MAEF,IAAK,OACH/B,EAASwB,MAAQ,SAAoBM,GACnC,IAAIC,GAAcD,EAAQ,OAAU,EAAI5yB,KAAKgC,GAAK,IAClD,OAAK4wB,EAAQ,OAAU,EAAI5yB,KAAKgC,GAAK,GAAM,EAAIhC,KAAKgC,GAAK,IAAO,EACvD,GAAKhC,KAAKqV,IAAK,EAAIrV,KAAKgC,GAAK,GAAM6wB,GAC9B,QAAU7yB,KAAKoV,IAAK,EAAIpV,KAAKgC,GAAK,GAAM6wB,IAE7C,GAAK7yB,KAAKqV,IAAIwd,GACT,QAAU7yB,KAAKoV,IAAIyd,GAE7C,EAMI/B,EAASS,SAAWvxB,KAAKD,IAAIC,KAAKyY,MAAMqY,EAASS,UAAW,GAG5D,IASIuB,EACFC,EAAKC,EACLC,EACAC,EAGEC,EAGAC,EA4BAC,EA9CA9kB,EAAIuiB,EAASS,SACb+B,EAAgB/kB,EAAIuiB,EAASe,aAG7B0B,EAAgBvzB,KAAKuS,IAAIue,EAASoB,YAAcpB,EAASmB,aACzDE,EAAgBnyB,KAAKuS,IAAIvS,KAAKyY,MAAMqY,EAASqB,gBAC7CF,EAAcjyB,KAAKF,IAAIgxB,EAASoB,YAAapB,EAASmB,aAmB1D,OAAQnB,EAASI,OACf,IAAK,cACHkC,EAAe,WACb,OAAOI,EAAe,GAAI,GACpC,EACQ,MAEF,IAAK,eACHJ,EAAe,WACb,OAAOI,EAAe,GAAI,GACpC,EACQ,MAEF,QACgC,mBAAnB1C,EAASI,QAClBkC,EAAetC,EAASI,OAOK,mBAAxBJ,EAASG,aAClBoC,EAAoBvC,EAASG,YAI/B,IAAIwC,EAAiB,KACW,mBAArB3C,EAAS9T,UAClByW,EAAiB3C,EAAS9T,SAI5B,IAEI0W,EAFAC,GAAc,EACdC,EAAW,GAGXC,EACJ,SAAyCvF,GACvC,IAEIwF,EACAC,EAHA1E,EAASf,EAAI0F,cACbC,EAAO5E,EAAO6E,wBAId5F,EAAI6F,SACNL,EAAUxF,EAAI6F,QAAQ,GAAGL,QACzBC,EAAUzF,EAAI6F,QAAQ,GAAGJ,UAEzBD,EAAUxF,EAAIwF,QACdC,EAAUzF,EAAIyF,SAGhB,IAAIK,EAAcN,EAAUG,EAAKtV,KAC7B0V,EAASD,EAAc,EAAI,EAAIA,EAC/BE,EAASP,EAAUE,EAAKxU,IAExBvf,EAAIF,KAAKyY,MAAM4b,GAAWhF,EAAOc,MAAQ8D,EAAK9D,OAAU,GAAK5hB,GAC7DiD,EAAIxR,KAAKyY,MAAM6b,GAAWjF,EAAOkF,OAASN,EAAKM,QAAW,GAAKhmB,GAEnE,OAAKqlB,EAAS1zB,GAIP0zB,EAAS1zB,GAAGsR,GAHV,IAIf,EAEQgjB,EAAiB,SAAyBlG,GAC5C,IAAImG,EAAOZ,EAA+BvF,GAEtCoF,IAAYe,IAIhBf,EAAUe,EACLA,EAML3D,EAAS0B,MAAMiC,EAAKC,KAAMD,EAAKE,UAAWrG,GALxCwC,EAAS0B,WAAM5wB,OAAWA,EAAW0sB,GAM7C,EAEQsG,EAAiB,SAAyBtG,GAC5C,IAAImG,EAAOZ,EAA+BvF,GACrCmG,IAIL3D,EAAS2B,MAAMgC,EAAKC,KAAMD,EAAKE,UAAWrG,GAC1CA,EAAIuG,iBACV,EAGQC,EAAiB,GACjBC,EAAoB,SAA4BC,GAClD,GAAIF,EAAeE,GACjB,OAAOF,EAAeE,GAIxB,IAAIjI,EAAa,EAATiI,EAGJ/b,EAAI8T,EACJkI,EAAS,GAMb,IAJe,IAAXD,GACFC,EAAOnxB,KAAK,CAACmvB,EAAO,GAAIA,EAAO,GAAI,IAG9Bha,KAAK,CAEV,IAAIic,EAAK,EACc,WAAnBpE,EAASwB,QACX4C,EAAKpE,EAASwB,MAAMrZ,EAAI8T,EAAI,EAAI/sB,KAAKgC,KAIvCizB,EAAOnxB,KAAK,CACVmvB,EAAO,GAAK+B,EAASE,EAAKl1B,KAAKqV,KAAK4D,EAAI8T,EAAI,EAAI/sB,KAAKgC,IACrDixB,EAAO,GAAK+B,EAASE,EAAKl1B,KAAKoV,KAAK6D,EAAI8T,EAAI,EAAI/sB,KAAKgC,IACnD8uB,EAASyB,YACXtZ,EAAI8T,EAAI,EAAI/sB,KAAKgC,IAC3B,CAGM,OADA8yB,EAAeE,GAAUC,EAClBA,CACb,EAGQE,EAAa,WACf,OAASrE,EAASiB,eAAiB,IAChC,IAAKtB,MAAQ2E,UAAYjC,EAAarC,EAASiB,cACxD,EAqWQsD,EAAa,SAAqBn1B,EAAGsR,EAAGmgB,EAAUgD,EAAWD,GAC3Dx0B,GAAK6yB,GAAOvhB,GAAKwhB,GAAO9yB,EAAI,GAAKsR,EAAI,IAIzCshB,EAAK5yB,GAAGsR,IAAK,EAETmgB,GACQrB,EAAS,GAAGd,WAAW,MAC7B8F,SAASp1B,EAAIqO,EAAGiD,EAAIjD,EAAG+kB,EAAeA,GAGxCK,IACFC,EAAS1zB,GAAGsR,GAAK,CAAEkjB,KAAMA,EAAMC,UAAWA,IAElD,EA6CQY,EAAU,SAASA,EAASb,GAC9B,IAAIc,EAAMC,EAAQC,EACdl0B,MAAM0Y,QAAQwa,IAChBc,EAAOd,EAAK,GACZe,EAASf,EAAK,KAEdc,EAAOd,EAAKc,KACZC,EAASf,EAAKe,OACdC,EAAahB,EAAKgB,YAEpB,IAAIC,EAvayB,IAAzB7E,EAASuB,aAITryB,KAAKogB,SAAW0Q,EAASuB,YAHpB,EAOa,IAAlBkB,EACKtB,EAGLE,EAAgB,EAEXF,EACLjyB,KAAKyY,MAAMzY,KAAKogB,SAAW+R,GAC3BoB,GAAiBpB,EAAgB,GAE5BF,EAAcjyB,KAAKogB,SAAWmT,EAuZnCqC,EA/wBe,SAAUlB,GAC/B,GAAIlzB,MAAM0Y,QAAQwa,GAAO,CACvB,IAAImB,EAAWnB,EAAKj0B,QAGpB,OADAo1B,EAASC,OAAO,EAAG,GACZD,CACb,CACM,MAAO,EAEb,CAswB2BE,CAAiBrB,GAGlCD,EAtZY,SAAsBe,EAAMC,EAAQE,EAAWC,GAK/D,IAAII,EAAWlF,EAASM,aAAaqE,GACrC,GAAIO,GAAYlF,EAASK,QACvB,OAAO,EAMT,IAYIF,EAZAgF,EAAK,EACLD,EAAWnG,IACboG,EAAK,WAEH,IADA,IAAIA,EAAK,EACFA,EAAKD,EAAWnG,GACrBoG,GAAM,EAER,OAAOA,CACR,CANI,IAYLhF,EADEoC,EACWA,EAAkBmC,EAAMC,EAAQO,EAAUJ,GAE1C9E,EAASG,WAGxB,IAAIiF,EAAU5G,SAASC,cAAc,UACjC4G,EAAOD,EAAQ1G,WAAW,KAAM,CAAE4G,oBAAoB,IAE1DD,EAAKlG,KAAOgB,EAAa,KACtB+E,EAAWC,GAAI/0B,SAAS,IAAM,MAAQ4vB,EAASE,WAGlD,IAAIqF,EAAKF,EAAKjG,YAAYsF,GAAMrF,MAAQ8F,EACpCK,EAAKt2B,KAAKD,IAAIi2B,EAAWC,EAC3BE,EAAKjG,YAAY,KAAKC,MACtBgG,EAAKjG,YAAY,KAAUC,OACzB8F,EAIAM,EAAWF,EAAU,EAALC,EAChBE,EAAiB,EAALF,EACZG,EAAMz2B,KAAK02B,KAAKH,EAAWhoB,GAC3BooB,EAAM32B,KAAK02B,KAAKF,EAAYjoB,GAChCgoB,EAAWE,EAAMloB,EACjBioB,EAAYG,EAAMpoB,EAMlB,IAAIqoB,GAAmBP,EAAK,EAIxBQ,EAAwB,IAALP,EAGnBQ,EAAM92B,KAAK02B,MAAMH,EAAWv2B,KAAKuS,IAAIvS,KAAKoV,IAAIugB,IAC7Ba,EAAYx2B,KAAKuS,IAAIvS,KAAKqV,IAAIsgB,KAAepnB,GAC9DwoB,EAAM/2B,KAAK02B,MAAMH,EAAWv2B,KAAKuS,IAAIvS,KAAKqV,IAAIsgB,IAC7Ba,EAAYx2B,KAAKuS,IAAIvS,KAAKoV,IAAIugB,KAAepnB,GAC9D4hB,EAAQ4G,EAAMxoB,EACdgmB,EAASuC,EAAMvoB,EAEnB2nB,EAAQc,aAAa,QAAS7G,GAC9B+F,EAAQc,aAAa,SAAUzC,GAU/B4B,EAAK5a,MAAM,EAAI0a,EAAI,EAAIA,GACvBE,EAAKc,UAAU9G,EAAQ8F,EAAK,EAAG1B,EAAS0B,EAAK,GAC7CE,EAAKe,QAAQvB,GAIbQ,EAAKlG,KAAOgB,EAAa,KACtB+E,EAAWC,GAAI/0B,SAAS,IAAM,MAAQ4vB,EAASE,WAQlDmF,EAAKgB,UAAY,OACjBhB,EAAKiB,aAAe,SACpBjB,EAAKxG,SACH6F,EAAMoB,EAAkBX,GACvBY,EAA6B,GAAXb,GAAkBC,GAIvC,IAAIoB,EAAYlB,EAAKzG,aAAa,EAAG,EAAGS,EAAOoE,GAAQjU,KAEvD,GAAI6U,IACF,OAAO,EAiBT,IAJA,IAEImC,EAAIp3B,EAAGsR,EAFP+lB,EAAW,GACXC,EAAKT,EAELU,EAAS,CAACX,EAAM,EAAGC,EAAM,EAAGD,EAAM,EAAGC,EAAM,GACxCS,KAEL,IADAF,EAAKR,EACEQ,KAAM,CACX9lB,EAAIjD,EAEJmpB,EAAgB,KAAOlmB,KAErB,IADAtR,EAAIqO,EACGrO,KACL,GAAIm3B,EACc,IADFC,EAAK/oB,EAAIiD,GAAK2e,GAC3BqH,EAAKjpB,EAAIrO,IAAU,GAAI,CACxBq3B,EAASzzB,KAAK,CAAC0zB,EAAIF,IAEfE,EAAKC,EAAO,KACdA,EAAO,GAAKD,GAEVA,EAAKC,EAAO,KACdA,EAAO,GAAKD,GAEVF,EAAKG,EAAO,KACdA,EAAO,GAAKH,GAEVA,EAAKG,EAAO,KACdA,EAAO,GAAKH,GAOd,MAAMI,CACtB,CAOA,CAcM,MAAO,CACLzB,GAAIA,EACJsB,SAAUA,EACVE,OAAQA,EACRE,GAAIZ,EACJa,GAAId,EACJF,gBAAiBA,EACjBC,gBAAiBA,EACjBgB,cAAexB,EACfyB,eAAgBxB,EAChBN,SAAUA,EAElB,CAyNiB+B,CAAYvC,EAAMC,EAAQE,EAAWC,GAGhD,IAAKnB,EACH,OAAO,EAGT,GAAIU,IACF,OAAO,EAMT,IAAKrE,EAASU,iBAAmBV,EAASW,YAAa,CACrD,IAAIgG,EAAShD,EAAKgD,OAClB,GAAKA,EAAO,GAAKA,EAAO,GAAK,EAAK1E,GAC/B0E,EAAO,GAAKA,EAAO,GAAK,EAAKzE,EAC9B,OAAO,CAEjB,CA6BM,IAzBA,IAAI1kB,EAAI4kB,EAAY,EAEhB8E,EAAsB,SAAUC,GAClC,IAAIT,EAAKx3B,KAAKyY,MAAMwf,EAAI,GAAKxD,EAAKkD,GAAK,GACnCL,EAAKt3B,KAAKyY,MAAMwf,EAAI,GAAKxD,EAAKmD,GAAK,GAMvC,OALSnD,EAAKkD,GACLlD,EAAKmD,KApPD,SAAqBJ,EAAIF,EAAIK,EAAIC,EAAIL,GAIpD,IADA,IAAI72B,EAAI62B,EAASh2B,OACVb,KAAK,CACV,IAAIw3B,EAAKV,EAAKD,EAAS72B,GAAG,GACtBy3B,EAAKb,EAAKC,EAAS72B,GAAG,GAE1B,GAAIw3B,GAAMnF,GAAOoF,GAAMnF,GAAOkF,EAAK,GAAKC,EAAK,GAC3C,IAAKrH,EAASU,eACZ,OAAO,OAKX,IAAKsB,EAAKoF,GAAIC,GACZ,OAAO,CAEjB,CACM,OAAO,CACb,CAoOaC,CAAWZ,EAAIF,EAAIK,EAAIC,EAAInD,EAAK8C,YAjO1B,SAAmBC,EAAIF,EAAI7C,EAAMe,EAAMC,EAAQjI,EAAUoF,EAAO+C,EAAWD,EAAYE,GACpG,IACI1E,EAQAD,EAOAjU,EAhBAgZ,EAAWvB,EAAKuB,SAGlB9E,EADEkC,EACMA,EAAaoC,EAAMC,EAAQO,EAAUxI,EAAUoF,EAAOgD,GAEtD9E,EAASI,MAMjBD,EADEoC,EACWA,EAAkBmC,EAAMC,EAAQO,EAAUJ,GAE1C9E,EAASG,WAKtBjU,EADEyW,EACQA,EAAe+B,EAAMC,EAAQO,EAAUJ,GAEvC9E,EAAS9T,QAGrBsT,EAASpa,QAAQ,SAAU4T,GACzB,GAAIA,EAAG0F,WAAY,CACjB,IAAIC,EAAM3F,EAAG0F,WAAW,MACpByG,EAAKxB,EAAKwB,GAGdxG,EAAI4I,OACJ5I,EAAIlU,MAAM,EAAI0a,EAAI,EAAIA,GAEtBxG,EAAIQ,KAAOgB,EAAa,KACZ+E,EAAWC,GAAI/0B,SAAS,IAAM,MAAQ4vB,EAASE,WAC3DvB,EAAI0H,UAAYjG,EAIhBzB,EAAIwH,WACDO,EAAK/C,EAAKkD,GAAK,GAAKppB,EAAI0nB,GACxBqB,EAAK7C,EAAKmD,GAAK,GAAKrpB,EAAI0nB,GAGT,IAAdN,GACFlG,EAAIyH,QAAQvB,GAUdlG,EAAI2H,aAAe,SACnB3H,EAAIE,SACF6F,EAAMf,EAAKmC,gBAAkBX,GAC5BxB,EAAKoC,gBAA6B,GAAXb,GAAkBC,GAQ5CxG,EAAI6I,SACd,KAAe,CAEL,IAAIC,EAAOjJ,SAASC,cAAc,QAC9BiJ,EAAgB,GACpBA,EAAgB,WAAc7C,EAAY31B,KAAKgC,GAAK,IAAO,QAC3C,IAAZyyB,EAAKwB,KACPuC,GACE,eAAkB/D,EAAKoD,cAAgB,EAAvC,aACY,EAAIpD,EAAKwB,GAAM,KAE/B,IAAIwC,EAAa,CACfC,SAAU,WACVC,QAAS,QACT1I,KAAMgB,EAAa,IAChB+E,EAAWvB,EAAKwB,GAAM,MAAQnF,EAASE,WAC1CrS,MAAQ6Y,EAAK/C,EAAKkD,GAAK,GAAKppB,EAAIkmB,EAAKmC,gBAAmB,KACxDnX,KAAO6X,EAAK7C,EAAKmD,GAAK,GAAKrpB,EAAIkmB,EAAKoC,gBAAmB,KACvD1G,MAAOsE,EAAKoD,cAAgB,KAC5BtD,OAAQE,EAAKqD,eAAiB,KAC9Bc,WAAY5C,EAAW,KACvB6C,WAAY,SACZC,UAAWN,EACXO,gBAAiBP,EACjBQ,YAAaR,EACbS,gBAAiB,UACjBC,sBAAuB,UACvBC,kBAAmB,WAMrB,IAAK,IAAIC,KAJLlI,IACFuH,EAAWvH,MAAQA,GAErBqH,EAAKc,YAAc7D,EACCiD,EAClBF,EAAKe,MAAMF,GAAWX,EAAWW,GAEnC,GAAI1D,EACF,IAAK,IAAI6D,KAAa7D,EACpB6C,EAAKvB,aAAauC,EAAW7D,EAAW6D,IAGxCvc,IACFub,EAAKiB,WAAaxc,GAEpB8M,EAAG+G,YAAY0H,EACzB,CACA,EACA,CAqHQkB,CAASjC,EAAIF,EAAI7C,EAAMe,EAAMC,EAC1BvC,EAAY5kB,EAAI2pB,EAAI,GAAItC,EAAWD,EAAYE,GAhGrC,SAAqB4B,EAAIF,EAAIK,EAAIC,EAAInD,EAAMC,GAC1D,IAEIjF,EAOAkF,EATA4C,EAAW9C,EAAK8C,SAChB5F,EAAWb,EAASa,SASxB,GAPIA,KACFlC,EAAMa,EAAS,GAAGd,WAAW,OACzB6I,OACJ5I,EAAI0H,UAAYrG,EAASc,WAIvB+B,EAAa,CACf,IAAI8D,EAAShD,EAAKgD,OAClB9C,EAAY,CACVz0B,GAAIs3B,EAAKC,EAAO,IAAMlpB,EACtBiD,GAAI8lB,EAAKG,EAAO,IAAMlpB,EACtBqa,GAAI6O,EAAO,GAAKA,EAAO,GAAK,GAAKlpB,EACjCM,GAAI4oB,EAAO,GAAKA,EAAO,GAAK,GAAKlpB,EAE3C,CAGM,IADA,IAAI7N,EAAI62B,EAASh2B,OACVb,KAAK,CACV,IAAIw3B,EAAKV,EAAKD,EAAS72B,GAAG,GACtBy3B,EAAKb,EAAKC,EAAS72B,GAAG,GAEtBw3B,GAAMnF,GAAOoF,GAAMnF,GAAOkF,EAAK,GAAKC,EAAK,GAI7C9C,EAAW6C,EAAIC,EAAIxG,EAAUgD,EAAWD,EAChD,CAEU/C,GACFlC,EAAI6I,SAEZ,CA+DQoB,CAAWlC,EAAIF,EAAIK,EAAIC,EAAInD,EAAMC,IAG1B,EACf,EAEapmB,KAAK,CACV,IAAI2mB,EAASF,EAAkB7B,EAAY5kB,GAa3C,GAXIwiB,EAASsB,UACX6C,EAAS,GAAG0E,OAAO1E,GACnB7E,EAAa6E,IAOHA,EAAOrF,KAAKoI,GAItB,OAAO,CAEjB,CACM,QAAIlH,EAASW,cACPjwB,MAAM0Y,QAAQwa,GAChBA,EAAK,GAAe,EAAVA,EAAK,GAAS,EAExBA,EAAKe,OAAuB,EAAdf,EAAKe,OAAa,EAE3BF,EAAQb,GAIvB,EAIQkF,EAAY,SAAoB94B,EAAM+4B,EAAYC,GACpD,GAAID,EACF,OAAQvJ,EAASV,KAAK,SAAU9F,GAC9B,IAAIiQ,EAAQ,IAAIC,YAAYl5B,EAAM,CAChCm5B,OAAQH,GAAW,CAAA,IAErB,OAAQhQ,EAAGoQ,cAAcH,EACnC,EAAW72B,MAEHotB,EAASpa,QAAQ,SAAU4T,GACzB,IAAIiQ,EAAQ,IAAIC,YAAYl5B,EAAM,CAChCm5B,OAAQH,GAAW,CAAA,IAErBhQ,EAAGoQ,cAAcH,EAC3B,EAAW72B,KAEX,GAGgB,WAGV,IAAImsB,EAASiB,EAAS,GAEtB,GAAIjB,EAAOG,WACTuD,EAAM/yB,KAAK02B,KAAKrH,EAAOc,MAAQ5hB,GAC/BykB,EAAMhzB,KAAK02B,KAAKrH,EAAOkF,OAAShmB,OAC3B,CACL,IAAI0lB,EAAO5E,EAAO6E,wBAClBnB,EAAM/yB,KAAK02B,KAAKzC,EAAK9D,MAAQ5hB,GAC7BykB,EAAMhzB,KAAK02B,KAAKzC,EAAKM,OAAShmB,EACtC,CAIM,GAAKqrB,EAAU,kBAAkB,GAAjC,CAgBA,IAAIpC,EAAIF,EAAI52B,EAiGRy5B,EAAiBC,EAhGrB,GAZAnH,EAAUnC,EAAe,OACrB,CAACA,EAASY,OAAO,GAAKnjB,EAAGuiB,EAASY,OAAO,GAAKnjB,GAC9C,CAACwkB,EAAM,EAAGC,EAAM,GAGpBE,EAAYlzB,KAAKyY,MAAMzY,KAAK0V,KAAKqd,EAAMA,EAAMC,EAAMA,IAInDF,EAAO,IAGFzD,EAAOG,YAAcsB,EAASO,YAgBjC,IAfAf,EAASpa,QAAQ,SAAU4T,GACzB,GAAIA,EAAG0F,WAAY,CACjB,IAAIC,EAAM3F,EAAG0F,WAAW,MACxBC,EAAI0H,UAAYrG,EAASQ,gBACzB7B,EAAI4K,UAAU,EAAG,EAAGtH,GAAOxkB,EAAI,GAAIykB,GAAOzkB,EAAI,IAC9CkhB,EAAI6F,SAAS,EAAG,EAAGvC,GAAOxkB,EAAI,GAAIykB,GAAOzkB,EAAI,GACzD,MACYub,EAAGuP,YAAc,GACjBvP,EAAGwP,MAAMhI,gBAAkBR,EAASQ,gBACpCxH,EAAGwP,MAAMZ,SAAW,UAEhC,GAGQlB,EAAKzE,EACEyE,KAGL,IAFA1E,EAAK0E,GAAM,GACXF,EAAKtE,EACEsE,KACLxE,EAAK0E,GAAIF,IAAM,MAGd,CAGL,IAAIgD,EAAOhL,SAASC,cAAc,UAAUC,WAAW,MAEvD8K,EAAKnD,UAAYrG,EAASQ,gBAC1BgJ,EAAKhF,SAAS,EAAG,EAAG,EAAG,GACvB,IASIp1B,EAAGsR,EATH+oB,EAAUD,EAAK5K,aAAa,EAAG,EAAG,EAAG,GAAGpP,KAKxC+W,EACFhI,EAAOG,WAAW,MAAME,aAAa,EAAG,EAAGqD,EAAMxkB,EAAGykB,EAAMzkB,GAAG+R,KAI/D,IAFAkX,EAAKzE,EAEEyE,KAGL,IAFA1E,EAAK0E,GAAM,GACXF,EAAKtE,EACEsE,KAAM,CACX9lB,EAAIjD,EAEJmpB,EAAgB,KAAOlmB,KAErB,IADAtR,EAAIqO,EACGrO,KAEL,IADAQ,EAAI,EACGA,KACL,GAAI22B,EAC2B,IADfC,EAAK/oB,EAAIiD,GAAKuhB,EAAMxkB,GACpBipB,EAAKjpB,EAAIrO,IAAUQ,KAAO65B,EAAQ75B,GAAI,CACpDoyB,EAAK0E,GAAIF,IAAM,EACf,MAAMI,CAC1B,EAIiC,IAAjB5E,EAAK0E,GAAIF,KACXxE,EAAK0E,GAAIF,IAAM,EAE7B,CAGQD,EAAYiD,EAAOC,OAAU34B,CACrC,CAGM,GAAIkvB,EAAS0B,OAAS1B,EAAS2B,MAAO,CAKpC,IAJAkB,GAAc,EAGd6D,EAAKzE,EAAM,EACJyE,KACL5D,EAAS4D,GAAM,GAGb1G,EAAS0B,OACXnD,EAAOlB,iBAAiB,YAAaqG,GAGnC1D,EAAS2B,QACXpD,EAAOlB,iBAAiB,QAASyG,GACjCvF,EAAOiK,MAAMkB,wBAA0B,oBAGzCnL,EAAOlB,iBAAiB,iBAAkB,SAASsM,IACjDpL,EAAOqL,oBAAoB,iBAAkBD,GAC7CpL,EAAOqL,oBAAoB,YAAalG,GACxCnF,EAAOqL,oBAAoB,QAAS9F,GACpClB,OAAU9xB,CACpB,EACA,CAEMlB,EAAI,EAEkB,IAAlBowB,EAASgB,MACXqI,EAAkBvM,OAAOgB,WACzBwL,EAAmBxM,OAAOsB,eAE1BiL,EAAkBvM,OAAOC,aACzBuM,EAAmBxM,OAAOa,gBAG5B,IAMIiM,EAAsB,SAA8B55B,EAAM65B,GAC5DrK,EAASpa,QAAQ,SAAU4T,GACzBA,EAAG4Q,oBAAoB55B,EAAM65B,EACvC,EAAWz3B,KACX,EAEU03B,EAAwB,SAASA,IACnCF,EAAoB,iBAAkBE,GACtCR,EAAiBnL,EAAMuB,GAC/B,GAf6B,SAA2B1vB,EAAM65B,GACtDrK,EAASpa,QAAQ,SAAU4T,GACzBA,EAAGqE,iBAAiBrtB,EAAM65B,EACpC,EAAWz3B,KACX,CAaMirB,CAAiB,iBAAkByM,GACnC3L,EAAMuB,GAAW2J,EAAgB,SAASU,IACxC,GAAIn6B,GAAKowB,EAASC,KAAKxvB,OAKrB,OAJA64B,EAAiBnL,EAAMuB,IACvBoJ,EAAU,iBAAiB,GAC3Bc,EAAoB,iBAAkBE,eAC/B3L,EAAMuB,GAGf2C,GAAa,IAAK1C,MAAQ2E,UAC1B,IAAI0F,EAAQvF,EAAQzE,EAASC,KAAKrwB,IAC9Bq6B,GAAYnB,EAAU,kBAAkB,EAAM,CAChDlF,KAAM5D,EAASC,KAAKrwB,GACpBo6B,MAAOA,IAET,GAAI3F,KAAgB4F,EAOlB,OANAX,EAAiBnL,EAAMuB,IACvBM,EAASkB,QACT4H,EAAU,kBAAkB,GAC5BA,EAAU,iBAAiB,GAC3Bc,EAAoB,iBAAkBE,eAC/B3L,EAAMuB,GAGf9vB,IACAuuB,EAAMuB,GAAW2J,EAAgBU,EAAM/J,EAASgB,KACxD,EAAShB,EAASgB,KAnKlB,CAoKA,CAGIjH,EAthCJ,CA4LI,SAAS2I,EAAgB1zB,EAAKC,GAC5B,MAAO,QACY,IAAhBC,KAAKogB,UAAgB4a,UAAY,KACjB,GAAhBh7B,KAAKogB,SAAgB,IAAI4a,UAAY,MACrCh7B,KAAKogB,UAAYrgB,EAAMD,GAAOA,GAAKk7B,UAAY,IACxD,CAs1BA,EAEE3K,EAAUjB,YAAcA,EACxBiB,EAAUR,YAAcA,EACxBQ,EAAU4K,KAAO,WACf,GAAIhM,EACF,IAAK,IAAIuB,KAAWvB,EAClBrB,OAAOa,eAAeQ,EAAMuB,GAGpC,EAM8C0K,GAAOC,QACjDD,WAAiB7K,EAEjBlB,EAAOkB,UAAYA,CAEtB,CAloCD,CAkoCGntB,iCC7sCGk4B,GAAsBA,EAC1BC,OACAC,aAAa,WAEb,MAAMC,EAAWC,EAAuB,MA6ExC,OA3EAC,EAAU,KACR,IAAKF,EAASG,QAAS,OAEvB,MAAMC,EAAkBA,KACtB,MAAMC,EAAiBL,EAASG,QAChC,IAAKE,EAAgB,OAGrBA,EAAeC,kBAEf,MAAMC,EAAY97B,KAAKD,IAAIC,KAAKF,OAAOu7B,EAAKx5B,IAAIk6B,GAAOA,EAAI,KAAM,GAC3DC,EAAYh8B,KAAKD,OAAOs7B,EAAKx5B,IAAIk6B,GAAOA,EAAI,IAAK,GAGjDrJ,EAASoJ,IAAcE,EAAY,EAAI,GAAKh8B,KAAKqgB,IAAI2b,EAAYF,GAejEvL,EAA6B,CACjCQ,KAAMsK,EAAK35B,UAAcq6B,EAAI,GAAK,GAClCxK,SAAU,EACVH,aAAeqE,GACE,IAAXA,EAAqB,GAClB,GAAKz1B,KAAKqgB,IAAIoV,EAASqG,GAAapJ,EAE7C1B,WAAY,yBACZE,MApB4B+K,KAC5B,MAAMC,EAAStO,OAAOuO,WAAW,gCAAgCC,QAGjE,OAAOn4B,EAAOmU,MACZ8jB,EAAS,IAAuB,IAAhBl8B,KAAKogB,SAAkB,IAAuB,IAAhBpgB,KAAKogB,SACnD,IAAuB,IAAhBpgB,KAAKogB,SACI,IAAhBpgB,KAAKogB,UACLrc,OAaFsuB,YAAa,EACbf,gBAAiB,cACjBgB,MAAO,SAEPtV,QAAS,mEAETyV,MAAQiC,IACN9G,OAAOyO,SAASC,KAAO5H,EAAK,KAKhCrE,GAAUuL,EAAgBrL,IAIvBjB,SAASiN,MAAMC,KAAK,8BAA+B,eACrDC,KAAK,KACJd,MAIJ,MAAMe,EAAa9O,OAAOuO,WAAW,gCAC/BQ,EAAoBA,KAExBtM,GAAU4K,OACVU,KAKF,OAFAe,EAAWvO,iBAAiB,SAAUwO,GAE/B,KACLD,EAAWhC,oBAAoB,SAAUiC,GACzCtM,GAAU4K,SAEX,CAACI,EAAMC,IAGRsB,EAAA,MAAA,CACEC,IAAKtB,EACL/B,UAAU","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102]}