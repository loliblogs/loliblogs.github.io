{"version":3,"mappings":";+GACA,MAAMA,EAAa,EAAGC,QAAOC,OAAMC,WAAU,MAC3C,IAAKF,EAAO,OAAO,KAEnB,OAAOG,EADSD,EAAU,aAAe,oBACvB,CAAED,OAAMG,wBAAyB,CAAEC,OAAQL,MAE/DD,EAAWO,sBAAwB,KAAM,EACzC,IAAIC,EAAsBR,ECL1B,MAAMS,EAAkC,IAAIC,IACzC,IAACC,EAAkBC,GAAYC,MAAOC,EAAWC,GAASC,QAASC,KAAaC,IAAaC,aAC9F,IAAKP,EAAQQ,aAAa,OAAQ,OAClC,IAAK,MAAOC,EAAKpB,KAAUqB,OAAOC,QAAQL,GACxCH,EAAMM,GAAOjB,EAAEJ,EAAY,CAAEC,QAAOC,KAAMmB,IAG5C,GADiBT,EAAQY,QAAQC,cACjB,CACd,MAAMC,OAAEA,SAAgBC,EAAAd,UAAA,MAAAa,gBAACE,OAAO,gCAAiB,OAAAF,WAAAG,0BACjD,IAAIC,EAAUC,KAAKC,MACjBpB,EAAQY,QAAQC,eAElB,IAAK,MAAOQ,EAAUC,KAAaZ,OAAOC,QAAQO,GAChD,GAAIK,MAAMC,QAAQF,GAChBA,EAASG,QAAQ,EAAEC,EAAIC,MACrB,MAAMC,EAAWzB,EAAMkB,GAAUM,GACjC,IAAIE,EAAgBD,EAKpB,GAJiC,iBAAtBD,IACTE,EAAgBD,EAAS,GACzBD,EAAoBC,EAAS,KAE1B/B,EAAgBiC,IAAIJ,GAAK,CAC5B,MAAMK,EAAcjB,EAAOe,GAC3BhC,EAAgBmC,IAAIN,EAAIK,EAC1B,CACA5B,EAAMkB,GAAUM,GAAqB9B,EAAgBoC,IAAIP,SAEtD,CACL,IAAK7B,EAAgBiC,IAAIR,GAAW,CAClC,MAAMS,EAAcjB,EAAOX,EAAMkB,IACjCxB,EAAgBmC,IAAIV,EAAUS,EAChC,CACA5B,EAAMkB,GAAYxB,EAAgBoC,IAAIX,EACxC,CAEJ,CACA,MAAMY,EAAQ1C,EACZU,EACAC,EACY,MAAZE,EAAmBb,EAAEJ,EAAY,CAAEC,MAAOgB,IAAcA,GAE3C,SAAXE,GACFP,EAAQmC,UAAY,GACpBC,EAAOF,EAAOlC,IAEdT,EAAQ2C,EAAOlC,GAEjBA,EAAQqC,iBAAiB,gBAAiB,IAAMD,EAAO,KAAMpC,GAAU,CAAEsC,MAAM","names":["StaticHtml","value","name","hydrate","h","dangerouslySetInnerHTML","__html","shouldComponentUpdate","static_html_default","sharedSignalMap","Map","client_default","element","async","Component","props","default","children","slotted","client","hasAttribute","key","Object","entries","dataset","preactSignals","signal","__vitePreload","import","__VITE_PRELOAD__","signals","JSON","parse","propName","signalId","Array","isArray","forEach","id","indexOrKeyInProps","mapValue","valueOfSignal","has","signalValue","set","get","child","innerHTML","render","addEventListener","once"],"ignoreList":[0,1],"sources":["../../node_modules/.pnpm/@astrojs+preact@4.1.1_@babel+core@7.28.3_@types+node@24.7.1_jiti@2.6.1_lightningcss@1.3_448f0857831896d915f709da2dddeac2/node_modules/@astrojs/preact/dist/static-html.js","../../node_modules/.pnpm/@astrojs+preact@4.1.1_@babel+core@7.28.3_@types+node@24.7.1_jiti@2.6.1_lightningcss@1.3_448f0857831896d915f709da2dddeac2/node_modules/@astrojs/preact/dist/client.js"],"sourcesContent":["import { h } from \"preact\";\nconst StaticHtml = ({ value, name, hydrate = true }) => {\n  if (!value) return null;\n  const tagName = hydrate ? \"astro-slot\" : \"astro-static-slot\";\n  return h(tagName, { name, dangerouslySetInnerHTML: { __html: value } });\n};\nStaticHtml.shouldComponentUpdate = () => false;\nvar static_html_default = StaticHtml;\nexport {\n  static_html_default as default\n};\n","import { h, hydrate, render } from \"preact\";\nimport StaticHtml from \"./static-html.js\";\nconst sharedSignalMap = /* @__PURE__ */ new Map();\nvar client_default = (element) => async (Component, props, { default: children, ...slotted }, { client }) => {\n  if (!element.hasAttribute(\"ssr\")) return;\n  for (const [key, value] of Object.entries(slotted)) {\n    props[key] = h(StaticHtml, { value, name: key });\n  }\n  let signalsRaw = element.dataset.preactSignals;\n  if (signalsRaw) {\n    const { signal } = await import(\"@preact/signals\");\n    let signals = JSON.parse(\n      element.dataset.preactSignals\n    );\n    for (const [propName, signalId] of Object.entries(signals)) {\n      if (Array.isArray(signalId)) {\n        signalId.forEach(([id, indexOrKeyInProps]) => {\n          const mapValue = props[propName][indexOrKeyInProps];\n          let valueOfSignal = mapValue;\n          if (typeof indexOrKeyInProps !== \"string\") {\n            valueOfSignal = mapValue[0];\n            indexOrKeyInProps = mapValue[1];\n          }\n          if (!sharedSignalMap.has(id)) {\n            const signalValue = signal(valueOfSignal);\n            sharedSignalMap.set(id, signalValue);\n          }\n          props[propName][indexOrKeyInProps] = sharedSignalMap.get(id);\n        });\n      } else {\n        if (!sharedSignalMap.has(signalId)) {\n          const signalValue = signal(props[propName]);\n          sharedSignalMap.set(signalId, signalValue);\n        }\n        props[propName] = sharedSignalMap.get(signalId);\n      }\n    }\n  }\n  const child = h(\n    Component,\n    props,\n    children != null ? h(StaticHtml, { value: children }) : children\n  );\n  if (client === \"only\") {\n    element.innerHTML = \"\";\n    render(child, element);\n  } else {\n    hydrate(child, element);\n  }\n  element.addEventListener(\"astro:unmount\", () => render(null, element), { once: true });\n};\nexport {\n  client_default as default\n};\n"],"file":"_astro/client.Pa2-Rdeh.js"}