{"version":3,"file":"DecryptClient.h_d9nE6s.js","sources":["../../src/components/DecryptClient.tsx"],"sourcesContent":["/**\n * 客户端解密组件\n * 只包含逻辑，不渲染 UI（UI 由PostPage条件编译）\n * \"No special cases\" - Linus\n */\n\nimport { useEffect } from 'react';\nimport argon2Worker from '@/utils/argon2-worker?worker';\n\nimport type { EncryptedPayload, Argon2WorkerMessage, Argon2WorkerResponse } from '@/types/encryption';\n\nexport default function DecryptClient() {\n  useEffect(() => {\n    // 检测加密内容 - 直接从元素内容读取\n    const markdownBody = document.querySelector('[data-markdown]');\n    const tocWrapper = document.querySelector('[data-toc-encrypted]');\n\n    // 获取加密数据 - JSON字符串直接作为内容\n    const contentData = markdownBody?.textContent ? markdownBody.textContent.trim() : null;\n    const tocData = tocWrapper?.textContent ? tocWrapper.textContent.trim() : null;\n\n    // 没有加密内容就退出\n    if (!contentData && !tocData) return;\n\n    let worker: Worker | null = null;\n\n    // base64 解码工具\n    const base64ToUint8 = (b64: string) =>\n      Uint8Array.from(atob(b64), c => c.charCodeAt(0));\n\n    // 抖动动画工具函数\n    const shakeElement = (element: HTMLElement) => {\n      // 移除旧的动画类（如果存在）\n      element.classList.remove('animate-[shake_0.35s_ease-in-out]');\n      void element.offsetHeight; // 强制reflow\n      // 添加动画类触发新动画\n      element.classList.add('animate-[shake_0.35s_ease-in-out]');\n      // 不需要清理 - CSS动画只播放一次\n    };\n\n    // 解密所有块\n    async function decryptAll(password: string) {\n      // 解析加密数据\n      const contentPayload = contentData ? JSON.parse(contentData) as EncryptedPayload : null;\n      const tocPayload = tocData ? JSON.parse(tocData) as EncryptedPayload : null;\n\n      // 边界检查 - 没有加密块就直接返回\n      if (!contentPayload && !tocPayload) {\n        return;  // 正常情况，没有需要解密的内容\n      }\n\n      // 使用第一个payload的 salt（所有块共享同一个 salt）\n      const firstPayload = contentPayload ?? tocPayload;\n      if (!firstPayload) return;\n\n      const salt = base64ToUint8(firstPayload.s);\n\n      worker ??= new argon2Worker();\n\n      worker.postMessage({\n        type: 'DERIVE_KEY',\n        password,\n        salt,\n      } satisfies Argon2WorkerMessage);\n\n      const hash = await new Promise<Uint8Array>((resolve, reject) => {\n        if (!worker) {\n          reject(new Error('Worker not initialized'));\n          return;\n        }\n\n        worker.onmessage = (e: MessageEvent<Argon2WorkerResponse>) => {\n          if (e.data.type === 'KEY_DERIVED') {\n            resolve(e.data.key);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        };\n        worker.onerror = (e: ErrorEvent) => {\n          worker?.terminate();\n          worker = null;\n          reject(new Error(e.message, {\n            cause: e.error,\n          }));\n        };\n      });\n\n      // 导入密钥供 WebCrypto 使用\n      const key = await crypto.subtle.importKey(\n        'raw',\n        new Uint8Array(hash),\n        'AES-GCM',\n        false,\n        ['decrypt'],\n      );\n\n      // 解密函数\n      const decrypt = async (payload: EncryptedPayload) => {\n        const nonce = base64ToUint8(payload.n);\n        const ciphertext = base64ToUint8(payload.c);  // 包含AuthTag\n\n        // AES-GCM 解密（自动验证完整性）\n        // 如果数据被篡改，decrypt会抛出异常\n        const decrypted = await crypto.subtle.decrypt(\n          { name: 'AES-GCM', iv: nonce },\n          key,\n          ciphertext,\n        );\n\n        return new TextDecoder().decode(decrypted);\n      };\n\n      // 恢复文章内容\n      if (contentPayload && markdownBody) {\n        const html = await decrypt(contentPayload);\n        const range = document.createRange();\n        range.selectNode(markdownBody);\n        const fragment = range.createContextualFragment(html);\n        markdownBody.replaceChildren(fragment);\n        markdownBody.classList.remove('hidden');\n        // 添加淡入动画\n        markdownBody.classList.add('animate-[fade-in_0.6s_ease-out]');\n      }\n\n      // 恢复目录\n      if (tocPayload && tocWrapper) {\n        const html = await decrypt(tocPayload);\n        // 使用 Range + DocumentFragment 安全替换整个节点\n        const range = document.createRange();\n        range.selectNode(tocWrapper);\n        const fragment = range.createContextualFragment(html);\n\n        // 删除占位符\n        const placeholder = document.querySelector('[data-toc-placeholder]');\n        placeholder?.remove();\n\n        // 替换加密容器\n        tocWrapper.replaceWith(fragment);\n\n        // 添加淡入动画到新插入的目录\n        const newToc = document.getElementById('toc');\n        if (newToc) {\n          newToc.classList.add('animate-[fade-in_0.6s_ease-out]');\n        }\n      }\n\n      // 所有解密完成后，触发统一事件\n      window.dispatchEvent(new CustomEvent('content-decrypted'));\n      worker.terminate();\n    }\n\n    // 获取必要的DOM元素 - 只查询一次\n    const button = document.getElementById('decrypt-button') as HTMLButtonElement | null;\n    const input = document.getElementById('decrypt-password') as HTMLInputElement | null;\n    const inputGroup = document.getElementById('input-group');\n    const errorRegion = document.getElementById('decrypt-error');\n    const errorText = document.getElementById('error-text');\n\n    // 防抖标记\n    let isDecrypting = false;\n\n    const setBusy = (busy: boolean) => {\n      if (busy) {\n        button?.setAttribute('aria-busy', 'true');\n        input?.setAttribute('aria-busy', 'true');\n      } else {\n        button?.removeAttribute('aria-busy');\n        input?.removeAttribute('aria-busy');\n      }\n    };\n\n    const showError = (message: string) => {\n      input?.setAttribute('aria-invalid', 'true');\n      if (errorRegion && errorText) {\n        errorText.textContent = message;\n        errorRegion.classList.remove('hidden');\n      }\n    };\n\n    const clearError = () => {\n      input?.setAttribute('aria-invalid', 'false');\n      if (errorRegion) {\n        errorRegion.classList.add('hidden');\n      }\n      if (errorText) errorText.textContent = '';\n    };\n\n    const handleDecrypt = () => {\n      // 防止重复提交\n      if (isDecrypting) return;\n      const password = input?.value.trim();\n      if (!password) {\n        // 抖动输入框组\n        if (inputGroup) {\n          shakeElement(inputGroup);\n        }\n        showError(input?.placeholder ?? '请输入密码');\n        input?.focus();\n        return;\n      }\n\n      // 开始解密，设置防抖\n      isDecrypting = true;\n      clearError();\n\n      // 获取需要的DOM元素\n      const buttonText = document.getElementById('button-text');\n      const buttonLoading = document.getElementById('button-loading');\n\n      // 开始解密 - 立即显示Loading\n      button?.setAttribute('disabled', 'true');\n      setBusy(true);\n      if (buttonText) buttonText.classList.add('opacity-0');\n      if (buttonLoading) {\n        buttonLoading.classList.remove('hidden');\n        buttonLoading.classList.add('flex'); // 显示flex布局\n      }\n\n      void decryptAll(password)\n        .then(() => {\n          // 解密成功 - 淡出动画后删除\n          const decryptPanel = document.getElementById('decrypt-panel');\n          if (decryptPanel) {\n            // 添加淡出动画\n            decryptPanel.classList.add('animate-[fade-out-up_0.5s_ease-out_forwards]');\n            // 监听动画结束事件\n            decryptPanel.addEventListener('animationend', () => {\n              decryptPanel.remove();\n            }, { once: true });  // 自动移除监听器\n          }\n        }).catch((err: unknown) => {\n          console.error('解密失败:', err);\n\n          // 恢复按钮状态\n          button?.removeAttribute('disabled');\n          setBusy(false);\n          if (buttonText) buttonText.classList.remove('opacity-0');\n          if (buttonLoading) {\n            buttonLoading.classList.add('hidden');\n            buttonLoading.classList.remove('flex');\n          }\n\n          // 抖动输入框组表示错误\n          if (inputGroup) {\n            shakeElement(inputGroup);\n          }\n\n          // 错误播报\n          showError('密码错误或内容损坏，请重试');\n\n          // 聚焦输入框并选中文本\n          input?.focus();\n          input?.select();\n        }).finally(() => {\n          // 重置防抖标记\n          isDecrypting = false;\n        });\n    };\n\n    // 绑定事件\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') {\n        handleDecrypt();\n      }\n    };\n\n    button?.addEventListener('click', handleDecrypt);\n    input?.addEventListener('keydown', handleKeydown);\n\n    // 自动聚焦输入框\n    input?.focus();\n\n    // 清理函数\n    return () => {\n      button?.removeEventListener('click', handleDecrypt);\n      input?.removeEventListener('keydown', handleKeydown);\n      worker?.terminate();\n    };\n  }, []);\n\n  // 不渲染任何内容 - UI由PostPage条件编译处理\n  return null;\n}\n"],"names":["DecryptClient","useEffect","markdownBody","document","querySelector","tocWrapper","contentData","textContent","trim","tocData","worker","base64ToUint8","b64","Uint8Array","from","atob","c","charCodeAt","shakeElement","element","classList","remove","offsetHeight","add","button","getElementById","input","inputGroup","errorRegion","errorText","isDecrypting","setBusy","busy","setAttribute","removeAttribute","showError","message","handleDecrypt","password","value","placeholder","focus","buttonText","buttonLoading","async","contentPayload","JSON","parse","tocPayload","firstPayload","salt","s","argon2Worker","postMessage","type","hash","Promise","resolve","reject","onmessage","e","data","key","Error","error","onerror","terminate","cause","crypto","subtle","importKey","decrypt","payload","nonce","n","ciphertext","decrypted","name","iv","TextDecoder","decode","html","range","createRange","selectNode","fragment","createContextualFragment","replaceChildren","replaceWith","newToc","window","dispatchEvent","CustomEvent","decryptAll","then","decryptPanel","addEventListener","once","catch","err","console","select","finally","handleKeydown","removeEventListener"],"mappings":"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"}