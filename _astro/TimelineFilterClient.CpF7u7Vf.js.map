{"version":3,"file":"TimelineFilterClient.CpF7u7Vf.js","sources":["../../src/utils/date-helpers.ts","../../src/components/TimelineFilterClient.tsx"],"sourcesContent":["/**\n * 日期格式化 - 极简版\n *\n * \"Talk is cheap. Show me the code.\" - Linus\n * 25行解决问题，不需要500行\n */\n\n/**\n * 格式化日期为 YYYY-MM-DD\n *\n * @param date 日期输入\n * @returns YYYY-MM-DD 格式的日期字符串\n */\nexport function formatDate(date: Date | string | number): string {\n  const d = new Date(date);\n\n  if (isNaN(d.getTime())) {\n    return '';\n  }\n\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n\n  return `${year}-${month}-${day}`;\n}\n\n/**\n * 格式化日期为 MM/DD\n *\n * @param date 日期对象\n * @returns MM/DD 格式的字符串\n */\nexport function formatMonthDay(date: Date): string {\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${month}/${day}`;\n}\n","import { useEffect } from 'react';\nimport { formatDate } from '@/utils/date-helpers';\n\n// ============================================================================\n// 类型定义\n// ============================================================================\n\ninterface DateRange {\n  startDate: Date;\n  endDate: Date;\n}\n\ninterface TimelineElements {\n  track: HTMLDivElement;\n  thumbStart: HTMLDivElement;\n  thumbEnd: HTMLDivElement;\n  inputStart: HTMLInputElement;\n  inputEnd: HTMLInputElement;\n  labelStart: HTMLElement;\n  labelEnd: HTMLElement;\n  presets: HTMLElement;\n  sections: HTMLElement[];\n  emptyState: HTMLElement;\n  visibleCount: HTMLElement;\n  customSummary: HTMLElement;\n  customDetails: HTMLDetailsElement;\n}\n\n// ============================================================================\n// 常量\n// ============================================================================\n\n/**\n * 键盘控制增量配置\n * 使用 Infinity/-Infinity 配合 Math.min/max 实现边界值\n */\nconst KEYBOARD_DELTA: Record<string, number> = {\n  ArrowLeft: -1,\n  ArrowDown: -1,\n  ArrowRight: 1,\n  ArrowUp: 1,\n  PageDown: -10,\n  PageUp: 10,\n  Home: -Infinity,\n  End: Infinity,\n};\n\n// ============================================================================\n// 纯工具函数（无副作用，无外部依赖）\n// ============================================================================\n\nfunction parseDate(value: string | null): Date | null {\n  if (!value) return null;\n  const parsed = new Date(value);\n  return Number.isNaN(parsed.getTime()) ? null : parsed;\n}\n\nfunction dateToPercent(date: Date, minTime: number, maxTime: number): number {\n  if (maxTime === minTime) return 50;\n  const percent = ((date.getTime() - minTime) / (maxTime - minTime)) * 100;\n  return Math.max(0, Math.min(100, percent));\n}\n\nfunction percentToDate(percent: number, minTime: number, maxTime: number): Date {\n  const time = minTime + ((maxTime - minTime) * percent) / 100;\n  return new Date(time);\n}\n\nfunction getYearMonth(date: Date): number {\n  return date.getFullYear() * 100 + (date.getMonth() + 1);\n}\n\n/**\n * 滑块交换逻辑的唯一实现 - 消除所有特殊情况\n *\n * \"好品味\"原则：8行重复代码 → 4行统一逻辑\n */\nfunction computeNewRange(\n  whichThumb: 'start' | 'end',\n  newDate: Date,\n  currentRange: DateRange,\n): DateRange {\n  const { startDate, endDate } = currentRange;\n\n  if (whichThumb === 'start') {\n    return newDate > endDate\n      ? { startDate: endDate, endDate: newDate }\n      : { startDate: newDate, endDate };\n  }\n\n  return newDate < startDate\n    ? { startDate: newDate, endDate: startDate }\n    : { startDate, endDate: newDate };\n}\n\n// ============================================================================\n// DOM 查询\n// ============================================================================\n\nfunction queryTimelineElements(timeline: HTMLElement): TimelineElements | null {\n  const track = timeline.querySelector<HTMLDivElement>('[data-role=\"track\"]');\n  const thumbStart = timeline.querySelector<HTMLDivElement>('[data-role=\"thumb-start\"]');\n  const thumbEnd = timeline.querySelector<HTMLDivElement>('[data-role=\"thumb-end\"]');\n  const inputStart = timeline.querySelector<HTMLInputElement>('[data-role=\"input-start\"]');\n  const inputEnd = timeline.querySelector<HTMLInputElement>('[data-role=\"input-end\"]');\n  const labelStart = timeline.querySelector<HTMLElement>('[data-role=\"label-start\"]');\n  const labelEnd = timeline.querySelector<HTMLElement>('[data-role=\"label-end\"]');\n  const presets = timeline.querySelector<HTMLElement>('[data-role=\"presets\"]');\n  const sections = Array.from(timeline.querySelectorAll<HTMLElement>('[data-role=\"section\"]'));\n  const emptyState = timeline.querySelector<HTMLElement>('[data-role=\"empty\"]');\n  const visibleCount = timeline.querySelector<HTMLElement>('[data-role=\"count-visible\"]');\n  const customSummary = timeline.querySelector<HTMLElement>('[data-role=\"custom\"] > summary');\n  const customDetails = customSummary?.closest('details') as HTMLDetailsElement | null;\n\n  if (!track || !thumbStart || !thumbEnd || !inputStart || !inputEnd || !labelStart\n    || !labelEnd || !presets || sections.length === 0 || !emptyState || !visibleCount\n    || !customSummary || !customDetails) {\n    console.error('TimelineFilterClient: missing required elements');\n    return null;\n  }\n\n  return {\n    track,\n    thumbStart,\n    thumbEnd,\n    inputStart,\n    inputEnd,\n    labelStart,\n    labelEnd,\n    presets,\n    sections,\n    emptyState,\n    visibleCount,\n    customSummary,\n    customDetails,\n  };\n}\n\n// ============================================================================\n// 初始化\n// ============================================================================\n\nfunction initializeRangeFromUrl(minTime: number, maxTime: number): DateRange {\n  const params = new URLSearchParams(window.location.search);\n  let startDate = parseDate(params.get('start')) ?? new Date(minTime);\n  let endDate = parseDate(params.get('end')) ?? new Date(maxTime);\n\n  // 修正非法范围\n  if (startDate > endDate) {\n    startDate = new Date(minTime);\n    endDate = new Date(maxTime);\n  }\n\n  return { startDate, endDate };\n}\n\n// ============================================================================\n// 视觉更新（CSS 变量 + ARIA）\n// ============================================================================\n\nfunction updateSliderVisuals(\n  elements: TimelineElements,\n  range: DateRange,\n  minTime: number,\n  maxTime: number,\n): void {\n  const startPercent = dateToPercent(range.startDate, minTime, maxTime);\n  const endPercent = dateToPercent(range.endDate, minTime, maxTime);\n\n  elements.track.style.setProperty('--slider-start', `${startPercent}%`);\n  elements.track.style.setProperty('--slider-end', `${endPercent}%`);\n  elements.track.style.setProperty('--slider-width', `${endPercent - startPercent}%`);\n\n  elements.thumbStart.setAttribute('aria-valuenow', String(Math.round(startPercent)));\n  elements.thumbEnd.setAttribute('aria-valuenow', String(Math.round(endPercent)));\n  elements.thumbStart.setAttribute('aria-valuetext', formatDate(range.startDate));\n  elements.thumbEnd.setAttribute('aria-valuetext', formatDate(range.endDate));\n}\n\n// ============================================================================\n// DOM 同步（标签、输入、过滤、URL）\n// ============================================================================\n\nfunction syncRangeToView(\n  elements: TimelineElements,\n  range: DateRange,\n): void {\n  // 更新文本和输入\n  const formattedStart = formatDate(range.startDate);\n  const formattedEnd = formatDate(range.endDate);\n\n  elements.labelStart.textContent = formattedStart;\n  elements.labelEnd.textContent = formattedEnd;\n  elements.inputStart.value = formattedStart;\n  elements.inputEnd.value = formattedEnd;\n\n  // 过滤可见项\n  const visibleItemCount = filterSectionsByRange(elements.sections, range);\n\n  elements.emptyState.classList.toggle('hidden', visibleItemCount > 0);\n  elements.visibleCount.textContent = String(visibleItemCount);\n\n  // 更新 URL（不包括 focus 参数）\n  const params = new URLSearchParams(window.location.search);\n  params.set('start', formattedStart);\n  params.set('end', formattedEnd);\n  const newUrl = `${window.location.pathname}?${params.toString()}`;\n  window.history.replaceState({}, '', newUrl);\n}\n\n/**\n * 按年月过滤 sections，返回可见项数量\n *\n * 优化策略：\n * - 完全在范围外的月份：O(1) 隐藏\n * - 完全在范围内的月份：O(1) 显示\n * - 边界月份：O(items) 逐项检查\n */\nfunction filterSectionsByRange(sections: HTMLElement[], range: DateRange): number {\n  const startTime = range.startDate.getTime();\n  const endTime = range.endDate.getTime();\n  const startYM = getYearMonth(range.startDate);\n  const endYM = getYearMonth(range.endDate);\n\n  let visibleItemCount = 0;\n\n  for (const section of sections) {\n    const sectionYM = Number(section.dataset.ym);\n    const items = section.querySelectorAll<HTMLElement>('[data-role=\"item\"]');\n\n    if (sectionYM < startYM || sectionYM > endYM) {\n      // 范围外 - 隐藏所有\n      section.classList.add('hidden');\n      for (const item of items) {\n        item.classList.add('hidden');\n      }\n    } else if (sectionYM === startYM || sectionYM === endYM) {\n      // 边界月份 - 逐项检查\n      let hasVisible = false;\n      for (const item of items) {\n        const timestamp = Number(item.dataset.timestamp);\n        const isVisible = !Number.isNaN(timestamp) && timestamp >= startTime && timestamp <= endTime;\n        item.classList.toggle('hidden', !isVisible);\n        if (isVisible) {\n          visibleItemCount++;\n          hasVisible = true;\n        }\n      }\n      section.classList.toggle('hidden', !hasVisible);\n    } else {\n      // 范围内 - 显示所有\n      section.classList.remove('hidden');\n      for (const item of items) {\n        item.classList.remove('hidden');\n      }\n      visibleItemCount += items.length;\n    }\n  }\n\n  return visibleItemCount;\n}\n\n// ============================================================================\n// 焦点高亮（一次性参数）\n// ============================================================================\n\nfunction highlightFocusedItem(elements: TimelineElements, range: DateRange): void {\n  const params = new URLSearchParams(window.location.search);\n  const focusValue = params.get('focus');\n  const focusDate = parseDate(focusValue);\n  if (!focusDate) return;\n\n  // 立即清理 focus 参数\n  params.delete('focus');\n  const cleanUrl = `${window.location.pathname}?${params.toString()}`;\n  window.history.replaceState({}, '', cleanUrl);\n\n  const startTime = range.startDate.getTime();\n  const endTime = range.endDate.getTime();\n  const focusTime = focusDate.getTime();\n\n  if (focusTime < startTime || focusTime > endTime) return;\n\n  // 查找最接近的可见项\n  let closestItem: HTMLElement | null = null;\n  let smallestDiff = Infinity;\n\n  for (const section of elements.sections) {\n    if (section.classList.contains('hidden')) continue;\n\n    for (const item of section.querySelectorAll<HTMLElement>('[data-role=\"item\"]')) {\n      if (item.classList.contains('hidden')) continue;\n      const timestamp = Number(item.dataset.timestamp);\n      if (Number.isNaN(timestamp)) continue;\n      const diff = Math.abs(timestamp - focusTime);\n      if (diff < smallestDiff) {\n        smallestDiff = diff;\n        closestItem = item;\n      }\n    }\n  }\n\n  if (!closestItem) return;\n\n  closestItem.scrollIntoView({ behavior: 'smooth', block: 'center' });\n  closestItem.classList.add('animate-[highlight-flash_2s_ease-in-out]');\n  window.setTimeout(() => {\n    closestItem.classList.remove('animate-[highlight-flash_2s_ease-in-out]');\n  }, 2000);\n}\n\n// ============================================================================\n// 事件处理器设置\n// ============================================================================\n\nfunction setupDragHandlers(\n  thumb: HTMLDivElement,\n  whichThumb: 'start' | 'end',\n  elements: TimelineElements,\n  currentRange: { startDate: Date; endDate: Date },\n  updateRange: (range: DateRange) => void,\n  minTime: number,\n  maxTime: number,\n  signal: AbortSignal,\n): void {\n  function beginDrag(event: MouseEvent | TouchEvent): void {\n    event.preventDefault();\n    thumb.focus();\n\n    const isTouch = 'touches' in event;\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove';\n    const endEvent = isTouch ? 'touchend' : 'mouseup';\n    const trackRect = elements.track.getBoundingClientRect();\n\n    const handleMove = (ev: MouseEvent | TouchEvent) => {\n      const clientX = 'touches' in ev ? ev.touches[0]?.clientX : ev.clientX;\n      if (clientX == null) return;\n\n      const percent = Math.max(0, Math.min(100, ((clientX - trackRect.left) / trackRect.width) * 100));\n      const newDate = percentToDate(percent, minTime, maxTime);\n      const newRange = computeNewRange(whichThumb, newDate, currentRange);\n      updateRange(newRange);\n    };\n\n    const handleEnd = () => {\n      document.removeEventListener(moveEvent, handleMove);\n      document.removeEventListener(endEvent, handleEnd);\n    };\n\n    document.addEventListener(moveEvent, handleMove, { passive: false });\n    document.addEventListener(endEvent, handleEnd);\n  }\n\n  thumb.addEventListener('mousedown', beginDrag, { signal });\n  thumb.addEventListener('touchstart', beginDrag, { signal });\n}\n\nfunction setupDateInputs(\n  elements: TimelineElements,\n  currentRange: { startDate: Date; endDate: Date },\n  updateRange: (range: DateRange) => void,\n  signal: AbortSignal,\n): void {\n  const handleStartChange = (e: Event) => {\n    const value = (e.target as HTMLInputElement).value;\n    const date = parseDate(value);\n    if (!date || date.getFullYear() < 1000 || date > currentRange.endDate) return;\n    updateRange({ startDate: date, endDate: currentRange.endDate });\n  };\n\n  const handleEndChange = (e: Event) => {\n    const value = (e.target as HTMLInputElement).value;\n    const date = parseDate(value);\n    if (!date || date.getFullYear() < 1000 || date < currentRange.startDate) return;\n    updateRange({ startDate: currentRange.startDate, endDate: date });\n  };\n\n  elements.inputStart.addEventListener('change', handleStartChange, { signal });\n  elements.inputEnd.addEventListener('change', handleEndChange, { signal });\n}\n\nfunction setupPresetButtons(\n  elements: TimelineElements,\n  updateRange: (range: DateRange) => void,\n  minTime: number,\n  maxTime: number,\n  signal: AbortSignal,\n): void {\n  const handleClick = (e: Event) => {\n    const target = (e.target as HTMLElement).closest('button[data-preset]');\n    if (!target) return;\n\n    const now = new Date();\n    const currentYear = now.getFullYear();\n    const preset = target.getAttribute('data-preset');\n\n    switch (preset) {\n      case 'all':\n        updateRange({ startDate: new Date(minTime), endDate: new Date(maxTime) });\n        break;\n      case 'this-year':\n        updateRange({ startDate: new Date(currentYear, 0, 1), endDate: new Date(currentYear, 11, 31) });\n        break;\n      case 'last-year':\n        updateRange({\n          startDate: new Date(currentYear - 1, 0, 1),\n          endDate: new Date(currentYear - 1, 11, 31),\n        });\n        break;\n      case 'last-3m':\n        updateRange({\n          startDate: new Date(now.getFullYear(), now.getMonth() - 3, now.getDate()),\n          endDate: now,\n        });\n        break;\n      case 'last-6m':\n        updateRange({\n          startDate: new Date(now.getFullYear(), now.getMonth() - 6, now.getDate()),\n          endDate: now,\n        });\n        break;\n    }\n  };\n\n  elements.presets.addEventListener('click', handleClick, { signal });\n}\n\nfunction setupKeyboardControl(\n  elements: TimelineElements,\n  currentRange: { startDate: Date; endDate: Date },\n  updateRange: (range: DateRange) => void,\n  minTime: number,\n  maxTime: number,\n  signal: AbortSignal,\n): void {\n  const handleKeyDown = (e: KeyboardEvent) => {\n    const target = e.target as HTMLElement;\n    const isStart = target === elements.thumbStart;\n    const isEnd = target === elements.thumbEnd;\n\n    if (!isStart && !isEnd) return;\n\n    const delta = KEYBOARD_DELTA[e.key];\n    if (delta === undefined) return;\n\n    e.preventDefault();\n\n    const whichThumb = isStart ? 'start' : 'end';\n    const currentDate = isStart ? currentRange.startDate : currentRange.endDate;\n    const currentPercent = dateToPercent(currentDate, minTime, maxTime);\n    const newPercent = Math.max(0, Math.min(100, currentPercent + delta));\n    const newDate = percentToDate(newPercent, minTime, maxTime);\n    const newRange = computeNewRange(whichThumb, newDate, currentRange);\n\n    updateRange(newRange);\n  };\n\n  elements.thumbStart.addEventListener('keydown', handleKeyDown, { signal });\n  elements.thumbEnd.addEventListener('keydown', handleKeyDown, { signal });\n}\n\nfunction setupCustomPanelClose(elements: TimelineElements, signal: AbortSignal): void {\n  const onPointerDown = (e: PointerEvent) => {\n    if (!elements.customDetails.open) return;\n    const target = e.target as Node | null;\n    if (target && !elements.customDetails.contains(target)) {\n      elements.customDetails.open = false;\n    }\n  };\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Escape' && elements.customDetails.open) {\n      elements.customDetails.open = false;\n      elements.customSummary.focus();\n    }\n  };\n\n  document.addEventListener('pointerdown', onPointerDown, { signal });\n  document.addEventListener('keydown', onKeyDown, { signal });\n}\n\n// ============================================================================\n// 主组件（最后 - 组装所有构建块）\n// ============================================================================\n\nexport default function TimelineFilterClient() {\n  useEffect(() => {\n    // ------------------------------------------------------------------------\n    // 1. DOM 查询与验证\n    // ------------------------------------------------------------------------\n\n    const timeline = document.querySelector<HTMLElement>('[data-role=\"timeline\"]');\n    if (!timeline) return;\n\n    const elements = queryTimelineElements(timeline);\n    if (!elements) return;\n\n    const minTime = Number(timeline.getAttribute('data-min-time'));\n    const maxTime = Number(timeline.getAttribute('data-max-time'));\n\n    // ------------------------------------------------------------------------\n    // 2. 状态初始化\n    // ------------------------------------------------------------------------\n\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    let currentRange: DateRange = initializeRangeFromUrl(minTime, maxTime);\n    let rafId: number | null = null;\n\n    // 初始渲染\n    updateSliderVisuals(elements, currentRange, minTime, maxTime);\n    syncRangeToView(elements, currentRange);\n    highlightFocusedItem(elements, currentRange);\n\n    // ------------------------------------------------------------------------\n    // 3. 核心更新函数（视觉立即，DOM 节流）\n    // ------------------------------------------------------------------------\n\n    const updateRange = (newRange: DateRange) => {\n      currentRange = newRange;\n      updateSliderVisuals(elements, currentRange, minTime, maxTime);\n\n      // RAF 节流 DOM 更新\n      if (rafId) cancelAnimationFrame(rafId);\n      rafId = requestAnimationFrame(() => {\n        syncRangeToView(elements, currentRange);\n        rafId = null;\n      });\n    };\n\n    // ------------------------------------------------------------------------\n    // 4. 事件绑定\n    // ------------------------------------------------------------------------\n\n    setupDragHandlers(elements.thumbStart, 'start', elements, currentRange, updateRange, minTime, maxTime, signal);\n    setupDragHandlers(elements.thumbEnd, 'end', elements, currentRange, updateRange, minTime, maxTime, signal);\n    setupDateInputs(elements, currentRange, updateRange, signal);\n    setupPresetButtons(elements, updateRange, minTime, maxTime, signal);\n    setupKeyboardControl(elements, currentRange, updateRange, minTime, maxTime, signal);\n    setupCustomPanelClose(elements, signal);\n\n    // ------------------------------------------------------------------------\n    // 5. 清理\n    // ------------------------------------------------------------------------\n\n    return () => {\n      controller.abort();\n      if (rafId) cancelAnimationFrame(rafId);\n    };\n  }, []);\n\n  return null;\n}\n"],"names":["formatDate","date","d","Date","isNaN","getTime","getFullYear","String","getMonth","padStart","getDate","KEYBOARD_DELTA","ArrowLeft","ArrowDown","ArrowRight","ArrowUp","PageDown","PageUp","Home","Infinity","End","parseDate","value","parsed","Number","dateToPercent","minTime","maxTime","percent","Math","max","min","percentToDate","getYearMonth","computeNewRange","whichThumb","newDate","currentRange","startDate","endDate","updateSliderVisuals","elements","range","startPercent","endPercent","track","style","setProperty","thumbStart","setAttribute","round","thumbEnd","syncRangeToView","formattedStart","formattedEnd","labelStart","textContent","labelEnd","inputStart","inputEnd","visibleItemCount","sections","startTime","endTime","startYM","endYM","section","sectionYM","dataset","ym","items","querySelectorAll","classList","add","item","hasVisible","timestamp","isVisible","toggle","remove","length","filterSectionsByRange","emptyState","visibleCount","params","URLSearchParams","window","location","search","set","newUrl","pathname","toString","history","replaceState","setupDragHandlers","thumb","updateRange","signal","beginDrag","event","preventDefault","focus","isTouch","moveEvent","endEvent","trackRect","getBoundingClientRect","handleMove","ev","clientX","touches","left","width","newRange","handleEnd","document","removeEventListener","addEventListener","passive","TimelineFilterClient","useEffect","timeline","querySelector","presets","Array","from","customSummary","customDetails","closest","console","error","queryTimelineElements","getAttribute","controller","AbortController","get","initializeRangeFromUrl","rafId","focusDate","delete","cleanUrl","focusTime","closestItem","smallestDiff","contains","diff","abs","scrollIntoView","behavior","block","setTimeout","highlightFocusedItem","requestAnimationFrame","e","target","setupDateInputs","now","currentYear","setupPresetButtons","handleKeyDown","isStart","isEnd","delta","key","undefined","currentPercent","setupKeyboardControl","open","setupCustomPanelClose","abort"],"mappings":"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"}